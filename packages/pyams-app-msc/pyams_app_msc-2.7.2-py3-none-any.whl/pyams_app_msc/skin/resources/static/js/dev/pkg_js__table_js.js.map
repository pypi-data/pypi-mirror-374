{"version":3,"file":"pkg_js__table_js.js","mappings":"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","sources":["webpack://pyams_app_msc/./pkg/js/_table.js"],"sourcesContent":["import DataTable from \"datatables.net-bs4\";\nimport \"datatables.net-responsive-bs4\";\nimport \"datatables.net-rowgroup\";\n\nimport french from \"datatables.net-plugins/i18n/fr-FR.mjs\";\n\n\nconst createTable = (table, config, options, callback) => {\n    return new Promise((resolve, reject) => {\n        const data = table.data();\n        let settings = {\n            language: french,\n            responsive: true\n        }\n        // initialize DOM string\n        let dom = '';\n        settings = $.extend({}, settings, data, config);\n        if (settings.buttons) {\n            dom += \"<'row px-4 float-right'B>\";\n        }\n        if (settings.searchBuilder) {\n            dom += \"Q\";\n        }\n        if (settings.searchPanes) {\n            dom += \"P\";\n        }\n        if (settings.searching !== false || settings.lengthChange !== false) {\n            dom += \"<'row px-2'\";\n            if (settings.searching !== false) {\n                dom += \"<'\" + (settings.lengthChange !== false ? \"col-sm-6 col-md-8\" : \"col-sm-12\") + \"'f>\";\n            }\n            if (settings.lengthChange !== false) {\n                dom += \"<'\" + (settings.searching !== false ? \"col-sm-6 col-md-4\" : \"col-sm-12\") + \"'l>\";\n            }\n            dom += \">\";\n        }\n        dom += \"<'row'<'col-sm-12'tr>>\";\n        if (settings.info !== false || settings.paging !== false) {\n            dom += \"<'row px-2 py-1'\";\n            if (settings.info !== false) {\n                dom += \"<'col-sm-12 \" + (settings.paging !== false ? \"col-md-5\" : \"\") + \"'i>\";\n            }\n            if (settings.paging !== false) {\n                dom += \"<'col-sm-12 \" + (settings.info !== false ? \"col-md-7\" : \"\") + \"'p>\";\n            }\n            dom += \">\"\n        }\n        settings.dom = dom;\n        // initialize sorting\n        let order = data.amsDatatableOrder || data.amsOrder;\n        if (typeof order === 'string') {\n            const orders = order.split(';');\n            order = [];\n            for (const col of orders) {\n                const colOrder = col.split(',');\n                colOrder[0] = parseInt(colOrder[0]);\n                order.push(colOrder);\n            }\n        }\n        if (order) {\n            settings.order = order;\n        }\n        // initialize columns\n        const\n            heads = $('thead th', table),\n            columns = [];\n        heads.each((idx, th) => {\n            columns[idx] = $(th).data('ams-column') || {};\n        });\n        const sortables = heads.listattr('data-ams-sortable');\n        for (const iterator of sortables.entries()) {\n            const [idx, sortable] = iterator;\n            if (data.rowReorder) {\n                columns[idx].sortable = false;\n            } else if (sortable !== undefined) {\n                columns[idx].sortable =\n                    typeof sortable === 'string' ? JSON.parse(sortable) : sortable;\n            }\n        }\n        const types = heads.listattr('data-ams-type');\n        for (const iterator of types.entries()) {\n            const [idx, stype] = iterator;\n            if (stype !== undefined) {\n                columns[idx].type = stype;\n            }\n        }\n        settings.columns = columns;\n        // initialize table\n        settings = $.extend({}, settings, options);\n        table.trigger('datatable.init', [table, settings]);\n        const instance = new DataTable(`#${table.attr('id')}`, settings);\n        table.trigger('datatable.finishing', [table, instance, settings]);\n        if (callback) {\n            callback(instance, settings);\n        }\n        if (settings.responsive) {\n            setTimeout(() => {\n                instance.responsive.rebuild();\n                instance.responsive.recalc();\n            }, 100);\n        }\n        table.trigger('datatable.finished', [table, instance, settings]);\n        resolve(table);\n    })\n};\n\n\nconst PyAMS_datatable = {\n\n    init: (tables, options, callback) => {\n\n        // Add autodetect formats\n        const types = DataTable.ext.type;\n\n        types.detect.unshift((data) => {\n            if (data !== null && data.match(/^(0[1-9]|[1-2][0-9]|3[0-1])\\/(0[1-9]|1[0-2])\\/[0-3][0-9]{3}$/)) {\n                return 'date-euro';\n            }\n            return null;\n        });\n\n        types.detect.unshift((data) => {\n            if (data !== null && data.match(/^(0[1-9]|[1-2][0-9]|3[0-1])\\/(0[1-9]|1[0-2])\\/[0-3][0-9]{3} - ([0-1][0-9]|2[0-3]):[0-5][0-9]$/)) {\n                return 'datetime-euro';\n            }\n            return null;\n        });\n\n        // Add sorting methods\n        $.extend(types.order, {\n\n            // numeric values using commas separators\n            \"numeric-comma-asc\": (a, b) => {\n                let x = a.replace(/,/, \".\").replace(/ /g, '');\n                let y = b.replace(/,/, \".\").replace(/ /g, '');\n                x = parseFloat(x);\n                y = parseFloat(y);\n                return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n            },\n            \"numeric-comma-desc\": (a, b) => {\n                let x = a.replace(/,/, \".\").replace(/ /g, '');\n                let y = b.replace(/,/, \".\").replace(/ /g, '');\n                x = parseFloat(x);\n                y = parseFloat(y);\n                return ((x < y) ? 1 : ((x > y) ? -1 : 0));\n            },\n\n            // date-euro column sorter\n            \"date-euro-pre\": (a) => {\n                const trimmed = $.trim(a);\n                let x;\n                if (trimmed !== '') {\n                    const frDate = trimmed.split('/');\n                    x = (frDate[2] + frDate[1] + frDate[0]) * 1;\n                } else {\n                    x = 10000000; // = l'an 1000 ...\n                }\n                return x;\n            },\n            \"date-euro-asc\": (a, b) => {\n                return a - b;\n            },\n            \"date-euro-desc\": (a, b) => {\n                return b - a;\n            },\n\n            // datetime-euro column sorter\n            \"datetime-euro-pre\": (a) => {\n                const trimmed = $.trim(a);\n                let x;\n                if (trimmed !== '') {\n                    const frDateTime = trimmed.split(' - ');\n                    const frDate = frDateTime[0].split('/');\n                    const frTime = frDateTime[1].split(':');\n                    x = (frDate[2] + frDate[1] + frDate[0] + frTime[0] + frTime[1]) * 1;\n                } else {\n                    x = 100000000000; // = l'an 1000 ...\n                }\n                return x;\n            },\n            \"datetime-euro-asc\": (a, b) => {\n                return a - b;\n            },\n            \"datetime-euro-desc\": (a, b) => {\n                return b - a;\n            }\n        });\n\n        Promise.all([\n            import('datatables.net-bs4/css/dataTables.bootstrap4.css'),\n            import('datatables.net-responsive-bs4/css/responsive.bootstrap4.css')\n        ]).then(() => {\n            const $tables = $.map(tables, (elt) => {\n                return new Promise((resolve, reject) => {\n                    const\n                        table = $(elt),\n                        data = table.data(),\n                        config = data.config;\n                    resolve(createTable(table, config, options, callback));\n                })\n            });\n            $.when.apply($, $tables).then();\n        });\n    }\n}\n\n\nexport default PyAMS_datatable;\n"],"names":["DataTable","french","createTable","table","config","options","callback","Promise","resolve","reject","data","settings","language","responsive","dom","$","extend","buttons","searchBuilder","searchPanes","searching","lengthChange","info","paging","order","amsDatatableOrder","amsOrder","orders","split","_iterator","_createForOfIteratorHelper","_step","s","n","done","col","value","colOrder","parseInt","push","err","e","f","heads","columns","each","idx","th","sortables","listattr","_iterator2","entries","_step2","iterator","_iterator4","_slicedToArray","sortable","rowReorder","undefined","JSON","parse","types","_iterator3","_step3","_iterator6","stype","type","trigger","instance","concat","attr","setTimeout","rebuild","recalc","PyAMS_datatable","init","tables","ext","detect","unshift","match","numericCommaAsc","a","b","x","replace","y","parseFloat","numericCommaDesc","dateEuroPre","trimmed","trim","frDate","dateEuroAsc","dateEuroDesc","datetimeEuroPre","frDateTime","frTime","datetimeEuroAsc","datetimeEuroDesc","all","then","$tables","map","elt","when","apply"],"sourceRoot":""}