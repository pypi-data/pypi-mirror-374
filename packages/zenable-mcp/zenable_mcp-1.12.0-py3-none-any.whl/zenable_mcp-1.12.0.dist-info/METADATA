Metadata-Version: 2.4
Name: zenable_mcp
Version: 1.12.0
Summary: MCP client for Zenable conformance checking
Author-email: Zenable <Python@zenable.io>
License: Proprietary
Project-URL: Homepage, https://zenable.io
Project-URL: Documentation, https://docs.zenable.io/
Project-URL: Issues, https://zenable.io/feedback
Keywords: mcp,claude,hooks,conformance,zenable,code-quality,security,compliance,policy-as-code,specifications,spec-driven-development
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: Other/Proprietary License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Requires-Python: >=3.11
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: click>=8.0.0
Requires-Dist: fastmcp
Requires-Dist: gitpython
Requires-Dist: json5
Requires-Dist: pydantic
Requires-Dist: pyyaml
Requires-Dist: requests
Dynamic: license-file

# Zenable MCP

Automated code quality and conformance for your development workflow. Use this project to check any code against organizational policies, install IDE hooks, set
up MCP servers, and with just one command.

## Quick Start

```bash
# Set your API key
export ZENABLE_API_KEY="your-api-key-here"

# Install the Zenable tools into your IDE
uvx zenable-mcp install

# Run a one-time conformance check on your code
uvx zenable-mcp check '**/*.py'
```

> **Need `uvx`?** See the [uv installation guide](https://docs.astral.sh/uv/getting-started/installation/).

## Features

### Code Conformance Checking

Validate an existing code base against organizational policies and best practices:

```bash
uvx zenable-mcp check '**/*.py'
uvx zenable-mcp check src/main.js
uvx zenable-mcp check '**/*.js' --exclude '**/test_*.js'
uvx zenable-mcp check '**/*.{js,ts,jsx,tsx}' --exclude '*.{log,tmp,bak}'
```

[Learn more about use cases →](https://docs.zenable.io/integrations/mcp/use-cases)

### IDE Integrations

Connect your IDE to our conformance checker. We support integrations with [over 50 IDEs and AI tools](https://modelcontextprotocol.io/clients) via MCP tools,
including Claude, Cursor, Windsurf, Kiro, and many more.

#### Hooks

Automatically check code as you write it. Install hooks that run on file save or edit:

```bash
uvx zenable-mcp install hook            # Install all Zenable hooks for the current project
uvx zenable-mcp install hook --global   # Install all Zenable hooks, globally
```

#### MCP Server Integration

```bash
uvx zenable-mcp install mcp          # Set up MCP for all supported IDEs
uvx zenable-mcp install mcp claude   # Set up the MCP integration for only Claude Code
```

[Advanced configuration options →](https://docs.zenable.io/integrations/mcp/getting-started)

## Learn More

- [Full Documentation](https://docs.zenable.io/integrations/mcp)
- [Usage Examples](https://docs.zenable.io/integrations/mcp/usage)
- [Configure Policies](https://www.zenable.app)
- [GitHub Integration](https://docs.zenable.io/integrations/github)
- [Troubleshooting Guide](https://docs.zenable.io/integrations/mcp/troubleshooting)
- [API Reference](https://docs.zenable.io/api)

## Feedback

Have ideas or running into issues? [Let us know](https://zenable.io/feedback)!
