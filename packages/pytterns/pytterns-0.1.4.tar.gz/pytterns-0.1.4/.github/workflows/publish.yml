name: Publish

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run tests
        run: pytest -q

  publish:
    name: Create tag, build and publish
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout full repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build setuptools wheel setuptools_scm

      - name: Create and push next tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_PAT: ${{ secrets.RELEASE_PAT }}
        run: |
          set -euo pipefail
          # Fetch tags and find latest v* tag
          git fetch --tags
          LATEST_TAG=$(git describe --tags --match 'v*' --abbrev=0 2>/dev/null || echo 'v0.1.0')
          echo "Latest tag: $LATEST_TAG"
          VER=${LATEST_TAG#v}
          IFS='.' read -r MAJOR MINOR PATCH <<< "$VER"
          PATCH=$((PATCH + 1))
          NEW_TAG="v${MAJOR}.${MINOR}.${PATCH}"
          echo "New tag will be: $NEW_TAG"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a "$NEW_TAG" -m "Release $NEW_TAG"
          if [ -n "${RELEASE_PAT}" ]; then
            echo "Using RELEASE_PAT to push tag so the push is treated as a normal user push."
            git remote set-url origin https://x-access-token:${RELEASE_PAT}@github.com/${GITHUB_REPOSITORY}.git
            git push origin "$NEW_TAG"
          else
            echo "RELEASE_PAT not found; pushing with GITHUB_TOKEN. Note: pushes by GITHUB_TOKEN may not trigger other workflows."
            git push origin "$NEW_TAG"
          fi

      - name: Build distributions
        run: python -m build --sdist --wheel

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1.5.0
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
