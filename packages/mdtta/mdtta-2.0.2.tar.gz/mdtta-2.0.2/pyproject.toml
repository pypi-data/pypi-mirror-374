[build-system]
requires = ["uv_build"]
build-backend = "uv_build"

[project]
name = "mdtta"
version = "2.0.2"
authors = [
    {name = "Libukai", email = "xiaobuyao@gmail.com"}
]
description = "MDx Dict Trans ToolKit"
readme = "README.md"
license = {text = "MIT"}
requires-python = ""
keywords = ["mdict", "dictionary", "mdx", "mdd", "pack", "unpack"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Text Processing :: Linguistic",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Operating System :: OS Independent",
]
dependencies = [
    "tomli-w>=1.2.0",
    "tqdm>=4.64.1", 
    "xxhash>=3.2.0",
]

[dependency-groups]
dev = [
    "ruff>=0.12.1",
    "pyright>=1.1.403",
    "pytest>=8.3.4",
    "pytest-mock>=3.14.0",
    "pytest-cov>=6.0.0",
]

[project.urls]
Homepage = "https://github.com/likai/mdtt"
"Bug Tracker" = "https://github.com/likai/mdtt/issues"
Documentation = "https://github.com/likai/mdtt#readme"

[project.scripts]
mdtta = "mdtta.__main__:run"

[tool.uv]
package = true

[tool.uv.workspace]
members = [
    ".",
    ".",
]


[tool.ruff]
line-length = 120
target-version = "py312"

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "F",    # Pyflakes
    "I",    # isort
    "UP",   # pyupgrade
    "N",    # pep8-naming
    "S",    # flake8-bandit (安全)
    "B",    # flake8-bugbear (Bugs)
    "A",    # flake8-builtins
    "C4",   # flake8-comprehensions
    "C90",  # mccabe (复杂度)
    "SIM",  # flake8-simplify (简化代码)
    "TID",  # flake8-tidy-imports
    "RUF",  # Ruff-specific rules
    "PL",   # Pylint 规则
    "PERF", # 性能相关
    "FURB", # 现代化重构
    "LOG",  # 日志相关
    "RET",  # 返回值检查
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "B008", "PLC2701"]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.pytest.ini_options]
minversion = "8.0"
addopts = ["--strict-markers", "--strict-config"]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "subcommands: marks tests for new subcommand architecture",
    "metadata: marks tests for TOML metadata functionality",
]

[tool.pyright]
pythonVersion = "3.12"
typeCheckingMode = "basic"
include = ["src"]
exclude = ["**/__pycache__", ".venv", "build", "dist", "base"]
reportMissingImports = true
reportMissingTypeStubs = false
reportGeneralTypeIssues = true
reportOptionalMemberAccess = true
reportOptionalCall = true
reportUnnecessaryIsInstance = true
reportUnnecessaryCast = true
reportUnusedVariable = true
reportUnusedImport = true
reportUnusedFunction = true
