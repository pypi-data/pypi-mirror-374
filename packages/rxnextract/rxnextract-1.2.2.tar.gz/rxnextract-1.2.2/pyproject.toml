[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "rxnextract"
version = "1.2.2"
authors = [
    {name = "ChemPlusX", email = "xyzmadhavi@gmail.com"},
]
description = "Professional chemistry reaction extraction using fine-tuned LLMs"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
keywords = ["chemistry", "reaction", "extraction", "llm", "nlp", "machine-learning"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Chemistry",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "torch>=2.0.0",
    "transformers>=4.35.0",
    "peft>=0.7.0",
    "bitsandbytes>=0.41.0",
    "accelerate>=0.24.0",
    "numpy>=1.21.0",
    "pandas>=1.3.0",
    "pyyaml>=6.0",
    "tqdm>=4.64.0",
    "click>=8.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
gpu = [
    "flash-attn>=2.0.0",
    "torch[cuda]>=2.0.0",
    "triton>=2.0.0",
]
full = [
    "flash-attn>=2.0.0",
    "wandb>=0.15.0",
    "torch[cuda]>=2.0.0",
    "triton>=2.0.0",
    "jupyter>=1.0.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "plotly>=5.0.0",
    "scikit-learn>=1.0.0",
]

[project.urls]
"Homepage" = "https://github.com/chemplusx/RxNExtract"
"Bug Reports" = "https://github.com/chemplusx/RxNExtract/issues"
"Source" = "https://github.com/chemplusx/RxNExtract"
"Documentation" = "https://github.com/chemplusx/RxNExtract/wiki"

[project.scripts]
rxnextract = "chemistry_llm.cli.interface:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
chemistry_llm = ["config/*.yaml"]

[tool.black]
line-length = 100
target-version = ["py38"]
include = "\\.pyi?$"

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100
known_first_party = ["chemistry_llm"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src/chemistry_llm"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
    "*/cli/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]