[build-system]
requires = ["hatchling>=1.13.0"]
build-backend = "hatchling.build"

[project]
name = "autoclean-icvision"
version = "0.1.1"
description = "Automated ICA component classification using OpenAI Vision API for EEG data"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Gavin Gammoh", email = "gavin.gammoh@cchmc.org"}
]
maintainers = [
    {name = "Gavin Gammoh", email = "gavin.gammoh@cchmc.org"}
]
keywords = ["eeg", "ica", "openai", "vision", "mne", "neuroscience", "artifact-detection"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
    "Typing :: Typed",
]
requires-python = ">=3.8"
dependencies = [
    "mne>=1.5.0",
    "openai>=1.0.0",
    "pandas>=1.5.0",
    "numpy>=1.21.0",
    "matplotlib>=3.5.0",
    "scipy>=1.9.0",
    "scikit-learn>=1.0.0",
    "Pillow>=9.0.0",
    "pathlib-mate>=1.0.0",
    "eeglabio",
    "python-dotenv>=0.19.0",
]

[project.optional-dependencies]
dev = [
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pre-commit>=3.0.0",
    "tox>=4.0.0",
    "build>=0.10.0",
    "twine>=4.0.0",
    "bandit[toml]>=1.7.5",
    "pydocstyle>=6.3.0",
    "isort>=5.12.0",
    "pytest-mock>=3.5.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "myst-parser>=1.0.0",
    "numpydoc>=1.5.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.5.0",
]

[project.urls]
"Homepage" = "https://github.com/cincibrainlab/ICVision"
"Bug Reports" = "https://github.com/cincibrainlab/ICVision/issues"
"Source" = "https://github.com/cincibrainlab/ICVision"
"Documentation" = "https://cincibrainlab.github.io/ICVision/"

[project.scripts]
# CLI command entry point
autoclean-icvision = "icvision.cli:main"
# Legacy alias for backward compatibility
icvision = "icvision.cli:main"

# Tool configurations
[tool.black]
line-length = 120
target-version = ["py38", "py39", "py310", "py311", "py312"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
ignore_missing_imports = true
no_strict_optional = true
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = false
disallow_untyped_decorators = false
warn_redundant_casts = false
warn_unused_ignores = false
warn_no_return = false
warn_unreachable = false
strict_equality = false

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src/icvision",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["src/icvision"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 120
known_first_party = ["icvision"]

[tool.flake8]
max-line-length = 120
extend-ignore = ["E203", "W503", "E501"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    ".eggs",
    "*.egg-info",
]

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101", "B601"]

[tool.pydocstyle]
convention = "google"
add-ignore = ["D100", "D104"]

[tool.hatch.build.targets.wheel]
packages = ["src/icvision"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/docs",
    "README.md",
    "LICENSE",
    "CHANGELOG.md",
]

# Optional: Add specific dependencies for your documentation build environment here
# For example, if you had a separate environment for docs in hatch:
# [tool.hatch.envs.docs.dependencies]
# numpydoc = ">=1.5.0"

# Ensure there are no empty or misplaced tool.hatch.envs.docs.dependencies sections.
