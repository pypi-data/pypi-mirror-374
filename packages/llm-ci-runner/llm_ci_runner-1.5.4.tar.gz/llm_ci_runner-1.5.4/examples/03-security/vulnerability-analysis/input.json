{
    "messages": [
        {
            "role": "system",
            "content": "You are a security expert. Analyze code changes for security vulnerabilities, focusing on OWASP Top 10, common attack vectors, and secure coding practices."
        },
        {
            "role": "user",
            "content": "Analyze these code changes for security vulnerabilities:\n\n```diff\n--- a/auth/login.py\n+++ b/auth/login.py\n@@ -10,7 +10,7 @@ def authenticate_user(username, password):\n     if not username or not password:\n         return False\n     \n-    query = f\"SELECT * FROM users WHERE username = '{username}'\"\n+    query = \"SELECT * FROM users WHERE username = %s\"\n     cursor.execute(query, (username,))\n     user = cursor.fetchone()\n     \n@@ -25,6 +25,8 @@ def create_session(user_id):\n     session_token = secrets.token_urlsafe(32)\n     expiry = datetime.now() + timedelta(hours=24)\n     \n+    if not user_id or user_id <= 0:\n+        raise ValueError(\"Invalid user_id\")\n+    \n     query = \"INSERT INTO sessions (user_id, token, expiry) VALUES (%s, %s, %s)\"\n     cursor.execute(query, (user_id, session_token, expiry))\n     conn.commit()\n```\n\nProvide detailed security assessment with specific vulnerabilities, severity levels, and fix recommendations."
        }
    ],
    "context": {
        "session_id": "security-analysis-001",
        "metadata": {
            "task_type": "security_analysis",
            "domain": "authentication",
            "language": "python",
            "focus": "sql_injection_prevention"
        }
    }
}