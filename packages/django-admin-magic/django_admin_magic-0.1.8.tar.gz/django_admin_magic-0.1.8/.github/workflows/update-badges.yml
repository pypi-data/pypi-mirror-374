name: Update Badges

on:
  schedule:
    # Run daily at 2 AM UTC
    - cron: "0 2 * * *"
  workflow_dispatch: # Allow manual trigger
  workflow_call: # Allow other workflows to trigger this
    inputs:
      skip_ci:
        description: "Skip CI trigger to prevent infinite loops"
        required: false
        default: "false"
        type: string

jobs:
  update-badges:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install uv
        uses: astral-sh/setup-uv@v2
        with:
          version: "latest"

      - name: Create virtual environment and install dependencies
        run: |
          uv venv
          uv pip install -e ".[dev]"

      - name: Run tests with coverage
        run: |
          echo "Current directory: $(pwd)"
          echo "Listing files before tests:"
          ls -la
          echo "Running pytest..."
          uv run pytest --cov=src/django_admin_magic --cov-report=xml:coverage.xml --cov-report=term-missing --junit-xml=junit.xml -v
          echo "Listing files after tests:"
          ls -la
          echo "Looking for coverage files:"
          find . -name "*.xml" -type f

      - name: Check for coverage.xml
        run: |
          if [ ! -f coverage.xml ]; then
            echo "coverage.xml not found!"
            echo "Current directory: $(pwd)"
            echo "All files in current directory:"
            ls -la
            exit 1
          fi

      - name: Install badge generation tools
        run: |
          uv pip install genbadge[coverage]

      - name: Generate badges
        run: |
          mkdir -p .github/badges
          ls -la
          uv run genbadge coverage -i coverage.xml -o .github/badges/coverage-badge.svg
          # Generate tests badge from junit.xml if it exists, otherwise skip
          if [ -f junit.xml ]; then
            uv run genbadge tests -i junit.xml -o .github/badges/tests-badge.svg
          else
            echo "junit.xml not found, skipping tests badge generation"
          fi

      - name: Commit and push badge updates (if changed)
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add -A .github/badges/
          if git diff --cached --quiet -- .github/badges; then
            echo "No badge changes to commit."
          else
            git commit -m "Update badges [skip ci]"
            git push
          fi
