[build-system]
requires = ["setuptools>=61.0", "setuptools-scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]

[project]
name = "django-admin-magic"
version = "0.1.9"
description = "Automatic admin registration for Django projects."
readme = "README.md"
requires-python = ">=3.10"
authors = [{ name = "Lucas Whipple", email = "billthefighter@gmail.com" }]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Framework :: Django",
    "Framework :: Django :: 3.2",
    "Framework :: Django :: 4.0",
    "Framework :: Django :: 4.1",
    "Framework :: Django :: 4.2",
    "Framework :: Django :: 5.0",
    "Framework :: Django :: 5.1",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "django>=3.2",
    "django-polymorphic>=3.0",
    "pytest>=8.3.5",
    "pytest-django>=4.11.1",
]
[dependency-groups]
docs = [
    "mkdocs>=1.6.0",
    "mkdocs-material>=9.5.0",
    "mkdocs-awesome-nav>=3.0.0",
    "mkdocs-api-autonav>=0.3.0",
    "mkdocstrings>=0.25.0",
    "mkdocstrings-python>=1.8.0",
    "mkdocs-autorefs>=1.0.0",
    "mkdocs-mermaid2-plugin>=1.1.1",
    "mike>=2.1.3",
]

[project.urls]
Homepage = "https://github.com/billthefighter/django-admin-magic"

[tool.setuptools_scm]
version_scheme = "python-simplified-semver"
local_scheme = "node-and-timestamp"

[project.optional-dependencies]


dev = [
    "pytest",
    "pytest-django",
    "pytest-cov",
    "pytest-xdist",
    "ruff",
    "pre-commit",
    "uv",
    "mypy",
    "bandit",
    "genbadge[coverage]",
]
build = ["build", "twine"]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "tests.test_settings"
python_files = "tests.py test_*.py *_tests.py"
pythonpath = [".", "src"]
addopts = "--tb=short"
markers = [
    "django_db: marks tests as requiring database access",
    "slow: marks tests as slow",
    "integration: marks tests as integration tests",
]

[tool.ruff]
line-length = 120
target-version = "py311"
exclude = ["tests/", "demo_app/"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "F",  # pyflakes
    "I",  # isort
    "D",  # pydocstyle
    "UP", # pyupgrade
    "DJ", # ruff-django
]
ignore = [
    "D100",  # Missing docstring in public module
    "D104",  # Missing docstring in public package
    "D203",  # 1 blank line required before class docstring
    "D212",  # Multi-line docstring summary should start at the first line
    "DJ008", # Model does not define __str__ method (for test models)
    "DJ012", # Model's inner classes, methods, and fields order
    "D101",  # Missing docstring in public class
    "D107",  # Missing docstring in __init__
    "D401",  # First line should be in imperative mood
    "D102",  # Missing docstring in public method
    "D205",  # 1 blank line required between summary line and description
    "D103",  # Missing docstring in public function
    "F821",  # Undefined name
    "D105",  # Missing docstring in magic method
    "UP007", # Required for backwards-compatability
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D"] # Ignore docstring rules in tests

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.isort]
known-first-party = ["django_admin_magic"]
