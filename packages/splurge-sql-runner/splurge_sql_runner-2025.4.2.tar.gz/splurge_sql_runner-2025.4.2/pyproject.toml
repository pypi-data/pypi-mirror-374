[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "splurge-sql-runner"
version = "2025.4.2"
description = "A Python utility for executing SQL files against databases with support for multiple statements, comments, and pretty-printed results"
readme = "README.md"
license = "MIT"
authors = [
    {name = "Jim Schilling"}
]
maintainers = [
    {name = "Jim Schilling"}
]
keywords = ["sql", "database", "cli", "sqlalchemy", "sqlite", "postgresql", "mysql"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Database",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
    "Environment :: Console",
    "Typing :: Typed",
]
requires-python = ">=3.10"
dependencies = [
    "sqlalchemy>=2.0.37",
    "sqlparse>=0.4.0",
    "tabulate>=0.9.0"
]

[project.urls]
Homepage = "https://github.com/jim-schilling/splurge-sql-runner"
Documentation = "https://github.com/jim-schilling/splurge-sql-runner#readme"
Repository = "https://github.com/jim-schilling/splurge-sql-runner.git"
Issues = "https://github.com/jim-schilling/splurge-sql-runner/issues"
Changelog = "https://github.com/jim-schilling/splurge-sql-runner/blob/main/README.md#changelog"

[project.scripts]
splurge-sql-runner = "splurge_sql_runner.__main__:main"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=3.5.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "safety>=2.0.0",  # For vulnerability scanning
    "bandit>=1.7.0",  # For security linting
    "ruff>=0.4.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=3.5.0",
]
lint = [
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "ruff>=0.4.0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.0.0",
]

[tool.setuptools.packages.find]
where = ["."]
include = ["splurge_sql_runner*"]

[tool.setuptools.package-data]
splurge_sql_runner = ["*.sql"]

[tool.black]
line-length = 120
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.flake8]
max-line-length = 120
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    ".eggs",
    "*.egg-info",
]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-x -v -n auto --cov=splurge_sql_runner --cov-report=term-missing --cov-report=html --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "unit: Unit tests that test individual components in isolation",
    "integration: Integration tests that verify component interactions",
    "e2e: End-to-end tests that verify complete workflows",
    "slow: Slow running tests (typically integration or e2e)",
    "database: Tests requiring database connectivity",
    "security: Tests focused on security features",
    "performance: Tests measuring performance characteristics",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.coverage.run]
source = ["splurge_sql_runner"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.ruff]
line-length = 120
target-version = "py310"

[tool.ruff.lint]
select = ["E", "F", "I", "B", "UP"]
ignore = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
