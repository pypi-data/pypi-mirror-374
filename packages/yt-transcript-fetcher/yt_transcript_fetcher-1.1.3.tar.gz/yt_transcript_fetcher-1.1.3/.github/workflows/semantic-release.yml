name: Semantic Release

on:
  workflow_dispatch:
    inputs:
      dry_run:
        description: 'Dry run (no tag / no publish)'
        required: false
        default: 'false'
  workflow_run:
    workflows: [Run Tests]
    types: [completed]
    branches: [main]

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-release-${{ github.ref_name }}
      cancel-in-progress: false
    permissions:
      contents: write
      actions: read
      checks: read
      security-events: read
    outputs:
      released: ${{ steps.release.outputs.released }}
      tag: ${{ steps.release.outputs.tag }}
      mode: ${{ steps.mode.outputs.mode }}
    if: github.repository_owner == 'SootyOwl' && ((github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success')|| github.event_name == 'workflow_dispatch')
    steps:
      - name: Setup | Checkout Repository on Main (or triggering branch)
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event_name == 'workflow_run' && github.event.workflow_run.head_branch || 'main' }}
          fetch-depth: 0

      - name: Setup | Force branch to triggering sha
        if: github.event_name == 'workflow_run'
        run: git reset --hard ${{ github.event.workflow_run.head_sha }}

      - name: Evaluate | Verify upstream has NOT changed
        if: github.event_name == 'workflow_run'
        shell: bash
        run: |
          git fetch origin main
          HEAD_SHA="$(git rev-parse HEAD)"
          ORIGIN_MAIN_SHA="$(git rev-parse origin/main)"
          if [ "$HEAD_SHA" != "$ORIGIN_MAIN_SHA" ]; then
            echo "::error::Upstream changed (HEAD $HEAD_SHA != origin/main $ORIGIN_MAIN_SHA). Abort."
            exit 1
          fi
          echo "Upstream unchanged."

      - name: Mode | Determine dry-run
        id: mode
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ] && [ "${{ github.event.inputs.dry_run }}" = "true" ]; then
            echo "noop=true" >> "$GITHUB_OUTPUT"
            echo "mode=DRY-RUN" >> "$GITHUB_OUTPUT"
            echo "Running in dry-run mode (no tag, no publish)."
          else
            echo "noop=false" >> "$GITHUB_OUTPUT"
            echo "mode=LIVE" >> "$GITHUB_OUTPUT"
            echo "Running in LIVE mode."
          fi

      - name: Action | Semantic Version Release (${{ steps.mode.outputs.mode }})
        id: release
        uses: python-semantic-release/python-semantic-release@v10.3.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          git_committer_name: github-actions
          git_committer_email: actions@users.noreply.github.com
          no_operation_mode: ${{ steps.mode.outputs.noop }}

      - name: Publish | Upload to GitHub Release Assets
        if: steps.release.outputs.released == 'true'
        uses: python-semantic-release/publish-action@v10.3.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.release.outputs.tag }}

      - name: Upload | Distribution Artifacts
        if: steps.release.outputs.released == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: distribution-artifacts
          path: dist
          if-no-files-found: error
          retention-days: 7

  deploy:
    runs-on: ubuntu-latest
    needs: release
    if: needs.release.outputs.released == 'true' && needs.release.outputs.mode != 'DRY-RUN'
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Setup | Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: distribution-artifacts
          path: dist

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist
          print-hash: true
          verbose: true
