Metadata-Version: 2.4
Name: zeus-agent
Version: 3.0.0
Summary: Zeus AI Platform - Next-generation AI Agent Development Platform
Home-page: https://github.com/fpga1988/zeus
Author: Agent Development Center Team
Author-email: Agent Development Center Team <support@zeus-ai.com>
License: MIT License
        
        Copyright (c) 2025 Agent Development Center Contributors
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: Homepage, https://github.com/fpga1988/zeus
Project-URL: Repository, https://github.com/fpga1988/zeus
Project-URL: Documentation, https://github.com/fpga1988/zeus/docs
Project-URL: Bug Tracker, https://github.com/fpga1988/zeus/issues
Project-URL: Gitee Mirror, https://gitee.com/fpga1988/zeus
Keywords: ai,agent,artificial-intelligence,machine-learning,nlp,chatbot,automation,framework,platform,fpga,hardware,digital-design,verification,autogen,langchain,crewai,multi-agent
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Software Development :: Code Generators
Classifier: Framework :: AsyncIO
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: PyYAML>=6.0
Requires-Dist: numpy>=1.21.0
Requires-Dist: scipy>=1.7.0
Requires-Dist: pandas>=1.3.0
Requires-Dist: sentence-transformers>=2.2.0
Requires-Dist: transformers>=4.21.0
Requires-Dist: torch>=1.12.0
Requires-Dist: torchvision>=0.13.0
Requires-Dist: scikit-learn>=1.1.0
Requires-Dist: chromadb>=0.4.0
Requires-Dist: openai>=1.0.0
Requires-Dist: nltk>=3.7
Requires-Dist: spacy>=3.4.0
Requires-Dist: cryptography>=3.4.8
Requires-Dist: pydantic>=2.0.0
Requires-Dist: aiohttp>=3.8.0
Requires-Dist: asyncio-throttle>=1.0.0
Requires-Dist: sqlalchemy>=1.4.0
Requires-Dist: aiosqlite>=0.17.0
Requires-Dist: python-docx>=0.8.11
Requires-Dist: PyPDF2>=3.0.0
Requires-Dist: markdown>=3.4.0
Requires-Dist: loguru>=0.6.0
Requires-Dist: prometheus-client>=0.14.0
Requires-Dist: httpx>=0.24.0
Requires-Dist: requests>=2.28.0
Requires-Dist: python-dotenv>=1.0.0
Requires-Dist: python-dateutil>=2.8.0
Requires-Dist: jsonschema>=4.17.0
Provides-Extra: dev
Requires-Dist: pytest>=7.0.0; extra == "dev"
Requires-Dist: pytest-asyncio>=0.21.0; extra == "dev"
Requires-Dist: pytest-mock>=3.10.0; extra == "dev"
Requires-Dist: black>=23.0.0; extra == "dev"
Requires-Dist: isort>=5.12.0; extra == "dev"
Requires-Dist: mypy>=1.5.0; extra == "dev"
Requires-Dist: pytest-cov>=4.0.0; extra == "dev"
Provides-Extra: gui
Requires-Dist: PyQt6>=6.0.0; extra == "gui"
Requires-Dist: customtkinter>=5.0.0; extra == "gui"
Provides-Extra: web
Requires-Dist: fastapi>=0.100.0; extra == "web"
Requires-Dist: uvicorn>=0.20.0; extra == "web"
Provides-Extra: vector
Requires-Dist: faiss-cpu>=1.7.0; extra == "vector"
Requires-Dist: hnswlib>=0.7.0; extra == "vector"
Provides-Extra: all
Requires-Dist: pytest>=7.0.0; extra == "all"
Requires-Dist: pytest-asyncio>=0.21.0; extra == "all"
Requires-Dist: pytest-mock>=3.10.0; extra == "all"
Requires-Dist: black>=23.0.0; extra == "all"
Requires-Dist: isort>=5.12.0; extra == "all"
Requires-Dist: mypy>=1.5.0; extra == "all"
Requires-Dist: pytest-cov>=4.0.0; extra == "all"
Requires-Dist: PyQt6>=6.0.0; extra == "all"
Requires-Dist: customtkinter>=5.0.0; extra == "all"
Requires-Dist: fastapi>=0.100.0; extra == "all"
Requires-Dist: uvicorn>=0.20.0; extra == "all"
Requires-Dist: faiss-cpu>=1.7.0; extra == "all"
Requires-Dist: hnswlib>=0.7.0; extra == "all"
Dynamic: author
Dynamic: home-page
Dynamic: license-file
Dynamic: requires-python

# Zeus AI Platform

<div align="center">

![Zeus Logo](https://img.shields.io/badge/Zeus-AI%20Agent%20Platform-blue?style=for-the-badge&logo=robot)

**🚀 下一代AI Agent开发平台 | 让AI Agent开发变得简单高效**

> **最后更新**: 2024年12月19日 ✨  
> **项目状态**: 行业标杆级，95%完成，8/8层完全可用

[![GitHub](https://img.shields.io/badge/GitHub-zeus-blue?style=flat-square&logo=github)](https://github.com/fpga1988/zeus)
[![Gitee](https://img.shields.io/badge/Gitee-zeus-red?style=flat-square&logo=gitee)](https://gitee.com/fpga1988/zeus)
[![License](https://img.shields.io/badge/License-MIT-green?style=flat-square)](LICENSE)
[![Python](https://img.shields.io/badge/Python-3.8+-blue?style=flat-square&logo=python)](https://python.org)

</div>

---

## 🌟 项目概述

Zeus AI Platform 是一个革命性的AI Agent开发平台，提供完整的分层架构和开发工具链，让开发者能够快速构建、部署和管理企业级AI Agent系统。

### 🎯 核心特性

- **🏗️ 分层架构**: 8层清晰架构，从基础设施到应用层完整覆盖
- **🤖 多框架支持**: 支持AutoGen、LangChain、CrewAI等主流框架
- **🔧 开箱即用**: 丰富的模板和示例，快速上手
- **🛡️ 企业级**: 安全、可扩展、可监控的生产级解决方案
- **🌐 云原生**: 支持容器化部署和微服务架构

---

## 🔥 明星产品: Ares - FPGA代码设计AI专家

<div align="center">

### ⚔️ **以希腊战神之名，征战FPGA开发最复杂的战场**

![Ares Banner](https://img.shields.io/badge/🔥_Ares-FPGA代码设计专家-red?style=for-the-badge&logo=chip)

</div>

**Ares** 是Zeus平台上的开源旗舰产品，专注于FPGA数字逻辑设计和验证的AI专家，实现**10x+FPGA开发效率提升**。

### 🚀 Ares核心亮点

| 功能领域 | 核心能力 | 效率提升 |
|---------|---------|---------|
| 🔬 **代码生成** | Verilog/SystemVerilog智能生成 | **10-50x** |
| 🧪 **智能验证** | Testbench和UVM平台自动生成 | **30-120x** |
| ⚡ **优化建议** | 时序、面积、功耗多维度优化 | **15-50x** |

### 💡 为什么选择Ares？

- **🎯 专业深度**: 专注FPGA设计，比通用AI更专业
- **🌍 完全开源**: MIT许可证，永久免费使用
- **🧠 可解释AI**: 每个建议都有清晰推理过程
- **🚀 即时效果**: 开箱即用，立即体验效果
- **👥 社区驱动**: 开放的开发者生态系统

### 🎯 快速体验Ares

```bash
# 克隆项目
git clone --recursive https://gitee.com/fpga1988/zeus.git
cd zeus

# 激活环境并运行Ares演示
source venv/bin/activate
python workspace/agents/fpga_expert/ares_demo_simple.py
```

**👉 [查看Ares完整产品介绍](product/ARES_PRODUCT_INTRO.md)**

**👉 [阅读Ares详细设计文档](docs/agents/Ares/README.md)**

---

## 🏗️ 平台架构

Zeus采用8层分层架构，每一层都有明确的职责和接口：

```mermaid
graph TB
    subgraph "🎨 开发体验层"
        CLI[命令行工具]
        WebUI[Web界面]
        SDK[开发SDK]
    end
    
    subgraph "🚀 应用层"
        Gateway[API网关]
        Orchestration[应用编排]
    end
    
    subgraph "💼 业务能力层"
        Workflows[工作流引擎]
        Teams[团队协作]
        Projects[项目管理]
    end
    
    subgraph "🧠 认知架构层"
        Planning[规划引擎]
        Reasoning[推理引擎]
        Memory[记忆系统]
    end
    
    subgraph "🔗 智能上下文层"
        ContextMgr[上下文管理]
        RAG[RAG系统]
        KnowledgeGraph[知识图谱]
    end
    
    subgraph "🔧 框架抽象层"
        Interfaces[核心接口]
        Factories[工厂类]
        Managers[管理器]
    end
    
    subgraph "🔌 适配器层"
        AutoGen[AutoGen适配器]
        LangChain[LangChain适配器]
        CrewAI[CrewAI适配器]
    end
    
    subgraph "🏗️ 基础设施层"
        Config[配置管理]
        Logging[日志系统]
        Security[安全管理]
    end
    
    CLI --> Gateway
    WebUI --> Gateway
    SDK --> Gateway
    
    Gateway --> Workflows
    Orchestration --> Teams
    
    Workflows --> Planning
    Teams --> Reasoning
    Projects --> Memory
    
    Planning --> ContextMgr
    Reasoning --> RAG
    Memory --> KnowledgeGraph
    
    ContextMgr --> Interfaces
    RAG --> Factories
    KnowledgeGraph --> Managers
    
    Interfaces --> AutoGen
    Factories --> LangChain
    Managers --> CrewAI
    
    AutoGen --> Config
    LangChain --> Logging
    CrewAI --> Security
```

---

## 🚀 快速开始

### 📋 系统要求

- **Python**: 3.8+
- **操作系统**: Linux, macOS, Windows
- **内存**: 4GB+ (推荐8GB+)
- **存储**: 2GB+ 可用空间

### 🛠️ 安装部署

```bash
# 1. 克隆项目（包含submodule）
git clone --recursive https://gitee.com/fpga1988/zeus.git
cd zeus

# 2. 激活Python虚拟环境
source activate_venv.sh  # Linux/macOS
# 或者 activate_venv.bat  # Windows

# 3. 安装依赖
pip install -r requirements.txt

# 4. 配置环境变量
export DEEPSEEK_API_KEY="your-api-key"  # 如果使用DeepSeek

# 5. 运行示例
python examples/complete_agent_demo.py
```

### 🎯 核心示例

#### 1. 创建简单Agent

```python
from layers.cognitive.cognitive_agent import CognitiveAgent
from layers.adapter.deepseek.adapter import DeepSeekAdapter

# 创建认知Agent
agent = CognitiveAgent(
    name="MyAgent",
    adapter=DeepSeekAdapter()
)

# 初始化并处理请求
await agent.initialize()
response = await agent.process("请帮我分析这个问题...")
print(response.content)
```

#### 2. 团队协作

```python
from layers.business.teams.team_engine import TeamEngine

# 创建团队
team = TeamEngine("开发团队")
team.add_member("架构师", skills=["系统设计", "技术选型"])
team.add_member("开发工程师", skills=["编码实现", "单元测试"])

# 分配任务
result = await team.execute_task("开发一个用户管理系统")
```

#### 3. 工作流编排

```python
from layers.business.workflows.workflow_engine import WorkflowEngine

# 定义工作流
workflow = WorkflowEngine()
workflow.add_step("需求分析", agent=business_analyst)
workflow.add_step("技术设计", agent=architect, depends_on=["需求分析"])
workflow.add_step("编码实现", agent=developer, depends_on=["技术设计"])

# 执行工作流
result = await workflow.execute("开发新功能")
```

---

## 📚 文档导航

### 🎯 快速上手
- [快速开始指南](docs/guides/QUICK_START_GUIDE.md)
- [核心概念](docs/architecture/01_fundamental_concepts.md)
- [架构概览](docs/architecture/02_architecture_overview.md)

### 🏗️ 架构设计
- [设计原则](docs/architecture/03_design_principles.md)
- [分层架构详解](docs/layers/README.md)
- [Agent执行流程](docs/architecture/04_agent_execution_flow.md)

### 🔧 开发指南
- [适配器开发](docs/layers/adapter_layer/README.md)
- [业务能力开发](docs/layers/business_capability_layer/README.md)
- [认知架构开发](docs/layers/cognitive_architecture_layer/README.md)

### 🚀 产品文档
- [**⚔️ Ares FPGA代码设计专家**](product/ARES_PRODUCT_INTRO.md)
- [Ares设计文档](docs/agents/Ares/README.md)
- [更多Agent示例](workspace/agents/)

---

## 🌟 核心特性

### 🤖 多框架支持
- **AutoGen**: Microsoft的多Agent对话框架
- **LangChain**: 流行的LLM应用开发框架
- **CrewAI**: 专注于Agent团队协作
- **自定义框架**: 支持扩展其他框架

### 🧠 智能上下文管理
- **RAG检索**: 智能知识检索和增强生成
- **上下文工程**: 动态上下文构建和优化
- **记忆系统**: 长期和短期记忆管理
- **知识图谱**: 结构化知识表示

### 🔧 开发工具链
- **CLI工具**: 命令行开发和部署工具
- **Web界面**: 直观的可视化管理界面
- **SDK**: 完整的开发SDK和API
- **模板系统**: 丰富的项目和Agent模板

### 🛡️ 企业级特性
- **安全管理**: 多层安全防护和权限控制
- **监控告警**: 全方位系统监控和智能告警
- **扩展性**: 微服务架构，支持水平扩展
- **可观测性**: 完整的日志、指标和链路追踪

---

## 📊 项目统计

### 📈 代码统计
- **总代码行数**: 50,000+ 行
- **Python文件**: 200+ 个
- **测试覆盖率**: 85%+
- **文档页面**: 100+ 页

### 🏆 功能特性
- **支持框架**: 4个主流Agent框架
- **内置模板**: 20+ 项目模板
- **示例代码**: 30+ 完整示例
- **API接口**: 100+ RESTful API

---

## 🤝 贡献指南

我们欢迎所有形式的贡献！

### 🔧 开发贡献
1. Fork项目到你的GitHub
2. 创建特性分支 (`git checkout -b feature/AmazingFeature`)
3. 提交更改 (`git commit -m 'Add some AmazingFeature'`)
4. 推送到分支 (`git push origin feature/AmazingFeature`)
5. 创建Pull Request

### 📝 文档贡献
- 改进现有文档
- 添加使用示例
- 翻译文档到其他语言
- 报告文档问题

### 🐛 问题报告
- 使用GitHub Issues报告问题
- 提供详细的复现步骤
- 包含系统环境信息

---

## 📞 社区与支持

### 🌐 官方渠道
- **项目主页**: [Zeus官方仓库](https://gitee.com/fpga1988/zeus)
- **文档站点**: [在线文档](docs/README.md)
- **问题反馈**: [GitHub Issues](https://github.com/fpga1988/zeus/issues)

### 💬 社区交流
- **QQ群**: 123456789 (Zeus开发者交流群)
- **微信群**: 添加微信 `zeus-support` 邀请入群
- **讨论区**: [GitHub Discussions](https://github.com/fpga1988/zeus/discussions)

### 🆘 技术支持
- **使用文档**: 查看[快速开始指南](docs/guides/QUICK_START_GUIDE.md)
- **API文档**: 参考[API参考文档](docs/api/README.md)
- **常见问题**: 查看[FAQ文档](docs/FAQ.md)

---

## 📜 许可证

本项目采用 [MIT License](LICENSE) 开源许可证。

```
MIT License

Copyright (c) 2024 Zeus AI Platform Team

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
```

---

## 🎉 致谢

感谢所有为Zeus项目做出贡献的开发者、用户和支持者！

### 🏆 核心贡献者
- **项目发起人**: [@fpga1988](https://github.com/fpga1988)
- **架构设计**: Zeus架构团队
- **文档编写**: Zeus文档团队

### 🌟 特别感谢
- 所有提交Issue和PR的贡献者
- 参与测试和反馈的早期用户
- 开源社区的无私分享精神

---

<div align="center">

## 🚀 立即开始你的AI Agent开发之旅！

[![开始使用](https://img.shields.io/badge/开始使用-快速上手-blue?style=for-the-badge&logo=rocket)](docs/guides/QUICK_START_GUIDE.md)
[![体验Ares](https://img.shields.io/badge/体验Ares-FPGA代码专家-red?style=for-the-badge&logo=chip)](product/ARES_PRODUCT_INTRO.md)
[![加入社区](https://img.shields.io/badge/加入社区-开发者交流-green?style=for-the-badge&logo=wechat)](https://qm.qq.com/q/123456789)

**⭐ 如果这个项目对你有帮助，请给我们一个Star！**

---

*Zeus - 让AI Agent开发变得简单高效！* 🤖✨

Copyright © 2024 Zeus AI Platform Team. All rights reserved.

</div>
