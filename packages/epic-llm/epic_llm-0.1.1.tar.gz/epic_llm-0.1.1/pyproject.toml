[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "epic-llm"
version = "0.1.1"
description = "Orchestration tool for managing third-party LLM API providers"
authors = [
    {name = "Dre"},
]
dependencies = [
    "typer>=0.9.0",
    "rich>=13.0.0",
    "psutil>=5.9.0",
    "pydantic>=2.0.0",
    "httpx>=0.24.0",
    "aiohttp>=3.8.0",
    "bcrypt>=4.0.0",
]
requires-python = ">=3.10"
readme = "README.md"
license = {text = "MIT"}
keywords = ["llm", "api", "orchestration", "claude", "copilot", "gemini"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Environment :: Console",
]

[project.urls]
Homepage = "https://github.com/epic-llm/epic-llm"
Repository = "https://github.com/epic-llm/epic-llm"
Issues = "https://github.com/epic-llm/epic-llm/issues"
Changelog = "https://github.com/epic-llm/epic-llm/releases"

[project.scripts]
epic-llm = "epic_llm.main:app"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "mypy>=1.0.0",
    "ruff>=0.1.0",
]

[tool.hatch.build.targets.wheel]
packages = ["epic_llm"]

[tool.ruff]
line-length = 88
target-version = "py310"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W"]

[tool.mypy]
python_version = "3.10"
strict = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests", 
    "unit: marks tests as unit tests",
    "asyncio: marks tests as async",
]

[dependency-groups]
dev = [
    "pytest-asyncio>=1.1.0",
    "pytest-cov>=6.2.1",
    "ruff>=0.12.11",
]
