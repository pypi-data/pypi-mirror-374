[SERVICE]
    Parsers_File  parsers.conf
[INPUT]
    Name tail
    Path /openedx/data/logs/tracking.log
[FILTER]
    # This parser filter calls the 'event' parser (found in the parsers.conf file)
    # After this filter, each line will be a json record with two keys: date and event
    # The event key will have the text of the tracking log entry.
    Name             parser
    Match            *
    Key_Name         log
    Parser           event
[OUTPUT]
    # Upload to s3
    Name             s3
    Match            *
    bucket           {{ PANORAMA_RAW_LOGS_BUCKET }}
    region           {{ PANORAMA_REGION }}
    compression      gzip
    use_put_object   On
{% if PANORAMA_RAW_LOGS_BUCKET == PANORAMA_BUCKET %}
    s3_key_format    /openedx/tracking_logs/lms={{ LMS_HOST }}/year=%Y/month=%m/day=%d/tracking.log-%Y%m%d-%H%M%S-$UUID.gz
{% else %}
    s3_key_format    /tracking_logs/{{ LMS_HOST }}/year=%Y/month=%m/day=%d/tracking.log-%Y%m%d-%H%M%S-$UUID.gz
{% endif %}
    s3_key_format_tag_delimiters  _
    # A file will be uploaded if it reaches the total_file_size, or after upload_timeout, whatever happens first
    total_file_size  {{ PANORAMA_LOGS_TOTAL_FILE_SIZE }}
    upload_timeout   {{ PANORAMA_LOGS_UPLOAD_TIMEOUT }}
    # The log_key will remove the data key and all json formatting and leave only the value of the 'event' key
    log_key          event
# [OUTPUT]
#    # Uncomment this section to see the output of the process in the console of each pod in the daemonset
#    Name             stdout
#    Match            *
#    Format           json_lines