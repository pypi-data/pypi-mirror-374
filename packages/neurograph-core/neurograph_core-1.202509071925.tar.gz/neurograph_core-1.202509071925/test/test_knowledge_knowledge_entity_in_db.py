# coding: utf-8

"""
    Neurograph Core

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from neurograph.v1.models.knowledge_knowledge_entity_in_db import KnowledgeKnowledgeEntityInDb

class TestKnowledgeKnowledgeEntityInDb(unittest.TestCase):
    """KnowledgeKnowledgeEntityInDb unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> KnowledgeKnowledgeEntityInDb:
        """Test KnowledgeKnowledgeEntityInDb
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `KnowledgeKnowledgeEntityInDb`
        """
        model = KnowledgeKnowledgeEntityInDb()
        if include_optional:
            return KnowledgeKnowledgeEntityInDb(
                client_id = 'cli_...',
                data = neurograph.v1.models.data.data(),
                ext = neurograph.v1.models.knowledge/knowledge_entity_extra.knowledge.KnowledgeEntityExtra(
                    customer_id = 56, 
                    domain = '', 
                    product_id = 56, ),
                extra = neurograph.v1.models.extra.extra(),
                id = 'ent_123',
                kind = 'Product|Customer|Store',
                name = 'GiBoard Gel',
                relations = neurograph.v1.models.knowledge/knowledge_entity_relations.knowledge.KnowledgeEntityRelations(
                    children = [[ent_789]], 
                    parents = [[ent_123,  ent_456]], 
                    siblings = [[ent_999]], ),
                var_schema = neurograph.v1.models.knowledge/knowledge_entity_schema.knowledge.KnowledgeEntitySchema(
                    id = '@axon/commerce/product:1.0', 
                    params = neurograph.v1.models.params.params(), ),
                ts_updated = 56
            )
        else:
            return KnowledgeKnowledgeEntityInDb(
        )
        """

    def testKnowledgeKnowledgeEntityInDb(self):
        """Test KnowledgeKnowledgeEntityInDb"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
