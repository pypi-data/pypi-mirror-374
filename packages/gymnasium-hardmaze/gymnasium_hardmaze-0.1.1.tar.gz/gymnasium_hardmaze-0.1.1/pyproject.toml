[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "gymnasium-hardmaze"
version = "0.1.1"
description = "A Gymnasium-compatible implementation of hardmaze environment"
readme = "README.md"
authors = [
    {name = "Stefano Palmieri", email = "teaspoonaistu@gmail.com"},
]
license = "MIT"
license-files = ["LICENSE"]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.8"
dependencies = [
    "gymnasium>=1.1.1",
    "pygame>=2.5,<3.0",
    "numpy>=1.21.0",
    "beautifulsoup4>=4.6.0",
    "lxml>=4.6.3",
    "setuptools>=75.3.2",
]

# In pyproject.toml
[tool.pytest.ini_options]
filterwarnings = [
    "ignore::UserWarning:pygame.pkgdata",
    "ignore::DeprecationWarning:pkg_resources"
]

[project.urls]
"Homepage" = "https://github.com/Teaspoon-AI/gymnasium-hardmaze"
"Bug Tracker" = "https://github.com/Teaspoon-AI/gymnasium-hardmaze/issue"

[tool.setuptools]
package-dir = {"" = "src"}
include-package-data = true

[tool.setuptools.package-data]
"gymnasium_hardmaze" = ["data/*.xml"]

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310", "py311", "py312"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 88

[tool.flake8]
max-line-length = 88
extend-ignore = "E203"
exclude = [".git", "__pycache__", "build", "dist"]

[tool.pyright]
include = ["src/**", "tests/**", "docs/**"]
exclude = [
    "**/__pycache__"
]
typeCheckingMode = "basic"
pythonVersion = "3.8"
pythonPlatform = "All"
enableTypeIgnoreComments = true

# This is required as the CI pre-commit does not download the module dependencies
# Therefore, we have to ignore missing imports
reportMissingImports = "none"
reportGeneralTypeIssues = "none"
reportUnboundVariable = "warning"

[tool.uv.sources]
furo = { git = "https://github.com/Farama-Foundation/Celshast" }

[dependency-groups]
dev = [
    "isort>=5.13.2",
    "pyright>=1.1.405",
    "pytest>=8.3.5",
    "pre-commit"
]
docs = [
    "furo",
    "myst-parser>=3.0.1",
    "sphinx>=7.1.2",
    "sphinx-autobuild>=2021.3.14",
    "sphinx_github_changelog",
    "tqdm"
]
