name: Code Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  ruff-check:
    runs-on: ubuntu-latest
    name: Ruff Linting
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true
        cache-dependency-glob: "uv.lock"

    - name: Install dependencies
      run: |
        uv sync --all-extras --dev

    - name: Run Ruff linter
      run: |
        uv run ruff check . --output-format=github --exit-non-zero-on-fix

    - name: Run Ruff formatter check
      run: |
        uv run ruff format --check . --diff

  mypy-check:
    runs-on: ubuntu-latest
    name: MyPy Type Checking
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true
        cache-dependency-glob: "uv.lock"

    - name: Install dependencies
      run: |
        uv sync --all-extras --dev

    - name: Run MyPy type checker
      run: |
        uv run mypy sq3m/ --show-error-codes --pretty

    - name: MyPy type check for tests
      run: |
        uv run mypy tests/ --show-error-codes --pretty --ignore-missing-imports
      continue-on-error: true

  security-check:
    runs-on: ubuntu-latest
    name: Security Scanning
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install uv
      uses: astral-sh/setup-uv@v3

    - name: Install security tools
      run: |
        uv tool install bandit
        uv tool install safety

    - name: Run Bandit security linter
      run: |
        uv tool run bandit -r sq3m/ -f json -o bandit-report.json
      continue-on-error: true

    - name: Run Safety check
      run: |
        uv export --no-dev | uv tool run safety check --stdin
      continue-on-error: true

  complexity-check:
    runs-on: ubuntu-latest
    name: Code Complexity Analysis
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install complexity tools
      run: |
        pip install radon xenon

    - name: Run Radon complexity analysis
      run: |
        radon cc sq3m/ --min B --show-complexity --average

    - name: Run Xenon complexity check
      run: |
        xenon --max-absolute B --max-modules B sq3m/
      continue-on-error: true
