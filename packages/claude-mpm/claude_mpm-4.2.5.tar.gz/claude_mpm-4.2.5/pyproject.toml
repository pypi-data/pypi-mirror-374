[build-system]
requires = [ "setuptools>=61.0", "wheel",]
build-backend = "setuptools.build_meta"

[project]
name = "claude-mpm"
version = "4.2.5"
description = "Claude Multi-Agent Project Manager - Orchestrate Claude with agent delegation and ticket tracking"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
keywords = [ "claude", "orchestration", "multi-agent", "ticket-management",]
authors = [
    {name = "Bob Matsuoka", email = "bob@matsuoka.com"}
]
maintainers = [
    {name = "Claude MPM Team"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    # Core dependencies
    "ai-trackdown-pytools>=1.4.0",
    "pyyaml>=6.0",
    "python-dotenv>=0.19.0",
    "click>=8.0.0",
    "pexpect>=4.8.0",
    "psutil>=5.9.0",
    "requests>=2.25.0",

    # Web framework dependencies
    "flask>=3.0.0",
    "flask-cors>=4.0.0",

    # File system and monitoring
    "watchdog>=3.0.0",

    # Async and networking dependencies
    "python-socketio>=5.11.0",
    "aiohttp>=3.9.0",
    "aiohttp-cors>=0.7.0,<0.8.0",
    "python-engineio>=4.8.0",
    "aiofiles>=23.0.0",
    "websockets>=12.0",

    # Content processing
    "python-frontmatter>=1.0.0",
    "mistune>=3.0.0",
    "tree-sitter>=0.21.0",
    "ijson>=3.2.0",

    # MCP and protocol support
    "mcp>=0.1.0",

    # Utility dependencies
    "toml>=0.10.2",
    "packaging>=21.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    
    # TUI dependencies
    "textual>=0.47.0",
    "rich>=13.0.0",
    
    # Event bus for decoupled event handling
    "pyee>=13.0.0",

    # Python version compatibility
    "importlib-resources>=5.0; python_version < '3.9'",
    
    # Gitignore pattern matching
    "pathspec>=0.11.0",
]

[project.urls]
Homepage = "https://github.com/bobmatnyc/claude-mpm"
Repository = "https://github.com/bobmatnyc/claude-mpm.git"
Issues = "https://github.com/bobmatnyc/claude-mpm/issues"
Documentation = "https://github.com/bobmatnyc/claude-mpm/blob/main/README.md"

[project.optional-dependencies]
dev = [
    # Testing framework
    "pytest>=7.0",
    "pytest-asyncio",
    "pytest-cov",

    # Code formatting and linting
    "black",
    "flake8",
    "flake8-import-order",
    "flake8-tidy-imports",
    "flake8-bugbear",
    "ruff>=0.1.0",
    "pylint>=3.0.0",
    "pre-commit",

    # Type checking
    "mypy>=1.0.0",
    "types-PyYAML>=6.0.0",
    "types-requests>=2.25.0",
]
docs = [ "sphinx>=7.2.0", "sphinx-rtd-theme>=1.3.0", "sphinx-autobuild>=2021.3.14",]
monitor = []
# Pure Python agent dependencies - no compilation required
agents = [ "bandit>=1.7.5", "black>=23.0.0", "commitizen>=3.13.0", "dask>=2023.12.0", "detect-secrets>=1.4.0", "diagrams>=0.23.0", "docstring-parser>=0.15.0", "faker>=20.0.0", "gitlint>=0.19.0", "gitpython>=3.1.40", "hypothesis>=6.92.0", "isort>=5.12.0", "lizard>=1.17.0", "mermaid-py>=0.2.0", "mkdocs>=1.5.0", "mutmut>=2.4.0", "mypy>=1.8.0", "pandas>=2.1.0", "pre-commit>=3.5.0", "prometheus-client>=0.19.0", "pydoc-markdown>=4.8.0", "pydriller>=2.5.0", "pygments>=2.17.0", "pytest>=7.4.0", "pytest-benchmark>=4.0.0", "pytest-cov>=4.1.0", "radon>=6.0.0", "rope>=1.11.0", "sphinx>=7.2.0", "sqlalchemy>=2.0.0", "sqlparse>=0.4.4", "tree-sitter>=0.21.0", "tree-sitter-python>=0.21.0", "tree-sitter-javascript>=0.21.0", "tree-sitter-typescript>=0.21.0", "tree-sitter-go>=0.21.0", "tree-sitter-rust>=0.21.0", "tree-sitter-java>=0.21.0", "tree-sitter-cpp>=0.21.0", "tree-sitter-c>=0.21.0", "tree-sitter-ruby>=0.21.0", "tree-sitter-php>=0.21.0",]

[project.scripts]
claude-mpm = "claude_mpm.cli:main"
claude-mpm-ticket = "claude_mpm.cli.ticket_cli:main"
ticket = "claude_mpm.cli.ticket_cli:main"
claude-mpm-version = "claude_mpm.scripts.manage_version:main"
claude-mpm-monitor = "claude_mpm.scripts.launch_monitor:main"
claude-mpm-socketio = "claude_mpm.scripts.socketio_daemon:main"
claude-mpm-mcp = "claude_mpm.services.mcp_gateway.server.stdio_server:main_sync"
claude-mpm-mcp-wrapper = "claude_mpm.scripts.mcp_wrapper:entry_point"

[tool.uv]
dev-dependencies = [
    "pytest>=7.0",
    "pytest-asyncio",
    "pytest-cov",
    "black",
    "flake8",
    "mypy>=1.0.0",
    "types-PyYAML>=6.0.0",
    "types-requests>=2.25.0",
]

[tool.black]
line-length = 88
target-version = [ "py38",]

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.setuptools.package-data]
claude_mpm = [ 
    "VERSION", 
    "BUILD_NUMBER",
    "scripts/*", 
    "commands/*.md",
    "dashboard/*.html", 
    "dashboard/templates/*.html", 
    "dashboard/static/*.css", 
    "dashboard/static/*.js", 
    "dashboard/static/css/*.css", 
    "dashboard/static/js/*.js", 
    "dashboard/static/js/components/*.js",
    "agents/*.md",
    "agents/*.json",
    "agents/*.yaml",
    "agents/templates/*.json",
    "agents/schema/*.json",
]

[tool.setuptools.packages.find]
where = [ "src",]

[tool.setuptools.dynamic]
version = {file = "VERSION"}

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
    "--asyncio-mode=auto"
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests", 
    "e2e: End-to-end tests",
    "regression: Regression tests",
    "socketio: Socket.IO related tests",
    "hook: Hook system tests"
]
asyncio_mode = "auto"

[tool.ruff]
# Ruff configuration for duplicate import detection
line-length = 88
target-version = "py38"
select = [
    "F",     # Pyflakes
    "E",     # pycodestyle errors  
    "W",     # pycodestyle warnings
    "I",     # isort
    "F401",  # Unused imports
    "F811",  # Redefinition (catches duplicate imports!)
    "F821",  # Undefined name (catches scope issues!)
    "F823",  # Local variable referenced before assignment
]
ignore = ["E203", "E501"]
exclude = [
    ".git", "__pycache__", ".venv", "venv", "build", "dist",
    "*.egg-info", ".pytest_cache", ".mypy_cache", "node_modules"
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401", "F403"]
"tests/*" = ["F403", "F405"]

[tool.pylint]
# Pylint configuration for additional checks
max-line-length = 88
disable = [
    "C0111",  # missing-docstring
    "C0103",  # invalid-name
    "R0903",  # too-few-public-methods
    "R0913",  # too-many-arguments
    "W0212",  # protected-access
]
# Enable duplicate code detection
enable = [
    "duplicate-code",
    "reimported",
    "import-self",
    "cyclic-import",
    "wrong-import-order",
    "ungrouped-imports",
    "wrong-import-position",
]
min-similarity-lines = 4
ignore-comments = true
ignore-docstrings = true
ignore-imports = false

[tool.commitizen]
name = "cz_conventional_commits"
version = "4.2.5"
version_files = [
    "VERSION",
    "src/claude_mpm/VERSION",
    "package.json:version"
]
tag_format = "v$version"
update_changelog_on_bump = true
changelog_incremental = true
