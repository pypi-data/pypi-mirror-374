# SPDX-FileCopyrightText: Copyright (c) 2023-2025 NVIDIA CORPORATION & AFFILIATES.
#                         All rights reserved.
# SPDX-License-Identifier: Apache-2.0

from collections.abc import Sequence

class VariantOptions:
    def __init__(
        self,
        *,
        concurrent: bool | None = None,
        has_allocations: bool | None = None,
        elide_device_ctx_sync: bool | None = None,
        has_side_effect: bool | None = None,
        may_throw_exception: bool | None = None,
        communicators: Sequence[str] | None = None,
    ) -> None: ...
    @property
    def concurrent(self) -> bool: ...
    @concurrent.setter
    def concurrent(self, concurrent: bool) -> None: ...
    @property
    def has_allocations(self) -> bool: ...
    @has_allocations.setter
    def has_allocations(self, has_allocations: bool) -> None: ...
    @property
    def elide_device_ctx_sync(self) -> bool: ...
    @elide_device_ctx_sync.setter
    def elide_device_ctx_sync(self, elide_sync: bool) -> None: ...
    @property
    def has_side_effect(self) -> bool: ...
    @has_side_effect.setter
    def has_side_effect(self, side_effect: bool) -> None: ...
    @property
    def may_throw_exception(self) -> bool: ...
    @may_throw_exception.setter
    def may_throw_exception(self, may_throw: bool) -> None: ...
    @property
    def communicators(self) -> tuple[str, ...]: ...
    @communicators.setter
    def communicators(self, comms: Sequence[str]) -> None: ...
