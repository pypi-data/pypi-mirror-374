[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "aquiles-rag"
version = "0.4.0"
description = "Aquiles-RAG is a high-performance Augmented Recovery-Generation (RAG) solution based on Redis, Qdrant or PostgreSQLRAG. It offers a high-level interface using FastAPI REST APIs."
readme = "README.md"
requires-python = ">=3.8"
license = {text = "Apache License 2.0"}
authors = [
    {name = "Aquiles-ai / Fredy", email = "riveraaai200678@gmail.com"}
]
keywords = [
    "fastapi",
    "ai", 
    "rag", 
    "vector-database"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Environment :: Web Environment",
    "Topic :: Software Development :: Build Tools",
]
dependencies = [
    "Werkzeug",
    "Jinja2",
    "passlib",
    "fastapi",
    "uvicorn",
    "psutil",
    "pydantic",
    "python-multipart",
    "aiofiles",
    "click>=8.0.0",
    "platformdirs",
    "redis[hiredis]",
    "numpy",
    "pydantic-settings",
    "python-jose[cryptography]",
    "passlib[bcrypt]",
    "bcrypt==4.0.1",
    "pydantic[email]",
    "PyJWT",
    "psutil",
    "aiofiles",
    "qdrant-client",
    "qdrant-client[fastembed]",
    "rich",
    "asyncpg",
    "fastembed",
    "fastembed-gpu"
]

[project.optional-dependencies]
dev = [
    "pytest",
    "black",
    "isort",
    "mypy",
]

[project.urls]
"Homepage" = "https://github.com/Aquiles-ai/Aquiles-RAG"
"Issues" = "https://github.com/Aquiles-ai/Aquiles-RAG/issues"

[project.scripts]
aquiles-rag = "aquiles.cli:cli"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
include = ["aquiles", "aquiles.*"]

[tool.setuptools.package-data]
"aquiles" = ["templates/**/*", "static/**/*"]