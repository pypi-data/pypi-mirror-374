# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _MontagePython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkPhaseCorrelationImageRegistrationMethodPython
else:
    import _itkPhaseCorrelationImageRegistrationMethodPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkPhaseCorrelationOperatorPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.pyBasePython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.vnl_vector_refPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkPointPython
import itk.itkImagePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkImageToImageFilterBPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkPhaseCorrelationOptimizerPython
import itk.itkOptimizerParametersPython
import itk.itkArrayPython
import itk.itkTranslationTransformPython
import itk.itkTransformBasePython
import itk.itkDiffusionTensor3DPython
import itk.itkArray2DPython

def itkDataObjectDecoratorTTD2_New():
    return itkDataObjectDecoratorTTD2.New()

class itkDataObjectDecoratorTTD2(itk.ITKCommonBasePython.itkDataObject):
    r"""Proxy of C++ itkDataObjectDecoratorTTD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkDataObjectDecoratorTTD2_Pointer"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkDataObjectDecoratorTTD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkDataObjectDecoratorTTD2_Pointer"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkDataObjectDecoratorTTD2_Clone(self)

    def Set(self, val):
        r"""
        Set(self, val)

        Parameters
        ----------
        val: itkTranslationTransformD2 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkDataObjectDecoratorTTD2_Set(self, val)

    def Get(self):
        r"""Get(self) -> itkTranslationTransformD2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkDataObjectDecoratorTTD2_Get(self)

    def GetModifiable(self):
        r"""GetModifiable(self) -> itkTranslationTransformD2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkDataObjectDecoratorTTD2_GetModifiable(self)

    def Graft(self, *args):
        r"""
        Graft(self, arg0)

        Parameters
        ----------
        arg0: itkDataObject const *

        Graft(self, data)

        Parameters
        ----------
        data: itkDataObjectDecoratorTTD2 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkDataObjectDecoratorTTD2_Graft(self, *args)
    __swig_destroy__ = _itkPhaseCorrelationImageRegistrationMethodPython.delete_itkDataObjectDecoratorTTD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkDataObjectDecoratorTTD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkDataObjectDecoratorTTD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkDataObjectDecoratorTTD2

        Create a new object of the class itkDataObjectDecoratorTTD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkDataObjectDecoratorTTD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkDataObjectDecoratorTTD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkDataObjectDecoratorTTD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkDataObjectDecoratorTTD2 in _itkPhaseCorrelationImageRegistrationMethodPython:
_itkPhaseCorrelationImageRegistrationMethodPython.itkDataObjectDecoratorTTD2_swigregister(itkDataObjectDecoratorTTD2)

def itkDataObjectDecoratorTTD3_New():
    return itkDataObjectDecoratorTTD3.New()

class itkDataObjectDecoratorTTD3(itk.ITKCommonBasePython.itkDataObject):
    r"""Proxy of C++ itkDataObjectDecoratorTTD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkDataObjectDecoratorTTD3_Pointer"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkDataObjectDecoratorTTD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkDataObjectDecoratorTTD3_Pointer"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkDataObjectDecoratorTTD3_Clone(self)

    def Set(self, val):
        r"""
        Set(self, val)

        Parameters
        ----------
        val: itkTranslationTransformD3 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkDataObjectDecoratorTTD3_Set(self, val)

    def Get(self):
        r"""Get(self) -> itkTranslationTransformD3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkDataObjectDecoratorTTD3_Get(self)

    def GetModifiable(self):
        r"""GetModifiable(self) -> itkTranslationTransformD3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkDataObjectDecoratorTTD3_GetModifiable(self)

    def Graft(self, *args):
        r"""
        Graft(self, arg0)

        Parameters
        ----------
        arg0: itkDataObject const *

        Graft(self, data)

        Parameters
        ----------
        data: itkDataObjectDecoratorTTD3 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkDataObjectDecoratorTTD3_Graft(self, *args)
    __swig_destroy__ = _itkPhaseCorrelationImageRegistrationMethodPython.delete_itkDataObjectDecoratorTTD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkDataObjectDecoratorTTD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkDataObjectDecoratorTTD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkDataObjectDecoratorTTD3

        Create a new object of the class itkDataObjectDecoratorTTD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkDataObjectDecoratorTTD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkDataObjectDecoratorTTD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkDataObjectDecoratorTTD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkDataObjectDecoratorTTD3 in _itkPhaseCorrelationImageRegistrationMethodPython:
_itkPhaseCorrelationImageRegistrationMethodPython.itkDataObjectDecoratorTTD3_swigregister(itkDataObjectDecoratorTTD3)

def itkDataObjectDecoratorTTD4_New():
    return itkDataObjectDecoratorTTD4.New()

class itkDataObjectDecoratorTTD4(itk.ITKCommonBasePython.itkDataObject):
    r"""Proxy of C++ itkDataObjectDecoratorTTD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkDataObjectDecoratorTTD4_Pointer"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkDataObjectDecoratorTTD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkDataObjectDecoratorTTD4_Pointer"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkDataObjectDecoratorTTD4_Clone(self)

    def Set(self, val):
        r"""
        Set(self, val)

        Parameters
        ----------
        val: itkTranslationTransformD4 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkDataObjectDecoratorTTD4_Set(self, val)

    def Get(self):
        r"""Get(self) -> itkTranslationTransformD4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkDataObjectDecoratorTTD4_Get(self)

    def GetModifiable(self):
        r"""GetModifiable(self) -> itkTranslationTransformD4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkDataObjectDecoratorTTD4_GetModifiable(self)

    def Graft(self, *args):
        r"""
        Graft(self, arg0)

        Parameters
        ----------
        arg0: itkDataObject const *

        Graft(self, data)

        Parameters
        ----------
        data: itkDataObjectDecoratorTTD4 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkDataObjectDecoratorTTD4_Graft(self, *args)
    __swig_destroy__ = _itkPhaseCorrelationImageRegistrationMethodPython.delete_itkDataObjectDecoratorTTD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkDataObjectDecoratorTTD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkDataObjectDecoratorTTD4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkDataObjectDecoratorTTD4

        Create a new object of the class itkDataObjectDecoratorTTD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkDataObjectDecoratorTTD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkDataObjectDecoratorTTD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkDataObjectDecoratorTTD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkDataObjectDecoratorTTD4 in _itkPhaseCorrelationImageRegistrationMethodPython:
_itkPhaseCorrelationImageRegistrationMethodPython.itkDataObjectDecoratorTTD4_swigregister(itkDataObjectDecoratorTTD4)
class itkPhaseCorrelationImageRegistrationMethodEnums(object):
    r"""Proxy of C++ itkPhaseCorrelationImageRegistrationMethodEnums class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    PaddingMethod_Zero = _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodEnums_PaddingMethod_Zero
    
    PaddingMethod_Mirror = _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodEnums_PaddingMethod_Mirror
    
    PaddingMethod_MirrorWithExponentialDecay = _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodEnums_PaddingMethod_MirrorWithExponentialDecay
    
    PaddingMethod_Last = _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodEnums_PaddingMethod_Last
    

    def __init__(self, *args):
        r"""
        __init__(self) -> itkPhaseCorrelationImageRegistrationMethodEnums
        __init__(self, arg0) -> itkPhaseCorrelationImageRegistrationMethodEnums

        Parameters
        ----------
        arg0: itkPhaseCorrelationImageRegistrationMethodEnums const &

        """
        _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodEnums_swiginit(self, _itkPhaseCorrelationImageRegistrationMethodPython.new_itkPhaseCorrelationImageRegistrationMethodEnums(*args))
    __swig_destroy__ = _itkPhaseCorrelationImageRegistrationMethodPython.delete_itkPhaseCorrelationImageRegistrationMethodEnums

# Register itkPhaseCorrelationImageRegistrationMethodEnums in _itkPhaseCorrelationImageRegistrationMethodPython:
_itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodEnums_swigregister(itkPhaseCorrelationImageRegistrationMethodEnums)

def itkPhaseCorrelationImageRegistrationMethodID2ID2_New():
    return itkPhaseCorrelationImageRegistrationMethodID2ID2.New()

class itkPhaseCorrelationImageRegistrationMethodID2ID2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkPhaseCorrelationImageRegistrationMethodID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhaseCorrelationImageRegistrationMethodID2ID2_Pointer"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhaseCorrelationImageRegistrationMethodID2ID2_Pointer"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID2ID2_Clone(self)

    def SetFixedImage(self, fixedImage):
        r"""
        SetFixedImage(self, fixedImage)

        Parameters
        ----------
        fixedImage: itkImageD2 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID2ID2_SetFixedImage(self, fixedImage)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageD2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID2ID2_GetFixedImage(self)

    def SetMovingImage(self, movingImage):
        r"""
        SetMovingImage(self, movingImage)

        Parameters
        ----------
        movingImage: itkImageD2 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID2ID2_SetMovingImage(self, movingImage)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageD2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID2ID2_GetMovingImage(self)

    def SetFixedImageFFT(self, fixedImageFFT):
        r"""
        SetFixedImageFFT(self, fixedImageFFT)

        Parameters
        ----------
        fixedImageFFT: itkImageCD2 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID2ID2_SetFixedImageFFT(self, fixedImageFFT)

    def GetFixedImageFFT(self):
        r"""GetFixedImageFFT(self) -> itkImageCD2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID2ID2_GetFixedImageFFT(self)

    def SetMovingImageFFT(self, movingImageFFT):
        r"""
        SetMovingImageFFT(self, movingImageFFT)

        Parameters
        ----------
        movingImageFFT: itkImageCD2 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID2ID2_SetMovingImageFFT(self, movingImageFFT)

    def GetMovingImageFFT(self):
        r"""GetMovingImageFFT(self) -> itkImageCD2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID2ID2_GetMovingImageFFT(self)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID2ID2_SetReleaseDataBeforeUpdateFlag(self, flag)

    def SetOperator(self, _arg):
        r"""
        SetOperator(self, _arg)

        Parameters
        ----------
        _arg: itkPhaseCorrelationOperatorD2 *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID2ID2_SetOperator(self, _arg)

    def GetOperator(self):
        r"""GetOperator(self) -> itkPhaseCorrelationOperatorD2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID2ID2_GetOperator(self)

    def SetOptimizer(self, arg0):
        r"""
        SetOptimizer(self, arg0)

        Parameters
        ----------
        arg0: itkPhaseCorrelationOptimizerD2 *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID2ID2_SetOptimizer(self, arg0)

    def GetOptimizer(self):
        r"""GetOptimizer(self) -> itkPhaseCorrelationOptimizerD2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID2ID2_GetOptimizer(self)

    def RoundUpToFFTSize(self, inSize):
        r"""
        RoundUpToFFTSize(self, inSize) -> itkSize2

        Parameters
        ----------
        inSize: itkSize2

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID2ID2_RoundUpToFFTSize(self, inSize)

    def SetPadToSize(self, _arg):
        r"""
        SetPadToSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID2ID2_SetPadToSize(self, _arg)

    def GetPadToSize(self):
        r"""GetPadToSize(self) -> itkSize2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID2ID2_GetPadToSize(self)

    def SetObligatoryPadding(self, _arg):
        r"""
        SetObligatoryPadding(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID2ID2_SetObligatoryPadding(self, _arg)

    def GetObligatoryPadding(self):
        r"""GetObligatoryPadding(self) -> itkSize2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID2ID2_GetObligatoryPadding(self)

    def SetPaddingMethod(self, paddingMethod):
        r"""
        SetPaddingMethod(self, paddingMethod)

        Parameters
        ----------
        paddingMethod: enum itkPhaseCorrelationImageRegistrationMethodEnums::PaddingMethod const

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID2ID2_SetPaddingMethod(self, paddingMethod)

    def SetCropToOverlap(self, _arg):
        r"""
        SetCropToOverlap(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID2ID2_SetCropToOverlap(self, _arg)

    def GetCropToOverlap(self):
        r"""GetCropToOverlap(self) -> bool"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID2ID2_GetCropToOverlap(self)

    def SetButterworthOrder(self, _arg):
        r"""
        SetButterworthOrder(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID2ID2_SetButterworthOrder(self, _arg)

    def GetButterworthOrder(self):
        r"""GetButterworthOrder(self) -> unsigned int"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID2ID2_GetButterworthOrder(self)

    def SetButterworthLowFrequency(self, f_Hz):
        r"""
        SetButterworthLowFrequency(self, f_Hz)

        Parameters
        ----------
        f_Hz: double

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID2ID2_SetButterworthLowFrequency(self, f_Hz)

    def GetButterworthLowFrequency(self):
        r"""GetButterworthLowFrequency(self) -> double"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID2ID2_GetButterworthLowFrequency(self)

    def SetButterworthHighFrequency(self, f_Hz):
        r"""
        SetButterworthHighFrequency(self, f_Hz)

        Parameters
        ----------
        f_Hz: double

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID2ID2_SetButterworthHighFrequency(self, f_Hz)

    def GetButterworthHighFrequency(self):
        r"""GetButterworthHighFrequency(self) -> double"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID2ID2_GetButterworthHighFrequency(self)

    def GetRealCorrelationSurface(self):
        r"""GetRealCorrelationSurface(self) -> itkImageD2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID2ID2_GetRealCorrelationSurface(self)

    def GetComplexCorrelationSurface(self):
        r"""GetComplexCorrelationSurface(self) -> itkImageCD2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID2ID2_GetComplexCorrelationSurface(self)

    def GetTransformParameters(self):
        r"""GetTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID2ID2_GetTransformParameters(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkDataObjectDecoratorTTD2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID2ID2_GetOutput(self)

    def GetPhaseCorrelationImage(self):
        r"""GetPhaseCorrelationImage(self) -> itkImageD2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID2ID2_GetPhaseCorrelationImage(self)

    def GetOffsets(self):
        r"""GetOffsets(self) -> vectoritkPointD2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID2ID2_GetOffsets(self)

    def GetConfidences(self):
        r"""GetConfidences(self) -> vectorD"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID2ID2_GetConfidences(self)
    SameDimensionCheck = _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID2ID2_SameDimensionCheck
    
    __swig_destroy__ = _itkPhaseCorrelationImageRegistrationMethodPython.delete_itkPhaseCorrelationImageRegistrationMethodID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhaseCorrelationImageRegistrationMethodID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPhaseCorrelationImageRegistrationMethodID2ID2

        Create a new object of the class itkPhaseCorrelationImageRegistrationMethodID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhaseCorrelationImageRegistrationMethodID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhaseCorrelationImageRegistrationMethodID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhaseCorrelationImageRegistrationMethodID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhaseCorrelationImageRegistrationMethodID2ID2 in _itkPhaseCorrelationImageRegistrationMethodPython:
_itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID2ID2_swigregister(itkPhaseCorrelationImageRegistrationMethodID2ID2)

def itkPhaseCorrelationImageRegistrationMethodID3ID3_New():
    return itkPhaseCorrelationImageRegistrationMethodID3ID3.New()

class itkPhaseCorrelationImageRegistrationMethodID3ID3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkPhaseCorrelationImageRegistrationMethodID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhaseCorrelationImageRegistrationMethodID3ID3_Pointer"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhaseCorrelationImageRegistrationMethodID3ID3_Pointer"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID3ID3_Clone(self)

    def SetFixedImage(self, fixedImage):
        r"""
        SetFixedImage(self, fixedImage)

        Parameters
        ----------
        fixedImage: itkImageD3 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID3ID3_SetFixedImage(self, fixedImage)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageD3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID3ID3_GetFixedImage(self)

    def SetMovingImage(self, movingImage):
        r"""
        SetMovingImage(self, movingImage)

        Parameters
        ----------
        movingImage: itkImageD3 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID3ID3_SetMovingImage(self, movingImage)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageD3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID3ID3_GetMovingImage(self)

    def SetFixedImageFFT(self, fixedImageFFT):
        r"""
        SetFixedImageFFT(self, fixedImageFFT)

        Parameters
        ----------
        fixedImageFFT: itkImageCD3 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID3ID3_SetFixedImageFFT(self, fixedImageFFT)

    def GetFixedImageFFT(self):
        r"""GetFixedImageFFT(self) -> itkImageCD3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID3ID3_GetFixedImageFFT(self)

    def SetMovingImageFFT(self, movingImageFFT):
        r"""
        SetMovingImageFFT(self, movingImageFFT)

        Parameters
        ----------
        movingImageFFT: itkImageCD3 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID3ID3_SetMovingImageFFT(self, movingImageFFT)

    def GetMovingImageFFT(self):
        r"""GetMovingImageFFT(self) -> itkImageCD3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID3ID3_GetMovingImageFFT(self)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID3ID3_SetReleaseDataBeforeUpdateFlag(self, flag)

    def SetOperator(self, _arg):
        r"""
        SetOperator(self, _arg)

        Parameters
        ----------
        _arg: itkPhaseCorrelationOperatorD3 *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID3ID3_SetOperator(self, _arg)

    def GetOperator(self):
        r"""GetOperator(self) -> itkPhaseCorrelationOperatorD3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID3ID3_GetOperator(self)

    def SetOptimizer(self, arg0):
        r"""
        SetOptimizer(self, arg0)

        Parameters
        ----------
        arg0: itkPhaseCorrelationOptimizerD3 *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID3ID3_SetOptimizer(self, arg0)

    def GetOptimizer(self):
        r"""GetOptimizer(self) -> itkPhaseCorrelationOptimizerD3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID3ID3_GetOptimizer(self)

    def RoundUpToFFTSize(self, inSize):
        r"""
        RoundUpToFFTSize(self, inSize) -> itkSize3

        Parameters
        ----------
        inSize: itkSize3

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID3ID3_RoundUpToFFTSize(self, inSize)

    def SetPadToSize(self, _arg):
        r"""
        SetPadToSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID3ID3_SetPadToSize(self, _arg)

    def GetPadToSize(self):
        r"""GetPadToSize(self) -> itkSize3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID3ID3_GetPadToSize(self)

    def SetObligatoryPadding(self, _arg):
        r"""
        SetObligatoryPadding(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID3ID3_SetObligatoryPadding(self, _arg)

    def GetObligatoryPadding(self):
        r"""GetObligatoryPadding(self) -> itkSize3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID3ID3_GetObligatoryPadding(self)

    def SetPaddingMethod(self, paddingMethod):
        r"""
        SetPaddingMethod(self, paddingMethod)

        Parameters
        ----------
        paddingMethod: enum itkPhaseCorrelationImageRegistrationMethodEnums::PaddingMethod const

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID3ID3_SetPaddingMethod(self, paddingMethod)

    def SetCropToOverlap(self, _arg):
        r"""
        SetCropToOverlap(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID3ID3_SetCropToOverlap(self, _arg)

    def GetCropToOverlap(self):
        r"""GetCropToOverlap(self) -> bool"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID3ID3_GetCropToOverlap(self)

    def SetButterworthOrder(self, _arg):
        r"""
        SetButterworthOrder(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID3ID3_SetButterworthOrder(self, _arg)

    def GetButterworthOrder(self):
        r"""GetButterworthOrder(self) -> unsigned int"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID3ID3_GetButterworthOrder(self)

    def SetButterworthLowFrequency(self, f_Hz):
        r"""
        SetButterworthLowFrequency(self, f_Hz)

        Parameters
        ----------
        f_Hz: double

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID3ID3_SetButterworthLowFrequency(self, f_Hz)

    def GetButterworthLowFrequency(self):
        r"""GetButterworthLowFrequency(self) -> double"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID3ID3_GetButterworthLowFrequency(self)

    def SetButterworthHighFrequency(self, f_Hz):
        r"""
        SetButterworthHighFrequency(self, f_Hz)

        Parameters
        ----------
        f_Hz: double

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID3ID3_SetButterworthHighFrequency(self, f_Hz)

    def GetButterworthHighFrequency(self):
        r"""GetButterworthHighFrequency(self) -> double"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID3ID3_GetButterworthHighFrequency(self)

    def GetRealCorrelationSurface(self):
        r"""GetRealCorrelationSurface(self) -> itkImageD3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID3ID3_GetRealCorrelationSurface(self)

    def GetComplexCorrelationSurface(self):
        r"""GetComplexCorrelationSurface(self) -> itkImageCD3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID3ID3_GetComplexCorrelationSurface(self)

    def GetTransformParameters(self):
        r"""GetTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID3ID3_GetTransformParameters(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkDataObjectDecoratorTTD3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID3ID3_GetOutput(self)

    def GetPhaseCorrelationImage(self):
        r"""GetPhaseCorrelationImage(self) -> itkImageD3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID3ID3_GetPhaseCorrelationImage(self)

    def GetOffsets(self):
        r"""GetOffsets(self) -> vectoritkPointD3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID3ID3_GetOffsets(self)

    def GetConfidences(self):
        r"""GetConfidences(self) -> vectorD"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID3ID3_GetConfidences(self)
    SameDimensionCheck = _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID3ID3_SameDimensionCheck
    
    __swig_destroy__ = _itkPhaseCorrelationImageRegistrationMethodPython.delete_itkPhaseCorrelationImageRegistrationMethodID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhaseCorrelationImageRegistrationMethodID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPhaseCorrelationImageRegistrationMethodID3ID3

        Create a new object of the class itkPhaseCorrelationImageRegistrationMethodID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhaseCorrelationImageRegistrationMethodID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhaseCorrelationImageRegistrationMethodID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhaseCorrelationImageRegistrationMethodID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhaseCorrelationImageRegistrationMethodID3ID3 in _itkPhaseCorrelationImageRegistrationMethodPython:
_itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID3ID3_swigregister(itkPhaseCorrelationImageRegistrationMethodID3ID3)

def itkPhaseCorrelationImageRegistrationMethodID4ID4_New():
    return itkPhaseCorrelationImageRegistrationMethodID4ID4.New()

class itkPhaseCorrelationImageRegistrationMethodID4ID4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkPhaseCorrelationImageRegistrationMethodID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhaseCorrelationImageRegistrationMethodID4ID4_Pointer"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhaseCorrelationImageRegistrationMethodID4ID4_Pointer"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID4ID4_Clone(self)

    def SetFixedImage(self, fixedImage):
        r"""
        SetFixedImage(self, fixedImage)

        Parameters
        ----------
        fixedImage: itkImageD4 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID4ID4_SetFixedImage(self, fixedImage)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageD4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID4ID4_GetFixedImage(self)

    def SetMovingImage(self, movingImage):
        r"""
        SetMovingImage(self, movingImage)

        Parameters
        ----------
        movingImage: itkImageD4 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID4ID4_SetMovingImage(self, movingImage)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageD4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID4ID4_GetMovingImage(self)

    def SetFixedImageFFT(self, fixedImageFFT):
        r"""
        SetFixedImageFFT(self, fixedImageFFT)

        Parameters
        ----------
        fixedImageFFT: itkImageCD4 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID4ID4_SetFixedImageFFT(self, fixedImageFFT)

    def GetFixedImageFFT(self):
        r"""GetFixedImageFFT(self) -> itkImageCD4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID4ID4_GetFixedImageFFT(self)

    def SetMovingImageFFT(self, movingImageFFT):
        r"""
        SetMovingImageFFT(self, movingImageFFT)

        Parameters
        ----------
        movingImageFFT: itkImageCD4 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID4ID4_SetMovingImageFFT(self, movingImageFFT)

    def GetMovingImageFFT(self):
        r"""GetMovingImageFFT(self) -> itkImageCD4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID4ID4_GetMovingImageFFT(self)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID4ID4_SetReleaseDataBeforeUpdateFlag(self, flag)

    def SetOperator(self, _arg):
        r"""
        SetOperator(self, _arg)

        Parameters
        ----------
        _arg: itkPhaseCorrelationOperatorD4 *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID4ID4_SetOperator(self, _arg)

    def GetOperator(self):
        r"""GetOperator(self) -> itkPhaseCorrelationOperatorD4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID4ID4_GetOperator(self)

    def SetOptimizer(self, arg0):
        r"""
        SetOptimizer(self, arg0)

        Parameters
        ----------
        arg0: itkPhaseCorrelationOptimizerD4 *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID4ID4_SetOptimizer(self, arg0)

    def GetOptimizer(self):
        r"""GetOptimizer(self) -> itkPhaseCorrelationOptimizerD4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID4ID4_GetOptimizer(self)

    def RoundUpToFFTSize(self, inSize):
        r"""
        RoundUpToFFTSize(self, inSize) -> itkSize4

        Parameters
        ----------
        inSize: itkSize4

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID4ID4_RoundUpToFFTSize(self, inSize)

    def SetPadToSize(self, _arg):
        r"""
        SetPadToSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID4ID4_SetPadToSize(self, _arg)

    def GetPadToSize(self):
        r"""GetPadToSize(self) -> itkSize4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID4ID4_GetPadToSize(self)

    def SetObligatoryPadding(self, _arg):
        r"""
        SetObligatoryPadding(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID4ID4_SetObligatoryPadding(self, _arg)

    def GetObligatoryPadding(self):
        r"""GetObligatoryPadding(self) -> itkSize4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID4ID4_GetObligatoryPadding(self)

    def SetPaddingMethod(self, paddingMethod):
        r"""
        SetPaddingMethod(self, paddingMethod)

        Parameters
        ----------
        paddingMethod: enum itkPhaseCorrelationImageRegistrationMethodEnums::PaddingMethod const

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID4ID4_SetPaddingMethod(self, paddingMethod)

    def SetCropToOverlap(self, _arg):
        r"""
        SetCropToOverlap(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID4ID4_SetCropToOverlap(self, _arg)

    def GetCropToOverlap(self):
        r"""GetCropToOverlap(self) -> bool"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID4ID4_GetCropToOverlap(self)

    def SetButterworthOrder(self, _arg):
        r"""
        SetButterworthOrder(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID4ID4_SetButterworthOrder(self, _arg)

    def GetButterworthOrder(self):
        r"""GetButterworthOrder(self) -> unsigned int"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID4ID4_GetButterworthOrder(self)

    def SetButterworthLowFrequency(self, f_Hz):
        r"""
        SetButterworthLowFrequency(self, f_Hz)

        Parameters
        ----------
        f_Hz: double

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID4ID4_SetButterworthLowFrequency(self, f_Hz)

    def GetButterworthLowFrequency(self):
        r"""GetButterworthLowFrequency(self) -> double"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID4ID4_GetButterworthLowFrequency(self)

    def SetButterworthHighFrequency(self, f_Hz):
        r"""
        SetButterworthHighFrequency(self, f_Hz)

        Parameters
        ----------
        f_Hz: double

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID4ID4_SetButterworthHighFrequency(self, f_Hz)

    def GetButterworthHighFrequency(self):
        r"""GetButterworthHighFrequency(self) -> double"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID4ID4_GetButterworthHighFrequency(self)

    def GetRealCorrelationSurface(self):
        r"""GetRealCorrelationSurface(self) -> itkImageD4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID4ID4_GetRealCorrelationSurface(self)

    def GetComplexCorrelationSurface(self):
        r"""GetComplexCorrelationSurface(self) -> itkImageCD4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID4ID4_GetComplexCorrelationSurface(self)

    def GetTransformParameters(self):
        r"""GetTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID4ID4_GetTransformParameters(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkDataObjectDecoratorTTD4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID4ID4_GetOutput(self)

    def GetPhaseCorrelationImage(self):
        r"""GetPhaseCorrelationImage(self) -> itkImageD4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID4ID4_GetPhaseCorrelationImage(self)

    def GetOffsets(self):
        r"""GetOffsets(self) -> vectoritkPointD4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID4ID4_GetOffsets(self)

    def GetConfidences(self):
        r"""GetConfidences(self) -> vectorD"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID4ID4_GetConfidences(self)
    SameDimensionCheck = _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID4ID4_SameDimensionCheck
    
    __swig_destroy__ = _itkPhaseCorrelationImageRegistrationMethodPython.delete_itkPhaseCorrelationImageRegistrationMethodID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhaseCorrelationImageRegistrationMethodID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPhaseCorrelationImageRegistrationMethodID4ID4

        Create a new object of the class itkPhaseCorrelationImageRegistrationMethodID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhaseCorrelationImageRegistrationMethodID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhaseCorrelationImageRegistrationMethodID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhaseCorrelationImageRegistrationMethodID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhaseCorrelationImageRegistrationMethodID4ID4 in _itkPhaseCorrelationImageRegistrationMethodPython:
_itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodID4ID4_swigregister(itkPhaseCorrelationImageRegistrationMethodID4ID4)

def itkPhaseCorrelationImageRegistrationMethodIF2IF2_New():
    return itkPhaseCorrelationImageRegistrationMethodIF2IF2.New()

class itkPhaseCorrelationImageRegistrationMethodIF2IF2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkPhaseCorrelationImageRegistrationMethodIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhaseCorrelationImageRegistrationMethodIF2IF2_Pointer"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhaseCorrelationImageRegistrationMethodIF2IF2_Pointer"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF2IF2_Clone(self)

    def SetFixedImage(self, fixedImage):
        r"""
        SetFixedImage(self, fixedImage)

        Parameters
        ----------
        fixedImage: itkImageF2 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF2IF2_SetFixedImage(self, fixedImage)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageF2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF2IF2_GetFixedImage(self)

    def SetMovingImage(self, movingImage):
        r"""
        SetMovingImage(self, movingImage)

        Parameters
        ----------
        movingImage: itkImageF2 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF2IF2_SetMovingImage(self, movingImage)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageF2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF2IF2_GetMovingImage(self)

    def SetFixedImageFFT(self, fixedImageFFT):
        r"""
        SetFixedImageFFT(self, fixedImageFFT)

        Parameters
        ----------
        fixedImageFFT: itkImageCF2 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF2IF2_SetFixedImageFFT(self, fixedImageFFT)

    def GetFixedImageFFT(self):
        r"""GetFixedImageFFT(self) -> itkImageCF2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF2IF2_GetFixedImageFFT(self)

    def SetMovingImageFFT(self, movingImageFFT):
        r"""
        SetMovingImageFFT(self, movingImageFFT)

        Parameters
        ----------
        movingImageFFT: itkImageCF2 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF2IF2_SetMovingImageFFT(self, movingImageFFT)

    def GetMovingImageFFT(self):
        r"""GetMovingImageFFT(self) -> itkImageCF2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF2IF2_GetMovingImageFFT(self)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF2IF2_SetReleaseDataBeforeUpdateFlag(self, flag)

    def SetOperator(self, _arg):
        r"""
        SetOperator(self, _arg)

        Parameters
        ----------
        _arg: itkPhaseCorrelationOperatorF2 *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF2IF2_SetOperator(self, _arg)

    def GetOperator(self):
        r"""GetOperator(self) -> itkPhaseCorrelationOperatorF2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF2IF2_GetOperator(self)

    def SetOptimizer(self, arg0):
        r"""
        SetOptimizer(self, arg0)

        Parameters
        ----------
        arg0: itkPhaseCorrelationOptimizerF2 *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF2IF2_SetOptimizer(self, arg0)

    def GetOptimizer(self):
        r"""GetOptimizer(self) -> itkPhaseCorrelationOptimizerF2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF2IF2_GetOptimizer(self)

    def RoundUpToFFTSize(self, inSize):
        r"""
        RoundUpToFFTSize(self, inSize) -> itkSize2

        Parameters
        ----------
        inSize: itkSize2

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF2IF2_RoundUpToFFTSize(self, inSize)

    def SetPadToSize(self, _arg):
        r"""
        SetPadToSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF2IF2_SetPadToSize(self, _arg)

    def GetPadToSize(self):
        r"""GetPadToSize(self) -> itkSize2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF2IF2_GetPadToSize(self)

    def SetObligatoryPadding(self, _arg):
        r"""
        SetObligatoryPadding(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF2IF2_SetObligatoryPadding(self, _arg)

    def GetObligatoryPadding(self):
        r"""GetObligatoryPadding(self) -> itkSize2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF2IF2_GetObligatoryPadding(self)

    def SetPaddingMethod(self, paddingMethod):
        r"""
        SetPaddingMethod(self, paddingMethod)

        Parameters
        ----------
        paddingMethod: enum itkPhaseCorrelationImageRegistrationMethodEnums::PaddingMethod const

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF2IF2_SetPaddingMethod(self, paddingMethod)

    def SetCropToOverlap(self, _arg):
        r"""
        SetCropToOverlap(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF2IF2_SetCropToOverlap(self, _arg)

    def GetCropToOverlap(self):
        r"""GetCropToOverlap(self) -> bool"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF2IF2_GetCropToOverlap(self)

    def SetButterworthOrder(self, _arg):
        r"""
        SetButterworthOrder(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF2IF2_SetButterworthOrder(self, _arg)

    def GetButterworthOrder(self):
        r"""GetButterworthOrder(self) -> unsigned int"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF2IF2_GetButterworthOrder(self)

    def SetButterworthLowFrequency(self, f_Hz):
        r"""
        SetButterworthLowFrequency(self, f_Hz)

        Parameters
        ----------
        f_Hz: double

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF2IF2_SetButterworthLowFrequency(self, f_Hz)

    def GetButterworthLowFrequency(self):
        r"""GetButterworthLowFrequency(self) -> double"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF2IF2_GetButterworthLowFrequency(self)

    def SetButterworthHighFrequency(self, f_Hz):
        r"""
        SetButterworthHighFrequency(self, f_Hz)

        Parameters
        ----------
        f_Hz: double

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF2IF2_SetButterworthHighFrequency(self, f_Hz)

    def GetButterworthHighFrequency(self):
        r"""GetButterworthHighFrequency(self) -> double"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF2IF2_GetButterworthHighFrequency(self)

    def GetRealCorrelationSurface(self):
        r"""GetRealCorrelationSurface(self) -> itkImageF2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF2IF2_GetRealCorrelationSurface(self)

    def GetComplexCorrelationSurface(self):
        r"""GetComplexCorrelationSurface(self) -> itkImageCF2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF2IF2_GetComplexCorrelationSurface(self)

    def GetTransformParameters(self):
        r"""GetTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF2IF2_GetTransformParameters(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkDataObjectDecoratorTTD2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF2IF2_GetOutput(self)

    def GetPhaseCorrelationImage(self):
        r"""GetPhaseCorrelationImage(self) -> itkImageF2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF2IF2_GetPhaseCorrelationImage(self)

    def GetOffsets(self):
        r"""GetOffsets(self) -> vectoritkPointD2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF2IF2_GetOffsets(self)

    def GetConfidences(self):
        r"""GetConfidences(self) -> vectorF"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF2IF2_GetConfidences(self)
    SameDimensionCheck = _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF2IF2_SameDimensionCheck
    
    __swig_destroy__ = _itkPhaseCorrelationImageRegistrationMethodPython.delete_itkPhaseCorrelationImageRegistrationMethodIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhaseCorrelationImageRegistrationMethodIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPhaseCorrelationImageRegistrationMethodIF2IF2

        Create a new object of the class itkPhaseCorrelationImageRegistrationMethodIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhaseCorrelationImageRegistrationMethodIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhaseCorrelationImageRegistrationMethodIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhaseCorrelationImageRegistrationMethodIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhaseCorrelationImageRegistrationMethodIF2IF2 in _itkPhaseCorrelationImageRegistrationMethodPython:
_itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF2IF2_swigregister(itkPhaseCorrelationImageRegistrationMethodIF2IF2)

def itkPhaseCorrelationImageRegistrationMethodIF3IF3_New():
    return itkPhaseCorrelationImageRegistrationMethodIF3IF3.New()

class itkPhaseCorrelationImageRegistrationMethodIF3IF3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkPhaseCorrelationImageRegistrationMethodIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhaseCorrelationImageRegistrationMethodIF3IF3_Pointer"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhaseCorrelationImageRegistrationMethodIF3IF3_Pointer"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF3IF3_Clone(self)

    def SetFixedImage(self, fixedImage):
        r"""
        SetFixedImage(self, fixedImage)

        Parameters
        ----------
        fixedImage: itkImageF3 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF3IF3_SetFixedImage(self, fixedImage)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageF3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF3IF3_GetFixedImage(self)

    def SetMovingImage(self, movingImage):
        r"""
        SetMovingImage(self, movingImage)

        Parameters
        ----------
        movingImage: itkImageF3 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF3IF3_SetMovingImage(self, movingImage)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageF3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF3IF3_GetMovingImage(self)

    def SetFixedImageFFT(self, fixedImageFFT):
        r"""
        SetFixedImageFFT(self, fixedImageFFT)

        Parameters
        ----------
        fixedImageFFT: itkImageCF3 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF3IF3_SetFixedImageFFT(self, fixedImageFFT)

    def GetFixedImageFFT(self):
        r"""GetFixedImageFFT(self) -> itkImageCF3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF3IF3_GetFixedImageFFT(self)

    def SetMovingImageFFT(self, movingImageFFT):
        r"""
        SetMovingImageFFT(self, movingImageFFT)

        Parameters
        ----------
        movingImageFFT: itkImageCF3 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF3IF3_SetMovingImageFFT(self, movingImageFFT)

    def GetMovingImageFFT(self):
        r"""GetMovingImageFFT(self) -> itkImageCF3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF3IF3_GetMovingImageFFT(self)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF3IF3_SetReleaseDataBeforeUpdateFlag(self, flag)

    def SetOperator(self, _arg):
        r"""
        SetOperator(self, _arg)

        Parameters
        ----------
        _arg: itkPhaseCorrelationOperatorF3 *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF3IF3_SetOperator(self, _arg)

    def GetOperator(self):
        r"""GetOperator(self) -> itkPhaseCorrelationOperatorF3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF3IF3_GetOperator(self)

    def SetOptimizer(self, arg0):
        r"""
        SetOptimizer(self, arg0)

        Parameters
        ----------
        arg0: itkPhaseCorrelationOptimizerF3 *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF3IF3_SetOptimizer(self, arg0)

    def GetOptimizer(self):
        r"""GetOptimizer(self) -> itkPhaseCorrelationOptimizerF3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF3IF3_GetOptimizer(self)

    def RoundUpToFFTSize(self, inSize):
        r"""
        RoundUpToFFTSize(self, inSize) -> itkSize3

        Parameters
        ----------
        inSize: itkSize3

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF3IF3_RoundUpToFFTSize(self, inSize)

    def SetPadToSize(self, _arg):
        r"""
        SetPadToSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF3IF3_SetPadToSize(self, _arg)

    def GetPadToSize(self):
        r"""GetPadToSize(self) -> itkSize3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF3IF3_GetPadToSize(self)

    def SetObligatoryPadding(self, _arg):
        r"""
        SetObligatoryPadding(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF3IF3_SetObligatoryPadding(self, _arg)

    def GetObligatoryPadding(self):
        r"""GetObligatoryPadding(self) -> itkSize3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF3IF3_GetObligatoryPadding(self)

    def SetPaddingMethod(self, paddingMethod):
        r"""
        SetPaddingMethod(self, paddingMethod)

        Parameters
        ----------
        paddingMethod: enum itkPhaseCorrelationImageRegistrationMethodEnums::PaddingMethod const

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF3IF3_SetPaddingMethod(self, paddingMethod)

    def SetCropToOverlap(self, _arg):
        r"""
        SetCropToOverlap(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF3IF3_SetCropToOverlap(self, _arg)

    def GetCropToOverlap(self):
        r"""GetCropToOverlap(self) -> bool"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF3IF3_GetCropToOverlap(self)

    def SetButterworthOrder(self, _arg):
        r"""
        SetButterworthOrder(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF3IF3_SetButterworthOrder(self, _arg)

    def GetButterworthOrder(self):
        r"""GetButterworthOrder(self) -> unsigned int"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF3IF3_GetButterworthOrder(self)

    def SetButterworthLowFrequency(self, f_Hz):
        r"""
        SetButterworthLowFrequency(self, f_Hz)

        Parameters
        ----------
        f_Hz: double

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF3IF3_SetButterworthLowFrequency(self, f_Hz)

    def GetButterworthLowFrequency(self):
        r"""GetButterworthLowFrequency(self) -> double"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF3IF3_GetButterworthLowFrequency(self)

    def SetButterworthHighFrequency(self, f_Hz):
        r"""
        SetButterworthHighFrequency(self, f_Hz)

        Parameters
        ----------
        f_Hz: double

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF3IF3_SetButterworthHighFrequency(self, f_Hz)

    def GetButterworthHighFrequency(self):
        r"""GetButterworthHighFrequency(self) -> double"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF3IF3_GetButterworthHighFrequency(self)

    def GetRealCorrelationSurface(self):
        r"""GetRealCorrelationSurface(self) -> itkImageF3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF3IF3_GetRealCorrelationSurface(self)

    def GetComplexCorrelationSurface(self):
        r"""GetComplexCorrelationSurface(self) -> itkImageCF3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF3IF3_GetComplexCorrelationSurface(self)

    def GetTransformParameters(self):
        r"""GetTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF3IF3_GetTransformParameters(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkDataObjectDecoratorTTD3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF3IF3_GetOutput(self)

    def GetPhaseCorrelationImage(self):
        r"""GetPhaseCorrelationImage(self) -> itkImageF3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF3IF3_GetPhaseCorrelationImage(self)

    def GetOffsets(self):
        r"""GetOffsets(self) -> vectoritkPointD3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF3IF3_GetOffsets(self)

    def GetConfidences(self):
        r"""GetConfidences(self) -> vectorF"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF3IF3_GetConfidences(self)
    SameDimensionCheck = _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF3IF3_SameDimensionCheck
    
    __swig_destroy__ = _itkPhaseCorrelationImageRegistrationMethodPython.delete_itkPhaseCorrelationImageRegistrationMethodIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhaseCorrelationImageRegistrationMethodIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPhaseCorrelationImageRegistrationMethodIF3IF3

        Create a new object of the class itkPhaseCorrelationImageRegistrationMethodIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhaseCorrelationImageRegistrationMethodIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhaseCorrelationImageRegistrationMethodIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhaseCorrelationImageRegistrationMethodIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhaseCorrelationImageRegistrationMethodIF3IF3 in _itkPhaseCorrelationImageRegistrationMethodPython:
_itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF3IF3_swigregister(itkPhaseCorrelationImageRegistrationMethodIF3IF3)

def itkPhaseCorrelationImageRegistrationMethodIF4IF4_New():
    return itkPhaseCorrelationImageRegistrationMethodIF4IF4.New()

class itkPhaseCorrelationImageRegistrationMethodIF4IF4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkPhaseCorrelationImageRegistrationMethodIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhaseCorrelationImageRegistrationMethodIF4IF4_Pointer"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhaseCorrelationImageRegistrationMethodIF4IF4_Pointer"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF4IF4_Clone(self)

    def SetFixedImage(self, fixedImage):
        r"""
        SetFixedImage(self, fixedImage)

        Parameters
        ----------
        fixedImage: itkImageF4 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF4IF4_SetFixedImage(self, fixedImage)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageF4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF4IF4_GetFixedImage(self)

    def SetMovingImage(self, movingImage):
        r"""
        SetMovingImage(self, movingImage)

        Parameters
        ----------
        movingImage: itkImageF4 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF4IF4_SetMovingImage(self, movingImage)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageF4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF4IF4_GetMovingImage(self)

    def SetFixedImageFFT(self, fixedImageFFT):
        r"""
        SetFixedImageFFT(self, fixedImageFFT)

        Parameters
        ----------
        fixedImageFFT: itkImageCF4 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF4IF4_SetFixedImageFFT(self, fixedImageFFT)

    def GetFixedImageFFT(self):
        r"""GetFixedImageFFT(self) -> itkImageCF4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF4IF4_GetFixedImageFFT(self)

    def SetMovingImageFFT(self, movingImageFFT):
        r"""
        SetMovingImageFFT(self, movingImageFFT)

        Parameters
        ----------
        movingImageFFT: itkImageCF4 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF4IF4_SetMovingImageFFT(self, movingImageFFT)

    def GetMovingImageFFT(self):
        r"""GetMovingImageFFT(self) -> itkImageCF4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF4IF4_GetMovingImageFFT(self)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF4IF4_SetReleaseDataBeforeUpdateFlag(self, flag)

    def SetOperator(self, _arg):
        r"""
        SetOperator(self, _arg)

        Parameters
        ----------
        _arg: itkPhaseCorrelationOperatorF4 *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF4IF4_SetOperator(self, _arg)

    def GetOperator(self):
        r"""GetOperator(self) -> itkPhaseCorrelationOperatorF4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF4IF4_GetOperator(self)

    def SetOptimizer(self, arg0):
        r"""
        SetOptimizer(self, arg0)

        Parameters
        ----------
        arg0: itkPhaseCorrelationOptimizerF4 *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF4IF4_SetOptimizer(self, arg0)

    def GetOptimizer(self):
        r"""GetOptimizer(self) -> itkPhaseCorrelationOptimizerF4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF4IF4_GetOptimizer(self)

    def RoundUpToFFTSize(self, inSize):
        r"""
        RoundUpToFFTSize(self, inSize) -> itkSize4

        Parameters
        ----------
        inSize: itkSize4

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF4IF4_RoundUpToFFTSize(self, inSize)

    def SetPadToSize(self, _arg):
        r"""
        SetPadToSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF4IF4_SetPadToSize(self, _arg)

    def GetPadToSize(self):
        r"""GetPadToSize(self) -> itkSize4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF4IF4_GetPadToSize(self)

    def SetObligatoryPadding(self, _arg):
        r"""
        SetObligatoryPadding(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF4IF4_SetObligatoryPadding(self, _arg)

    def GetObligatoryPadding(self):
        r"""GetObligatoryPadding(self) -> itkSize4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF4IF4_GetObligatoryPadding(self)

    def SetPaddingMethod(self, paddingMethod):
        r"""
        SetPaddingMethod(self, paddingMethod)

        Parameters
        ----------
        paddingMethod: enum itkPhaseCorrelationImageRegistrationMethodEnums::PaddingMethod const

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF4IF4_SetPaddingMethod(self, paddingMethod)

    def SetCropToOverlap(self, _arg):
        r"""
        SetCropToOverlap(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF4IF4_SetCropToOverlap(self, _arg)

    def GetCropToOverlap(self):
        r"""GetCropToOverlap(self) -> bool"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF4IF4_GetCropToOverlap(self)

    def SetButterworthOrder(self, _arg):
        r"""
        SetButterworthOrder(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF4IF4_SetButterworthOrder(self, _arg)

    def GetButterworthOrder(self):
        r"""GetButterworthOrder(self) -> unsigned int"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF4IF4_GetButterworthOrder(self)

    def SetButterworthLowFrequency(self, f_Hz):
        r"""
        SetButterworthLowFrequency(self, f_Hz)

        Parameters
        ----------
        f_Hz: double

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF4IF4_SetButterworthLowFrequency(self, f_Hz)

    def GetButterworthLowFrequency(self):
        r"""GetButterworthLowFrequency(self) -> double"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF4IF4_GetButterworthLowFrequency(self)

    def SetButterworthHighFrequency(self, f_Hz):
        r"""
        SetButterworthHighFrequency(self, f_Hz)

        Parameters
        ----------
        f_Hz: double

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF4IF4_SetButterworthHighFrequency(self, f_Hz)

    def GetButterworthHighFrequency(self):
        r"""GetButterworthHighFrequency(self) -> double"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF4IF4_GetButterworthHighFrequency(self)

    def GetRealCorrelationSurface(self):
        r"""GetRealCorrelationSurface(self) -> itkImageF4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF4IF4_GetRealCorrelationSurface(self)

    def GetComplexCorrelationSurface(self):
        r"""GetComplexCorrelationSurface(self) -> itkImageCF4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF4IF4_GetComplexCorrelationSurface(self)

    def GetTransformParameters(self):
        r"""GetTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF4IF4_GetTransformParameters(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkDataObjectDecoratorTTD4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF4IF4_GetOutput(self)

    def GetPhaseCorrelationImage(self):
        r"""GetPhaseCorrelationImage(self) -> itkImageF4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF4IF4_GetPhaseCorrelationImage(self)

    def GetOffsets(self):
        r"""GetOffsets(self) -> vectoritkPointD4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF4IF4_GetOffsets(self)

    def GetConfidences(self):
        r"""GetConfidences(self) -> vectorF"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF4IF4_GetConfidences(self)
    SameDimensionCheck = _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF4IF4_SameDimensionCheck
    
    __swig_destroy__ = _itkPhaseCorrelationImageRegistrationMethodPython.delete_itkPhaseCorrelationImageRegistrationMethodIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhaseCorrelationImageRegistrationMethodIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPhaseCorrelationImageRegistrationMethodIF4IF4

        Create a new object of the class itkPhaseCorrelationImageRegistrationMethodIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhaseCorrelationImageRegistrationMethodIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhaseCorrelationImageRegistrationMethodIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhaseCorrelationImageRegistrationMethodIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhaseCorrelationImageRegistrationMethodIF4IF4 in _itkPhaseCorrelationImageRegistrationMethodPython:
_itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIF4IF4_swigregister(itkPhaseCorrelationImageRegistrationMethodIF4IF4)

def itkPhaseCorrelationImageRegistrationMethodISS2ISS2_New():
    return itkPhaseCorrelationImageRegistrationMethodISS2ISS2.New()

class itkPhaseCorrelationImageRegistrationMethodISS2ISS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkPhaseCorrelationImageRegistrationMethodISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhaseCorrelationImageRegistrationMethodISS2ISS2_Pointer"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhaseCorrelationImageRegistrationMethodISS2ISS2_Pointer"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS2ISS2_Clone(self)

    def SetFixedImage(self, fixedImage):
        r"""
        SetFixedImage(self, fixedImage)

        Parameters
        ----------
        fixedImage: itkImageSS2 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS2ISS2_SetFixedImage(self, fixedImage)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageSS2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS2ISS2_GetFixedImage(self)

    def SetMovingImage(self, movingImage):
        r"""
        SetMovingImage(self, movingImage)

        Parameters
        ----------
        movingImage: itkImageSS2 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS2ISS2_SetMovingImage(self, movingImage)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageSS2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS2ISS2_GetMovingImage(self)

    def SetFixedImageFFT(self, fixedImageFFT):
        r"""
        SetFixedImageFFT(self, fixedImageFFT)

        Parameters
        ----------
        fixedImageFFT: itkImageCF2 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS2ISS2_SetFixedImageFFT(self, fixedImageFFT)

    def GetFixedImageFFT(self):
        r"""GetFixedImageFFT(self) -> itkImageCF2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS2ISS2_GetFixedImageFFT(self)

    def SetMovingImageFFT(self, movingImageFFT):
        r"""
        SetMovingImageFFT(self, movingImageFFT)

        Parameters
        ----------
        movingImageFFT: itkImageCF2 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS2ISS2_SetMovingImageFFT(self, movingImageFFT)

    def GetMovingImageFFT(self):
        r"""GetMovingImageFFT(self) -> itkImageCF2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS2ISS2_GetMovingImageFFT(self)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS2ISS2_SetReleaseDataBeforeUpdateFlag(self, flag)

    def SetOperator(self, _arg):
        r"""
        SetOperator(self, _arg)

        Parameters
        ----------
        _arg: itkPhaseCorrelationOperatorF2 *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS2ISS2_SetOperator(self, _arg)

    def GetOperator(self):
        r"""GetOperator(self) -> itkPhaseCorrelationOperatorF2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS2ISS2_GetOperator(self)

    def SetOptimizer(self, arg0):
        r"""
        SetOptimizer(self, arg0)

        Parameters
        ----------
        arg0: itkPhaseCorrelationOptimizerF2 *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS2ISS2_SetOptimizer(self, arg0)

    def GetOptimizer(self):
        r"""GetOptimizer(self) -> itkPhaseCorrelationOptimizerF2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS2ISS2_GetOptimizer(self)

    def RoundUpToFFTSize(self, inSize):
        r"""
        RoundUpToFFTSize(self, inSize) -> itkSize2

        Parameters
        ----------
        inSize: itkSize2

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS2ISS2_RoundUpToFFTSize(self, inSize)

    def SetPadToSize(self, _arg):
        r"""
        SetPadToSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS2ISS2_SetPadToSize(self, _arg)

    def GetPadToSize(self):
        r"""GetPadToSize(self) -> itkSize2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS2ISS2_GetPadToSize(self)

    def SetObligatoryPadding(self, _arg):
        r"""
        SetObligatoryPadding(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS2ISS2_SetObligatoryPadding(self, _arg)

    def GetObligatoryPadding(self):
        r"""GetObligatoryPadding(self) -> itkSize2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS2ISS2_GetObligatoryPadding(self)

    def SetPaddingMethod(self, paddingMethod):
        r"""
        SetPaddingMethod(self, paddingMethod)

        Parameters
        ----------
        paddingMethod: enum itkPhaseCorrelationImageRegistrationMethodEnums::PaddingMethod const

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS2ISS2_SetPaddingMethod(self, paddingMethod)

    def SetCropToOverlap(self, _arg):
        r"""
        SetCropToOverlap(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS2ISS2_SetCropToOverlap(self, _arg)

    def GetCropToOverlap(self):
        r"""GetCropToOverlap(self) -> bool"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS2ISS2_GetCropToOverlap(self)

    def SetButterworthOrder(self, _arg):
        r"""
        SetButterworthOrder(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS2ISS2_SetButterworthOrder(self, _arg)

    def GetButterworthOrder(self):
        r"""GetButterworthOrder(self) -> unsigned int"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS2ISS2_GetButterworthOrder(self)

    def SetButterworthLowFrequency(self, f_Hz):
        r"""
        SetButterworthLowFrequency(self, f_Hz)

        Parameters
        ----------
        f_Hz: double

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS2ISS2_SetButterworthLowFrequency(self, f_Hz)

    def GetButterworthLowFrequency(self):
        r"""GetButterworthLowFrequency(self) -> double"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS2ISS2_GetButterworthLowFrequency(self)

    def SetButterworthHighFrequency(self, f_Hz):
        r"""
        SetButterworthHighFrequency(self, f_Hz)

        Parameters
        ----------
        f_Hz: double

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS2ISS2_SetButterworthHighFrequency(self, f_Hz)

    def GetButterworthHighFrequency(self):
        r"""GetButterworthHighFrequency(self) -> double"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS2ISS2_GetButterworthHighFrequency(self)

    def GetRealCorrelationSurface(self):
        r"""GetRealCorrelationSurface(self) -> itkImageF2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS2ISS2_GetRealCorrelationSurface(self)

    def GetComplexCorrelationSurface(self):
        r"""GetComplexCorrelationSurface(self) -> itkImageCF2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS2ISS2_GetComplexCorrelationSurface(self)

    def GetTransformParameters(self):
        r"""GetTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS2ISS2_GetTransformParameters(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkDataObjectDecoratorTTD2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS2ISS2_GetOutput(self)

    def GetPhaseCorrelationImage(self):
        r"""GetPhaseCorrelationImage(self) -> itkImageF2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS2ISS2_GetPhaseCorrelationImage(self)

    def GetOffsets(self):
        r"""GetOffsets(self) -> vectoritkPointD2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS2ISS2_GetOffsets(self)

    def GetConfidences(self):
        r"""GetConfidences(self) -> vectorF"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS2ISS2_GetConfidences(self)
    SameDimensionCheck = _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS2ISS2_SameDimensionCheck
    
    __swig_destroy__ = _itkPhaseCorrelationImageRegistrationMethodPython.delete_itkPhaseCorrelationImageRegistrationMethodISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhaseCorrelationImageRegistrationMethodISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPhaseCorrelationImageRegistrationMethodISS2ISS2

        Create a new object of the class itkPhaseCorrelationImageRegistrationMethodISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhaseCorrelationImageRegistrationMethodISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhaseCorrelationImageRegistrationMethodISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhaseCorrelationImageRegistrationMethodISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhaseCorrelationImageRegistrationMethodISS2ISS2 in _itkPhaseCorrelationImageRegistrationMethodPython:
_itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS2ISS2_swigregister(itkPhaseCorrelationImageRegistrationMethodISS2ISS2)

def itkPhaseCorrelationImageRegistrationMethodISS3ISS3_New():
    return itkPhaseCorrelationImageRegistrationMethodISS3ISS3.New()

class itkPhaseCorrelationImageRegistrationMethodISS3ISS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkPhaseCorrelationImageRegistrationMethodISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhaseCorrelationImageRegistrationMethodISS3ISS3_Pointer"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhaseCorrelationImageRegistrationMethodISS3ISS3_Pointer"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS3ISS3_Clone(self)

    def SetFixedImage(self, fixedImage):
        r"""
        SetFixedImage(self, fixedImage)

        Parameters
        ----------
        fixedImage: itkImageSS3 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS3ISS3_SetFixedImage(self, fixedImage)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageSS3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS3ISS3_GetFixedImage(self)

    def SetMovingImage(self, movingImage):
        r"""
        SetMovingImage(self, movingImage)

        Parameters
        ----------
        movingImage: itkImageSS3 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS3ISS3_SetMovingImage(self, movingImage)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageSS3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS3ISS3_GetMovingImage(self)

    def SetFixedImageFFT(self, fixedImageFFT):
        r"""
        SetFixedImageFFT(self, fixedImageFFT)

        Parameters
        ----------
        fixedImageFFT: itkImageCF3 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS3ISS3_SetFixedImageFFT(self, fixedImageFFT)

    def GetFixedImageFFT(self):
        r"""GetFixedImageFFT(self) -> itkImageCF3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS3ISS3_GetFixedImageFFT(self)

    def SetMovingImageFFT(self, movingImageFFT):
        r"""
        SetMovingImageFFT(self, movingImageFFT)

        Parameters
        ----------
        movingImageFFT: itkImageCF3 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS3ISS3_SetMovingImageFFT(self, movingImageFFT)

    def GetMovingImageFFT(self):
        r"""GetMovingImageFFT(self) -> itkImageCF3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS3ISS3_GetMovingImageFFT(self)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS3ISS3_SetReleaseDataBeforeUpdateFlag(self, flag)

    def SetOperator(self, _arg):
        r"""
        SetOperator(self, _arg)

        Parameters
        ----------
        _arg: itkPhaseCorrelationOperatorF3 *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS3ISS3_SetOperator(self, _arg)

    def GetOperator(self):
        r"""GetOperator(self) -> itkPhaseCorrelationOperatorF3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS3ISS3_GetOperator(self)

    def SetOptimizer(self, arg0):
        r"""
        SetOptimizer(self, arg0)

        Parameters
        ----------
        arg0: itkPhaseCorrelationOptimizerF3 *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS3ISS3_SetOptimizer(self, arg0)

    def GetOptimizer(self):
        r"""GetOptimizer(self) -> itkPhaseCorrelationOptimizerF3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS3ISS3_GetOptimizer(self)

    def RoundUpToFFTSize(self, inSize):
        r"""
        RoundUpToFFTSize(self, inSize) -> itkSize3

        Parameters
        ----------
        inSize: itkSize3

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS3ISS3_RoundUpToFFTSize(self, inSize)

    def SetPadToSize(self, _arg):
        r"""
        SetPadToSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS3ISS3_SetPadToSize(self, _arg)

    def GetPadToSize(self):
        r"""GetPadToSize(self) -> itkSize3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS3ISS3_GetPadToSize(self)

    def SetObligatoryPadding(self, _arg):
        r"""
        SetObligatoryPadding(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS3ISS3_SetObligatoryPadding(self, _arg)

    def GetObligatoryPadding(self):
        r"""GetObligatoryPadding(self) -> itkSize3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS3ISS3_GetObligatoryPadding(self)

    def SetPaddingMethod(self, paddingMethod):
        r"""
        SetPaddingMethod(self, paddingMethod)

        Parameters
        ----------
        paddingMethod: enum itkPhaseCorrelationImageRegistrationMethodEnums::PaddingMethod const

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS3ISS3_SetPaddingMethod(self, paddingMethod)

    def SetCropToOverlap(self, _arg):
        r"""
        SetCropToOverlap(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS3ISS3_SetCropToOverlap(self, _arg)

    def GetCropToOverlap(self):
        r"""GetCropToOverlap(self) -> bool"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS3ISS3_GetCropToOverlap(self)

    def SetButterworthOrder(self, _arg):
        r"""
        SetButterworthOrder(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS3ISS3_SetButterworthOrder(self, _arg)

    def GetButterworthOrder(self):
        r"""GetButterworthOrder(self) -> unsigned int"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS3ISS3_GetButterworthOrder(self)

    def SetButterworthLowFrequency(self, f_Hz):
        r"""
        SetButterworthLowFrequency(self, f_Hz)

        Parameters
        ----------
        f_Hz: double

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS3ISS3_SetButterworthLowFrequency(self, f_Hz)

    def GetButterworthLowFrequency(self):
        r"""GetButterworthLowFrequency(self) -> double"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS3ISS3_GetButterworthLowFrequency(self)

    def SetButterworthHighFrequency(self, f_Hz):
        r"""
        SetButterworthHighFrequency(self, f_Hz)

        Parameters
        ----------
        f_Hz: double

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS3ISS3_SetButterworthHighFrequency(self, f_Hz)

    def GetButterworthHighFrequency(self):
        r"""GetButterworthHighFrequency(self) -> double"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS3ISS3_GetButterworthHighFrequency(self)

    def GetRealCorrelationSurface(self):
        r"""GetRealCorrelationSurface(self) -> itkImageF3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS3ISS3_GetRealCorrelationSurface(self)

    def GetComplexCorrelationSurface(self):
        r"""GetComplexCorrelationSurface(self) -> itkImageCF3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS3ISS3_GetComplexCorrelationSurface(self)

    def GetTransformParameters(self):
        r"""GetTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS3ISS3_GetTransformParameters(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkDataObjectDecoratorTTD3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS3ISS3_GetOutput(self)

    def GetPhaseCorrelationImage(self):
        r"""GetPhaseCorrelationImage(self) -> itkImageF3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS3ISS3_GetPhaseCorrelationImage(self)

    def GetOffsets(self):
        r"""GetOffsets(self) -> vectoritkPointD3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS3ISS3_GetOffsets(self)

    def GetConfidences(self):
        r"""GetConfidences(self) -> vectorF"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS3ISS3_GetConfidences(self)
    SameDimensionCheck = _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS3ISS3_SameDimensionCheck
    
    __swig_destroy__ = _itkPhaseCorrelationImageRegistrationMethodPython.delete_itkPhaseCorrelationImageRegistrationMethodISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhaseCorrelationImageRegistrationMethodISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPhaseCorrelationImageRegistrationMethodISS3ISS3

        Create a new object of the class itkPhaseCorrelationImageRegistrationMethodISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhaseCorrelationImageRegistrationMethodISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhaseCorrelationImageRegistrationMethodISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhaseCorrelationImageRegistrationMethodISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhaseCorrelationImageRegistrationMethodISS3ISS3 in _itkPhaseCorrelationImageRegistrationMethodPython:
_itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS3ISS3_swigregister(itkPhaseCorrelationImageRegistrationMethodISS3ISS3)

def itkPhaseCorrelationImageRegistrationMethodISS4ISS4_New():
    return itkPhaseCorrelationImageRegistrationMethodISS4ISS4.New()

class itkPhaseCorrelationImageRegistrationMethodISS4ISS4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkPhaseCorrelationImageRegistrationMethodISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhaseCorrelationImageRegistrationMethodISS4ISS4_Pointer"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhaseCorrelationImageRegistrationMethodISS4ISS4_Pointer"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS4ISS4_Clone(self)

    def SetFixedImage(self, fixedImage):
        r"""
        SetFixedImage(self, fixedImage)

        Parameters
        ----------
        fixedImage: itkImageSS4 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS4ISS4_SetFixedImage(self, fixedImage)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageSS4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS4ISS4_GetFixedImage(self)

    def SetMovingImage(self, movingImage):
        r"""
        SetMovingImage(self, movingImage)

        Parameters
        ----------
        movingImage: itkImageSS4 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS4ISS4_SetMovingImage(self, movingImage)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageSS4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS4ISS4_GetMovingImage(self)

    def SetFixedImageFFT(self, fixedImageFFT):
        r"""
        SetFixedImageFFT(self, fixedImageFFT)

        Parameters
        ----------
        fixedImageFFT: itkImageCF4 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS4ISS4_SetFixedImageFFT(self, fixedImageFFT)

    def GetFixedImageFFT(self):
        r"""GetFixedImageFFT(self) -> itkImageCF4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS4ISS4_GetFixedImageFFT(self)

    def SetMovingImageFFT(self, movingImageFFT):
        r"""
        SetMovingImageFFT(self, movingImageFFT)

        Parameters
        ----------
        movingImageFFT: itkImageCF4 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS4ISS4_SetMovingImageFFT(self, movingImageFFT)

    def GetMovingImageFFT(self):
        r"""GetMovingImageFFT(self) -> itkImageCF4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS4ISS4_GetMovingImageFFT(self)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS4ISS4_SetReleaseDataBeforeUpdateFlag(self, flag)

    def SetOperator(self, _arg):
        r"""
        SetOperator(self, _arg)

        Parameters
        ----------
        _arg: itkPhaseCorrelationOperatorF4 *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS4ISS4_SetOperator(self, _arg)

    def GetOperator(self):
        r"""GetOperator(self) -> itkPhaseCorrelationOperatorF4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS4ISS4_GetOperator(self)

    def SetOptimizer(self, arg0):
        r"""
        SetOptimizer(self, arg0)

        Parameters
        ----------
        arg0: itkPhaseCorrelationOptimizerF4 *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS4ISS4_SetOptimizer(self, arg0)

    def GetOptimizer(self):
        r"""GetOptimizer(self) -> itkPhaseCorrelationOptimizerF4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS4ISS4_GetOptimizer(self)

    def RoundUpToFFTSize(self, inSize):
        r"""
        RoundUpToFFTSize(self, inSize) -> itkSize4

        Parameters
        ----------
        inSize: itkSize4

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS4ISS4_RoundUpToFFTSize(self, inSize)

    def SetPadToSize(self, _arg):
        r"""
        SetPadToSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS4ISS4_SetPadToSize(self, _arg)

    def GetPadToSize(self):
        r"""GetPadToSize(self) -> itkSize4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS4ISS4_GetPadToSize(self)

    def SetObligatoryPadding(self, _arg):
        r"""
        SetObligatoryPadding(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS4ISS4_SetObligatoryPadding(self, _arg)

    def GetObligatoryPadding(self):
        r"""GetObligatoryPadding(self) -> itkSize4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS4ISS4_GetObligatoryPadding(self)

    def SetPaddingMethod(self, paddingMethod):
        r"""
        SetPaddingMethod(self, paddingMethod)

        Parameters
        ----------
        paddingMethod: enum itkPhaseCorrelationImageRegistrationMethodEnums::PaddingMethod const

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS4ISS4_SetPaddingMethod(self, paddingMethod)

    def SetCropToOverlap(self, _arg):
        r"""
        SetCropToOverlap(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS4ISS4_SetCropToOverlap(self, _arg)

    def GetCropToOverlap(self):
        r"""GetCropToOverlap(self) -> bool"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS4ISS4_GetCropToOverlap(self)

    def SetButterworthOrder(self, _arg):
        r"""
        SetButterworthOrder(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS4ISS4_SetButterworthOrder(self, _arg)

    def GetButterworthOrder(self):
        r"""GetButterworthOrder(self) -> unsigned int"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS4ISS4_GetButterworthOrder(self)

    def SetButterworthLowFrequency(self, f_Hz):
        r"""
        SetButterworthLowFrequency(self, f_Hz)

        Parameters
        ----------
        f_Hz: double

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS4ISS4_SetButterworthLowFrequency(self, f_Hz)

    def GetButterworthLowFrequency(self):
        r"""GetButterworthLowFrequency(self) -> double"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS4ISS4_GetButterworthLowFrequency(self)

    def SetButterworthHighFrequency(self, f_Hz):
        r"""
        SetButterworthHighFrequency(self, f_Hz)

        Parameters
        ----------
        f_Hz: double

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS4ISS4_SetButterworthHighFrequency(self, f_Hz)

    def GetButterworthHighFrequency(self):
        r"""GetButterworthHighFrequency(self) -> double"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS4ISS4_GetButterworthHighFrequency(self)

    def GetRealCorrelationSurface(self):
        r"""GetRealCorrelationSurface(self) -> itkImageF4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS4ISS4_GetRealCorrelationSurface(self)

    def GetComplexCorrelationSurface(self):
        r"""GetComplexCorrelationSurface(self) -> itkImageCF4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS4ISS4_GetComplexCorrelationSurface(self)

    def GetTransformParameters(self):
        r"""GetTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS4ISS4_GetTransformParameters(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkDataObjectDecoratorTTD4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS4ISS4_GetOutput(self)

    def GetPhaseCorrelationImage(self):
        r"""GetPhaseCorrelationImage(self) -> itkImageF4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS4ISS4_GetPhaseCorrelationImage(self)

    def GetOffsets(self):
        r"""GetOffsets(self) -> vectoritkPointD4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS4ISS4_GetOffsets(self)

    def GetConfidences(self):
        r"""GetConfidences(self) -> vectorF"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS4ISS4_GetConfidences(self)
    SameDimensionCheck = _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS4ISS4_SameDimensionCheck
    
    __swig_destroy__ = _itkPhaseCorrelationImageRegistrationMethodPython.delete_itkPhaseCorrelationImageRegistrationMethodISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhaseCorrelationImageRegistrationMethodISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPhaseCorrelationImageRegistrationMethodISS4ISS4

        Create a new object of the class itkPhaseCorrelationImageRegistrationMethodISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhaseCorrelationImageRegistrationMethodISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhaseCorrelationImageRegistrationMethodISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhaseCorrelationImageRegistrationMethodISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhaseCorrelationImageRegistrationMethodISS4ISS4 in _itkPhaseCorrelationImageRegistrationMethodPython:
_itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodISS4ISS4_swigregister(itkPhaseCorrelationImageRegistrationMethodISS4ISS4)

def itkPhaseCorrelationImageRegistrationMethodIUC2IUC2_New():
    return itkPhaseCorrelationImageRegistrationMethodIUC2IUC2.New()

class itkPhaseCorrelationImageRegistrationMethodIUC2IUC2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkPhaseCorrelationImageRegistrationMethodIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhaseCorrelationImageRegistrationMethodIUC2IUC2_Pointer"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhaseCorrelationImageRegistrationMethodIUC2IUC2_Pointer"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC2IUC2_Clone(self)

    def SetFixedImage(self, fixedImage):
        r"""
        SetFixedImage(self, fixedImage)

        Parameters
        ----------
        fixedImage: itkImageUC2 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC2IUC2_SetFixedImage(self, fixedImage)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageUC2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC2IUC2_GetFixedImage(self)

    def SetMovingImage(self, movingImage):
        r"""
        SetMovingImage(self, movingImage)

        Parameters
        ----------
        movingImage: itkImageUC2 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC2IUC2_SetMovingImage(self, movingImage)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageUC2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC2IUC2_GetMovingImage(self)

    def SetFixedImageFFT(self, fixedImageFFT):
        r"""
        SetFixedImageFFT(self, fixedImageFFT)

        Parameters
        ----------
        fixedImageFFT: itkImageCF2 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC2IUC2_SetFixedImageFFT(self, fixedImageFFT)

    def GetFixedImageFFT(self):
        r"""GetFixedImageFFT(self) -> itkImageCF2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC2IUC2_GetFixedImageFFT(self)

    def SetMovingImageFFT(self, movingImageFFT):
        r"""
        SetMovingImageFFT(self, movingImageFFT)

        Parameters
        ----------
        movingImageFFT: itkImageCF2 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC2IUC2_SetMovingImageFFT(self, movingImageFFT)

    def GetMovingImageFFT(self):
        r"""GetMovingImageFFT(self) -> itkImageCF2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC2IUC2_GetMovingImageFFT(self)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC2IUC2_SetReleaseDataBeforeUpdateFlag(self, flag)

    def SetOperator(self, _arg):
        r"""
        SetOperator(self, _arg)

        Parameters
        ----------
        _arg: itkPhaseCorrelationOperatorF2 *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC2IUC2_SetOperator(self, _arg)

    def GetOperator(self):
        r"""GetOperator(self) -> itkPhaseCorrelationOperatorF2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC2IUC2_GetOperator(self)

    def SetOptimizer(self, arg0):
        r"""
        SetOptimizer(self, arg0)

        Parameters
        ----------
        arg0: itkPhaseCorrelationOptimizerF2 *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC2IUC2_SetOptimizer(self, arg0)

    def GetOptimizer(self):
        r"""GetOptimizer(self) -> itkPhaseCorrelationOptimizerF2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC2IUC2_GetOptimizer(self)

    def RoundUpToFFTSize(self, inSize):
        r"""
        RoundUpToFFTSize(self, inSize) -> itkSize2

        Parameters
        ----------
        inSize: itkSize2

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC2IUC2_RoundUpToFFTSize(self, inSize)

    def SetPadToSize(self, _arg):
        r"""
        SetPadToSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC2IUC2_SetPadToSize(self, _arg)

    def GetPadToSize(self):
        r"""GetPadToSize(self) -> itkSize2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC2IUC2_GetPadToSize(self)

    def SetObligatoryPadding(self, _arg):
        r"""
        SetObligatoryPadding(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC2IUC2_SetObligatoryPadding(self, _arg)

    def GetObligatoryPadding(self):
        r"""GetObligatoryPadding(self) -> itkSize2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC2IUC2_GetObligatoryPadding(self)

    def SetPaddingMethod(self, paddingMethod):
        r"""
        SetPaddingMethod(self, paddingMethod)

        Parameters
        ----------
        paddingMethod: enum itkPhaseCorrelationImageRegistrationMethodEnums::PaddingMethod const

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC2IUC2_SetPaddingMethod(self, paddingMethod)

    def SetCropToOverlap(self, _arg):
        r"""
        SetCropToOverlap(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC2IUC2_SetCropToOverlap(self, _arg)

    def GetCropToOverlap(self):
        r"""GetCropToOverlap(self) -> bool"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC2IUC2_GetCropToOverlap(self)

    def SetButterworthOrder(self, _arg):
        r"""
        SetButterworthOrder(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC2IUC2_SetButterworthOrder(self, _arg)

    def GetButterworthOrder(self):
        r"""GetButterworthOrder(self) -> unsigned int"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC2IUC2_GetButterworthOrder(self)

    def SetButterworthLowFrequency(self, f_Hz):
        r"""
        SetButterworthLowFrequency(self, f_Hz)

        Parameters
        ----------
        f_Hz: double

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC2IUC2_SetButterworthLowFrequency(self, f_Hz)

    def GetButterworthLowFrequency(self):
        r"""GetButterworthLowFrequency(self) -> double"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC2IUC2_GetButterworthLowFrequency(self)

    def SetButterworthHighFrequency(self, f_Hz):
        r"""
        SetButterworthHighFrequency(self, f_Hz)

        Parameters
        ----------
        f_Hz: double

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC2IUC2_SetButterworthHighFrequency(self, f_Hz)

    def GetButterworthHighFrequency(self):
        r"""GetButterworthHighFrequency(self) -> double"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC2IUC2_GetButterworthHighFrequency(self)

    def GetRealCorrelationSurface(self):
        r"""GetRealCorrelationSurface(self) -> itkImageF2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC2IUC2_GetRealCorrelationSurface(self)

    def GetComplexCorrelationSurface(self):
        r"""GetComplexCorrelationSurface(self) -> itkImageCF2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC2IUC2_GetComplexCorrelationSurface(self)

    def GetTransformParameters(self):
        r"""GetTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC2IUC2_GetTransformParameters(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkDataObjectDecoratorTTD2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC2IUC2_GetOutput(self)

    def GetPhaseCorrelationImage(self):
        r"""GetPhaseCorrelationImage(self) -> itkImageF2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC2IUC2_GetPhaseCorrelationImage(self)

    def GetOffsets(self):
        r"""GetOffsets(self) -> vectoritkPointD2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC2IUC2_GetOffsets(self)

    def GetConfidences(self):
        r"""GetConfidences(self) -> vectorF"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC2IUC2_GetConfidences(self)
    SameDimensionCheck = _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC2IUC2_SameDimensionCheck
    
    __swig_destroy__ = _itkPhaseCorrelationImageRegistrationMethodPython.delete_itkPhaseCorrelationImageRegistrationMethodIUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhaseCorrelationImageRegistrationMethodIUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPhaseCorrelationImageRegistrationMethodIUC2IUC2

        Create a new object of the class itkPhaseCorrelationImageRegistrationMethodIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhaseCorrelationImageRegistrationMethodIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhaseCorrelationImageRegistrationMethodIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhaseCorrelationImageRegistrationMethodIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhaseCorrelationImageRegistrationMethodIUC2IUC2 in _itkPhaseCorrelationImageRegistrationMethodPython:
_itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC2IUC2_swigregister(itkPhaseCorrelationImageRegistrationMethodIUC2IUC2)

def itkPhaseCorrelationImageRegistrationMethodIUC3IUC3_New():
    return itkPhaseCorrelationImageRegistrationMethodIUC3IUC3.New()

class itkPhaseCorrelationImageRegistrationMethodIUC3IUC3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkPhaseCorrelationImageRegistrationMethodIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhaseCorrelationImageRegistrationMethodIUC3IUC3_Pointer"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhaseCorrelationImageRegistrationMethodIUC3IUC3_Pointer"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC3IUC3_Clone(self)

    def SetFixedImage(self, fixedImage):
        r"""
        SetFixedImage(self, fixedImage)

        Parameters
        ----------
        fixedImage: itkImageUC3 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC3IUC3_SetFixedImage(self, fixedImage)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageUC3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC3IUC3_GetFixedImage(self)

    def SetMovingImage(self, movingImage):
        r"""
        SetMovingImage(self, movingImage)

        Parameters
        ----------
        movingImage: itkImageUC3 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC3IUC3_SetMovingImage(self, movingImage)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageUC3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC3IUC3_GetMovingImage(self)

    def SetFixedImageFFT(self, fixedImageFFT):
        r"""
        SetFixedImageFFT(self, fixedImageFFT)

        Parameters
        ----------
        fixedImageFFT: itkImageCF3 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC3IUC3_SetFixedImageFFT(self, fixedImageFFT)

    def GetFixedImageFFT(self):
        r"""GetFixedImageFFT(self) -> itkImageCF3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC3IUC3_GetFixedImageFFT(self)

    def SetMovingImageFFT(self, movingImageFFT):
        r"""
        SetMovingImageFFT(self, movingImageFFT)

        Parameters
        ----------
        movingImageFFT: itkImageCF3 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC3IUC3_SetMovingImageFFT(self, movingImageFFT)

    def GetMovingImageFFT(self):
        r"""GetMovingImageFFT(self) -> itkImageCF3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC3IUC3_GetMovingImageFFT(self)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC3IUC3_SetReleaseDataBeforeUpdateFlag(self, flag)

    def SetOperator(self, _arg):
        r"""
        SetOperator(self, _arg)

        Parameters
        ----------
        _arg: itkPhaseCorrelationOperatorF3 *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC3IUC3_SetOperator(self, _arg)

    def GetOperator(self):
        r"""GetOperator(self) -> itkPhaseCorrelationOperatorF3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC3IUC3_GetOperator(self)

    def SetOptimizer(self, arg0):
        r"""
        SetOptimizer(self, arg0)

        Parameters
        ----------
        arg0: itkPhaseCorrelationOptimizerF3 *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC3IUC3_SetOptimizer(self, arg0)

    def GetOptimizer(self):
        r"""GetOptimizer(self) -> itkPhaseCorrelationOptimizerF3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC3IUC3_GetOptimizer(self)

    def RoundUpToFFTSize(self, inSize):
        r"""
        RoundUpToFFTSize(self, inSize) -> itkSize3

        Parameters
        ----------
        inSize: itkSize3

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC3IUC3_RoundUpToFFTSize(self, inSize)

    def SetPadToSize(self, _arg):
        r"""
        SetPadToSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC3IUC3_SetPadToSize(self, _arg)

    def GetPadToSize(self):
        r"""GetPadToSize(self) -> itkSize3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC3IUC3_GetPadToSize(self)

    def SetObligatoryPadding(self, _arg):
        r"""
        SetObligatoryPadding(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC3IUC3_SetObligatoryPadding(self, _arg)

    def GetObligatoryPadding(self):
        r"""GetObligatoryPadding(self) -> itkSize3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC3IUC3_GetObligatoryPadding(self)

    def SetPaddingMethod(self, paddingMethod):
        r"""
        SetPaddingMethod(self, paddingMethod)

        Parameters
        ----------
        paddingMethod: enum itkPhaseCorrelationImageRegistrationMethodEnums::PaddingMethod const

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC3IUC3_SetPaddingMethod(self, paddingMethod)

    def SetCropToOverlap(self, _arg):
        r"""
        SetCropToOverlap(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC3IUC3_SetCropToOverlap(self, _arg)

    def GetCropToOverlap(self):
        r"""GetCropToOverlap(self) -> bool"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC3IUC3_GetCropToOverlap(self)

    def SetButterworthOrder(self, _arg):
        r"""
        SetButterworthOrder(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC3IUC3_SetButterworthOrder(self, _arg)

    def GetButterworthOrder(self):
        r"""GetButterworthOrder(self) -> unsigned int"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC3IUC3_GetButterworthOrder(self)

    def SetButterworthLowFrequency(self, f_Hz):
        r"""
        SetButterworthLowFrequency(self, f_Hz)

        Parameters
        ----------
        f_Hz: double

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC3IUC3_SetButterworthLowFrequency(self, f_Hz)

    def GetButterworthLowFrequency(self):
        r"""GetButterworthLowFrequency(self) -> double"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC3IUC3_GetButterworthLowFrequency(self)

    def SetButterworthHighFrequency(self, f_Hz):
        r"""
        SetButterworthHighFrequency(self, f_Hz)

        Parameters
        ----------
        f_Hz: double

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC3IUC3_SetButterworthHighFrequency(self, f_Hz)

    def GetButterworthHighFrequency(self):
        r"""GetButterworthHighFrequency(self) -> double"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC3IUC3_GetButterworthHighFrequency(self)

    def GetRealCorrelationSurface(self):
        r"""GetRealCorrelationSurface(self) -> itkImageF3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC3IUC3_GetRealCorrelationSurface(self)

    def GetComplexCorrelationSurface(self):
        r"""GetComplexCorrelationSurface(self) -> itkImageCF3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC3IUC3_GetComplexCorrelationSurface(self)

    def GetTransformParameters(self):
        r"""GetTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC3IUC3_GetTransformParameters(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkDataObjectDecoratorTTD3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC3IUC3_GetOutput(self)

    def GetPhaseCorrelationImage(self):
        r"""GetPhaseCorrelationImage(self) -> itkImageF3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC3IUC3_GetPhaseCorrelationImage(self)

    def GetOffsets(self):
        r"""GetOffsets(self) -> vectoritkPointD3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC3IUC3_GetOffsets(self)

    def GetConfidences(self):
        r"""GetConfidences(self) -> vectorF"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC3IUC3_GetConfidences(self)
    SameDimensionCheck = _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC3IUC3_SameDimensionCheck
    
    __swig_destroy__ = _itkPhaseCorrelationImageRegistrationMethodPython.delete_itkPhaseCorrelationImageRegistrationMethodIUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhaseCorrelationImageRegistrationMethodIUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPhaseCorrelationImageRegistrationMethodIUC3IUC3

        Create a new object of the class itkPhaseCorrelationImageRegistrationMethodIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhaseCorrelationImageRegistrationMethodIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhaseCorrelationImageRegistrationMethodIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhaseCorrelationImageRegistrationMethodIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhaseCorrelationImageRegistrationMethodIUC3IUC3 in _itkPhaseCorrelationImageRegistrationMethodPython:
_itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC3IUC3_swigregister(itkPhaseCorrelationImageRegistrationMethodIUC3IUC3)

def itkPhaseCorrelationImageRegistrationMethodIUC4IUC4_New():
    return itkPhaseCorrelationImageRegistrationMethodIUC4IUC4.New()

class itkPhaseCorrelationImageRegistrationMethodIUC4IUC4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkPhaseCorrelationImageRegistrationMethodIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhaseCorrelationImageRegistrationMethodIUC4IUC4_Pointer"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhaseCorrelationImageRegistrationMethodIUC4IUC4_Pointer"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC4IUC4_Clone(self)

    def SetFixedImage(self, fixedImage):
        r"""
        SetFixedImage(self, fixedImage)

        Parameters
        ----------
        fixedImage: itkImageUC4 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC4IUC4_SetFixedImage(self, fixedImage)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageUC4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC4IUC4_GetFixedImage(self)

    def SetMovingImage(self, movingImage):
        r"""
        SetMovingImage(self, movingImage)

        Parameters
        ----------
        movingImage: itkImageUC4 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC4IUC4_SetMovingImage(self, movingImage)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageUC4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC4IUC4_GetMovingImage(self)

    def SetFixedImageFFT(self, fixedImageFFT):
        r"""
        SetFixedImageFFT(self, fixedImageFFT)

        Parameters
        ----------
        fixedImageFFT: itkImageCF4 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC4IUC4_SetFixedImageFFT(self, fixedImageFFT)

    def GetFixedImageFFT(self):
        r"""GetFixedImageFFT(self) -> itkImageCF4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC4IUC4_GetFixedImageFFT(self)

    def SetMovingImageFFT(self, movingImageFFT):
        r"""
        SetMovingImageFFT(self, movingImageFFT)

        Parameters
        ----------
        movingImageFFT: itkImageCF4 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC4IUC4_SetMovingImageFFT(self, movingImageFFT)

    def GetMovingImageFFT(self):
        r"""GetMovingImageFFT(self) -> itkImageCF4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC4IUC4_GetMovingImageFFT(self)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC4IUC4_SetReleaseDataBeforeUpdateFlag(self, flag)

    def SetOperator(self, _arg):
        r"""
        SetOperator(self, _arg)

        Parameters
        ----------
        _arg: itkPhaseCorrelationOperatorF4 *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC4IUC4_SetOperator(self, _arg)

    def GetOperator(self):
        r"""GetOperator(self) -> itkPhaseCorrelationOperatorF4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC4IUC4_GetOperator(self)

    def SetOptimizer(self, arg0):
        r"""
        SetOptimizer(self, arg0)

        Parameters
        ----------
        arg0: itkPhaseCorrelationOptimizerF4 *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC4IUC4_SetOptimizer(self, arg0)

    def GetOptimizer(self):
        r"""GetOptimizer(self) -> itkPhaseCorrelationOptimizerF4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC4IUC4_GetOptimizer(self)

    def RoundUpToFFTSize(self, inSize):
        r"""
        RoundUpToFFTSize(self, inSize) -> itkSize4

        Parameters
        ----------
        inSize: itkSize4

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC4IUC4_RoundUpToFFTSize(self, inSize)

    def SetPadToSize(self, _arg):
        r"""
        SetPadToSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC4IUC4_SetPadToSize(self, _arg)

    def GetPadToSize(self):
        r"""GetPadToSize(self) -> itkSize4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC4IUC4_GetPadToSize(self)

    def SetObligatoryPadding(self, _arg):
        r"""
        SetObligatoryPadding(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC4IUC4_SetObligatoryPadding(self, _arg)

    def GetObligatoryPadding(self):
        r"""GetObligatoryPadding(self) -> itkSize4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC4IUC4_GetObligatoryPadding(self)

    def SetPaddingMethod(self, paddingMethod):
        r"""
        SetPaddingMethod(self, paddingMethod)

        Parameters
        ----------
        paddingMethod: enum itkPhaseCorrelationImageRegistrationMethodEnums::PaddingMethod const

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC4IUC4_SetPaddingMethod(self, paddingMethod)

    def SetCropToOverlap(self, _arg):
        r"""
        SetCropToOverlap(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC4IUC4_SetCropToOverlap(self, _arg)

    def GetCropToOverlap(self):
        r"""GetCropToOverlap(self) -> bool"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC4IUC4_GetCropToOverlap(self)

    def SetButterworthOrder(self, _arg):
        r"""
        SetButterworthOrder(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC4IUC4_SetButterworthOrder(self, _arg)

    def GetButterworthOrder(self):
        r"""GetButterworthOrder(self) -> unsigned int"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC4IUC4_GetButterworthOrder(self)

    def SetButterworthLowFrequency(self, f_Hz):
        r"""
        SetButterworthLowFrequency(self, f_Hz)

        Parameters
        ----------
        f_Hz: double

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC4IUC4_SetButterworthLowFrequency(self, f_Hz)

    def GetButterworthLowFrequency(self):
        r"""GetButterworthLowFrequency(self) -> double"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC4IUC4_GetButterworthLowFrequency(self)

    def SetButterworthHighFrequency(self, f_Hz):
        r"""
        SetButterworthHighFrequency(self, f_Hz)

        Parameters
        ----------
        f_Hz: double

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC4IUC4_SetButterworthHighFrequency(self, f_Hz)

    def GetButterworthHighFrequency(self):
        r"""GetButterworthHighFrequency(self) -> double"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC4IUC4_GetButterworthHighFrequency(self)

    def GetRealCorrelationSurface(self):
        r"""GetRealCorrelationSurface(self) -> itkImageF4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC4IUC4_GetRealCorrelationSurface(self)

    def GetComplexCorrelationSurface(self):
        r"""GetComplexCorrelationSurface(self) -> itkImageCF4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC4IUC4_GetComplexCorrelationSurface(self)

    def GetTransformParameters(self):
        r"""GetTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC4IUC4_GetTransformParameters(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkDataObjectDecoratorTTD4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC4IUC4_GetOutput(self)

    def GetPhaseCorrelationImage(self):
        r"""GetPhaseCorrelationImage(self) -> itkImageF4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC4IUC4_GetPhaseCorrelationImage(self)

    def GetOffsets(self):
        r"""GetOffsets(self) -> vectoritkPointD4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC4IUC4_GetOffsets(self)

    def GetConfidences(self):
        r"""GetConfidences(self) -> vectorF"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC4IUC4_GetConfidences(self)
    SameDimensionCheck = _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC4IUC4_SameDimensionCheck
    
    __swig_destroy__ = _itkPhaseCorrelationImageRegistrationMethodPython.delete_itkPhaseCorrelationImageRegistrationMethodIUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhaseCorrelationImageRegistrationMethodIUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPhaseCorrelationImageRegistrationMethodIUC4IUC4

        Create a new object of the class itkPhaseCorrelationImageRegistrationMethodIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhaseCorrelationImageRegistrationMethodIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhaseCorrelationImageRegistrationMethodIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhaseCorrelationImageRegistrationMethodIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhaseCorrelationImageRegistrationMethodIUC4IUC4 in _itkPhaseCorrelationImageRegistrationMethodPython:
_itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUC4IUC4_swigregister(itkPhaseCorrelationImageRegistrationMethodIUC4IUC4)

def itkPhaseCorrelationImageRegistrationMethodIUS2IUS2_New():
    return itkPhaseCorrelationImageRegistrationMethodIUS2IUS2.New()

class itkPhaseCorrelationImageRegistrationMethodIUS2IUS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkPhaseCorrelationImageRegistrationMethodIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhaseCorrelationImageRegistrationMethodIUS2IUS2_Pointer"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhaseCorrelationImageRegistrationMethodIUS2IUS2_Pointer"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS2IUS2_Clone(self)

    def SetFixedImage(self, fixedImage):
        r"""
        SetFixedImage(self, fixedImage)

        Parameters
        ----------
        fixedImage: itkImageUS2 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS2IUS2_SetFixedImage(self, fixedImage)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageUS2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS2IUS2_GetFixedImage(self)

    def SetMovingImage(self, movingImage):
        r"""
        SetMovingImage(self, movingImage)

        Parameters
        ----------
        movingImage: itkImageUS2 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS2IUS2_SetMovingImage(self, movingImage)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageUS2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS2IUS2_GetMovingImage(self)

    def SetFixedImageFFT(self, fixedImageFFT):
        r"""
        SetFixedImageFFT(self, fixedImageFFT)

        Parameters
        ----------
        fixedImageFFT: itkImageCF2 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS2IUS2_SetFixedImageFFT(self, fixedImageFFT)

    def GetFixedImageFFT(self):
        r"""GetFixedImageFFT(self) -> itkImageCF2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS2IUS2_GetFixedImageFFT(self)

    def SetMovingImageFFT(self, movingImageFFT):
        r"""
        SetMovingImageFFT(self, movingImageFFT)

        Parameters
        ----------
        movingImageFFT: itkImageCF2 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS2IUS2_SetMovingImageFFT(self, movingImageFFT)

    def GetMovingImageFFT(self):
        r"""GetMovingImageFFT(self) -> itkImageCF2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS2IUS2_GetMovingImageFFT(self)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS2IUS2_SetReleaseDataBeforeUpdateFlag(self, flag)

    def SetOperator(self, _arg):
        r"""
        SetOperator(self, _arg)

        Parameters
        ----------
        _arg: itkPhaseCorrelationOperatorF2 *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS2IUS2_SetOperator(self, _arg)

    def GetOperator(self):
        r"""GetOperator(self) -> itkPhaseCorrelationOperatorF2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS2IUS2_GetOperator(self)

    def SetOptimizer(self, arg0):
        r"""
        SetOptimizer(self, arg0)

        Parameters
        ----------
        arg0: itkPhaseCorrelationOptimizerF2 *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS2IUS2_SetOptimizer(self, arg0)

    def GetOptimizer(self):
        r"""GetOptimizer(self) -> itkPhaseCorrelationOptimizerF2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS2IUS2_GetOptimizer(self)

    def RoundUpToFFTSize(self, inSize):
        r"""
        RoundUpToFFTSize(self, inSize) -> itkSize2

        Parameters
        ----------
        inSize: itkSize2

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS2IUS2_RoundUpToFFTSize(self, inSize)

    def SetPadToSize(self, _arg):
        r"""
        SetPadToSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS2IUS2_SetPadToSize(self, _arg)

    def GetPadToSize(self):
        r"""GetPadToSize(self) -> itkSize2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS2IUS2_GetPadToSize(self)

    def SetObligatoryPadding(self, _arg):
        r"""
        SetObligatoryPadding(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS2IUS2_SetObligatoryPadding(self, _arg)

    def GetObligatoryPadding(self):
        r"""GetObligatoryPadding(self) -> itkSize2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS2IUS2_GetObligatoryPadding(self)

    def SetPaddingMethod(self, paddingMethod):
        r"""
        SetPaddingMethod(self, paddingMethod)

        Parameters
        ----------
        paddingMethod: enum itkPhaseCorrelationImageRegistrationMethodEnums::PaddingMethod const

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS2IUS2_SetPaddingMethod(self, paddingMethod)

    def SetCropToOverlap(self, _arg):
        r"""
        SetCropToOverlap(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS2IUS2_SetCropToOverlap(self, _arg)

    def GetCropToOverlap(self):
        r"""GetCropToOverlap(self) -> bool"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS2IUS2_GetCropToOverlap(self)

    def SetButterworthOrder(self, _arg):
        r"""
        SetButterworthOrder(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS2IUS2_SetButterworthOrder(self, _arg)

    def GetButterworthOrder(self):
        r"""GetButterworthOrder(self) -> unsigned int"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS2IUS2_GetButterworthOrder(self)

    def SetButterworthLowFrequency(self, f_Hz):
        r"""
        SetButterworthLowFrequency(self, f_Hz)

        Parameters
        ----------
        f_Hz: double

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS2IUS2_SetButterworthLowFrequency(self, f_Hz)

    def GetButterworthLowFrequency(self):
        r"""GetButterworthLowFrequency(self) -> double"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS2IUS2_GetButterworthLowFrequency(self)

    def SetButterworthHighFrequency(self, f_Hz):
        r"""
        SetButterworthHighFrequency(self, f_Hz)

        Parameters
        ----------
        f_Hz: double

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS2IUS2_SetButterworthHighFrequency(self, f_Hz)

    def GetButterworthHighFrequency(self):
        r"""GetButterworthHighFrequency(self) -> double"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS2IUS2_GetButterworthHighFrequency(self)

    def GetRealCorrelationSurface(self):
        r"""GetRealCorrelationSurface(self) -> itkImageF2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS2IUS2_GetRealCorrelationSurface(self)

    def GetComplexCorrelationSurface(self):
        r"""GetComplexCorrelationSurface(self) -> itkImageCF2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS2IUS2_GetComplexCorrelationSurface(self)

    def GetTransformParameters(self):
        r"""GetTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS2IUS2_GetTransformParameters(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkDataObjectDecoratorTTD2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS2IUS2_GetOutput(self)

    def GetPhaseCorrelationImage(self):
        r"""GetPhaseCorrelationImage(self) -> itkImageF2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS2IUS2_GetPhaseCorrelationImage(self)

    def GetOffsets(self):
        r"""GetOffsets(self) -> vectoritkPointD2"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS2IUS2_GetOffsets(self)

    def GetConfidences(self):
        r"""GetConfidences(self) -> vectorF"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS2IUS2_GetConfidences(self)
    SameDimensionCheck = _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS2IUS2_SameDimensionCheck
    
    __swig_destroy__ = _itkPhaseCorrelationImageRegistrationMethodPython.delete_itkPhaseCorrelationImageRegistrationMethodIUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhaseCorrelationImageRegistrationMethodIUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPhaseCorrelationImageRegistrationMethodIUS2IUS2

        Create a new object of the class itkPhaseCorrelationImageRegistrationMethodIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhaseCorrelationImageRegistrationMethodIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhaseCorrelationImageRegistrationMethodIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhaseCorrelationImageRegistrationMethodIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhaseCorrelationImageRegistrationMethodIUS2IUS2 in _itkPhaseCorrelationImageRegistrationMethodPython:
_itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS2IUS2_swigregister(itkPhaseCorrelationImageRegistrationMethodIUS2IUS2)

def itkPhaseCorrelationImageRegistrationMethodIUS3IUS3_New():
    return itkPhaseCorrelationImageRegistrationMethodIUS3IUS3.New()

class itkPhaseCorrelationImageRegistrationMethodIUS3IUS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkPhaseCorrelationImageRegistrationMethodIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhaseCorrelationImageRegistrationMethodIUS3IUS3_Pointer"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhaseCorrelationImageRegistrationMethodIUS3IUS3_Pointer"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS3IUS3_Clone(self)

    def SetFixedImage(self, fixedImage):
        r"""
        SetFixedImage(self, fixedImage)

        Parameters
        ----------
        fixedImage: itkImageUS3 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS3IUS3_SetFixedImage(self, fixedImage)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageUS3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS3IUS3_GetFixedImage(self)

    def SetMovingImage(self, movingImage):
        r"""
        SetMovingImage(self, movingImage)

        Parameters
        ----------
        movingImage: itkImageUS3 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS3IUS3_SetMovingImage(self, movingImage)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageUS3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS3IUS3_GetMovingImage(self)

    def SetFixedImageFFT(self, fixedImageFFT):
        r"""
        SetFixedImageFFT(self, fixedImageFFT)

        Parameters
        ----------
        fixedImageFFT: itkImageCF3 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS3IUS3_SetFixedImageFFT(self, fixedImageFFT)

    def GetFixedImageFFT(self):
        r"""GetFixedImageFFT(self) -> itkImageCF3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS3IUS3_GetFixedImageFFT(self)

    def SetMovingImageFFT(self, movingImageFFT):
        r"""
        SetMovingImageFFT(self, movingImageFFT)

        Parameters
        ----------
        movingImageFFT: itkImageCF3 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS3IUS3_SetMovingImageFFT(self, movingImageFFT)

    def GetMovingImageFFT(self):
        r"""GetMovingImageFFT(self) -> itkImageCF3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS3IUS3_GetMovingImageFFT(self)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS3IUS3_SetReleaseDataBeforeUpdateFlag(self, flag)

    def SetOperator(self, _arg):
        r"""
        SetOperator(self, _arg)

        Parameters
        ----------
        _arg: itkPhaseCorrelationOperatorF3 *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS3IUS3_SetOperator(self, _arg)

    def GetOperator(self):
        r"""GetOperator(self) -> itkPhaseCorrelationOperatorF3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS3IUS3_GetOperator(self)

    def SetOptimizer(self, arg0):
        r"""
        SetOptimizer(self, arg0)

        Parameters
        ----------
        arg0: itkPhaseCorrelationOptimizerF3 *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS3IUS3_SetOptimizer(self, arg0)

    def GetOptimizer(self):
        r"""GetOptimizer(self) -> itkPhaseCorrelationOptimizerF3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS3IUS3_GetOptimizer(self)

    def RoundUpToFFTSize(self, inSize):
        r"""
        RoundUpToFFTSize(self, inSize) -> itkSize3

        Parameters
        ----------
        inSize: itkSize3

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS3IUS3_RoundUpToFFTSize(self, inSize)

    def SetPadToSize(self, _arg):
        r"""
        SetPadToSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS3IUS3_SetPadToSize(self, _arg)

    def GetPadToSize(self):
        r"""GetPadToSize(self) -> itkSize3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS3IUS3_GetPadToSize(self)

    def SetObligatoryPadding(self, _arg):
        r"""
        SetObligatoryPadding(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS3IUS3_SetObligatoryPadding(self, _arg)

    def GetObligatoryPadding(self):
        r"""GetObligatoryPadding(self) -> itkSize3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS3IUS3_GetObligatoryPadding(self)

    def SetPaddingMethod(self, paddingMethod):
        r"""
        SetPaddingMethod(self, paddingMethod)

        Parameters
        ----------
        paddingMethod: enum itkPhaseCorrelationImageRegistrationMethodEnums::PaddingMethod const

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS3IUS3_SetPaddingMethod(self, paddingMethod)

    def SetCropToOverlap(self, _arg):
        r"""
        SetCropToOverlap(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS3IUS3_SetCropToOverlap(self, _arg)

    def GetCropToOverlap(self):
        r"""GetCropToOverlap(self) -> bool"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS3IUS3_GetCropToOverlap(self)

    def SetButterworthOrder(self, _arg):
        r"""
        SetButterworthOrder(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS3IUS3_SetButterworthOrder(self, _arg)

    def GetButterworthOrder(self):
        r"""GetButterworthOrder(self) -> unsigned int"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS3IUS3_GetButterworthOrder(self)

    def SetButterworthLowFrequency(self, f_Hz):
        r"""
        SetButterworthLowFrequency(self, f_Hz)

        Parameters
        ----------
        f_Hz: double

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS3IUS3_SetButterworthLowFrequency(self, f_Hz)

    def GetButterworthLowFrequency(self):
        r"""GetButterworthLowFrequency(self) -> double"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS3IUS3_GetButterworthLowFrequency(self)

    def SetButterworthHighFrequency(self, f_Hz):
        r"""
        SetButterworthHighFrequency(self, f_Hz)

        Parameters
        ----------
        f_Hz: double

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS3IUS3_SetButterworthHighFrequency(self, f_Hz)

    def GetButterworthHighFrequency(self):
        r"""GetButterworthHighFrequency(self) -> double"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS3IUS3_GetButterworthHighFrequency(self)

    def GetRealCorrelationSurface(self):
        r"""GetRealCorrelationSurface(self) -> itkImageF3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS3IUS3_GetRealCorrelationSurface(self)

    def GetComplexCorrelationSurface(self):
        r"""GetComplexCorrelationSurface(self) -> itkImageCF3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS3IUS3_GetComplexCorrelationSurface(self)

    def GetTransformParameters(self):
        r"""GetTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS3IUS3_GetTransformParameters(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkDataObjectDecoratorTTD3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS3IUS3_GetOutput(self)

    def GetPhaseCorrelationImage(self):
        r"""GetPhaseCorrelationImage(self) -> itkImageF3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS3IUS3_GetPhaseCorrelationImage(self)

    def GetOffsets(self):
        r"""GetOffsets(self) -> vectoritkPointD3"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS3IUS3_GetOffsets(self)

    def GetConfidences(self):
        r"""GetConfidences(self) -> vectorF"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS3IUS3_GetConfidences(self)
    SameDimensionCheck = _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS3IUS3_SameDimensionCheck
    
    __swig_destroy__ = _itkPhaseCorrelationImageRegistrationMethodPython.delete_itkPhaseCorrelationImageRegistrationMethodIUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhaseCorrelationImageRegistrationMethodIUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPhaseCorrelationImageRegistrationMethodIUS3IUS3

        Create a new object of the class itkPhaseCorrelationImageRegistrationMethodIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhaseCorrelationImageRegistrationMethodIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhaseCorrelationImageRegistrationMethodIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhaseCorrelationImageRegistrationMethodIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhaseCorrelationImageRegistrationMethodIUS3IUS3 in _itkPhaseCorrelationImageRegistrationMethodPython:
_itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS3IUS3_swigregister(itkPhaseCorrelationImageRegistrationMethodIUS3IUS3)

def itkPhaseCorrelationImageRegistrationMethodIUS4IUS4_New():
    return itkPhaseCorrelationImageRegistrationMethodIUS4IUS4.New()

class itkPhaseCorrelationImageRegistrationMethodIUS4IUS4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkPhaseCorrelationImageRegistrationMethodIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhaseCorrelationImageRegistrationMethodIUS4IUS4_Pointer"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhaseCorrelationImageRegistrationMethodIUS4IUS4_Pointer"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS4IUS4_Clone(self)

    def SetFixedImage(self, fixedImage):
        r"""
        SetFixedImage(self, fixedImage)

        Parameters
        ----------
        fixedImage: itkImageUS4 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS4IUS4_SetFixedImage(self, fixedImage)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageUS4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS4IUS4_GetFixedImage(self)

    def SetMovingImage(self, movingImage):
        r"""
        SetMovingImage(self, movingImage)

        Parameters
        ----------
        movingImage: itkImageUS4 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS4IUS4_SetMovingImage(self, movingImage)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageUS4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS4IUS4_GetMovingImage(self)

    def SetFixedImageFFT(self, fixedImageFFT):
        r"""
        SetFixedImageFFT(self, fixedImageFFT)

        Parameters
        ----------
        fixedImageFFT: itkImageCF4 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS4IUS4_SetFixedImageFFT(self, fixedImageFFT)

    def GetFixedImageFFT(self):
        r"""GetFixedImageFFT(self) -> itkImageCF4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS4IUS4_GetFixedImageFFT(self)

    def SetMovingImageFFT(self, movingImageFFT):
        r"""
        SetMovingImageFFT(self, movingImageFFT)

        Parameters
        ----------
        movingImageFFT: itkImageCF4 const *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS4IUS4_SetMovingImageFFT(self, movingImageFFT)

    def GetMovingImageFFT(self):
        r"""GetMovingImageFFT(self) -> itkImageCF4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS4IUS4_GetMovingImageFFT(self)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS4IUS4_SetReleaseDataBeforeUpdateFlag(self, flag)

    def SetOperator(self, _arg):
        r"""
        SetOperator(self, _arg)

        Parameters
        ----------
        _arg: itkPhaseCorrelationOperatorF4 *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS4IUS4_SetOperator(self, _arg)

    def GetOperator(self):
        r"""GetOperator(self) -> itkPhaseCorrelationOperatorF4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS4IUS4_GetOperator(self)

    def SetOptimizer(self, arg0):
        r"""
        SetOptimizer(self, arg0)

        Parameters
        ----------
        arg0: itkPhaseCorrelationOptimizerF4 *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS4IUS4_SetOptimizer(self, arg0)

    def GetOptimizer(self):
        r"""GetOptimizer(self) -> itkPhaseCorrelationOptimizerF4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS4IUS4_GetOptimizer(self)

    def RoundUpToFFTSize(self, inSize):
        r"""
        RoundUpToFFTSize(self, inSize) -> itkSize4

        Parameters
        ----------
        inSize: itkSize4

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS4IUS4_RoundUpToFFTSize(self, inSize)

    def SetPadToSize(self, _arg):
        r"""
        SetPadToSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS4IUS4_SetPadToSize(self, _arg)

    def GetPadToSize(self):
        r"""GetPadToSize(self) -> itkSize4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS4IUS4_GetPadToSize(self)

    def SetObligatoryPadding(self, _arg):
        r"""
        SetObligatoryPadding(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS4IUS4_SetObligatoryPadding(self, _arg)

    def GetObligatoryPadding(self):
        r"""GetObligatoryPadding(self) -> itkSize4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS4IUS4_GetObligatoryPadding(self)

    def SetPaddingMethod(self, paddingMethod):
        r"""
        SetPaddingMethod(self, paddingMethod)

        Parameters
        ----------
        paddingMethod: enum itkPhaseCorrelationImageRegistrationMethodEnums::PaddingMethod const

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS4IUS4_SetPaddingMethod(self, paddingMethod)

    def SetCropToOverlap(self, _arg):
        r"""
        SetCropToOverlap(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS4IUS4_SetCropToOverlap(self, _arg)

    def GetCropToOverlap(self):
        r"""GetCropToOverlap(self) -> bool"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS4IUS4_GetCropToOverlap(self)

    def SetButterworthOrder(self, _arg):
        r"""
        SetButterworthOrder(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS4IUS4_SetButterworthOrder(self, _arg)

    def GetButterworthOrder(self):
        r"""GetButterworthOrder(self) -> unsigned int"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS4IUS4_GetButterworthOrder(self)

    def SetButterworthLowFrequency(self, f_Hz):
        r"""
        SetButterworthLowFrequency(self, f_Hz)

        Parameters
        ----------
        f_Hz: double

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS4IUS4_SetButterworthLowFrequency(self, f_Hz)

    def GetButterworthLowFrequency(self):
        r"""GetButterworthLowFrequency(self) -> double"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS4IUS4_GetButterworthLowFrequency(self)

    def SetButterworthHighFrequency(self, f_Hz):
        r"""
        SetButterworthHighFrequency(self, f_Hz)

        Parameters
        ----------
        f_Hz: double

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS4IUS4_SetButterworthHighFrequency(self, f_Hz)

    def GetButterworthHighFrequency(self):
        r"""GetButterworthHighFrequency(self) -> double"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS4IUS4_GetButterworthHighFrequency(self)

    def GetRealCorrelationSurface(self):
        r"""GetRealCorrelationSurface(self) -> itkImageF4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS4IUS4_GetRealCorrelationSurface(self)

    def GetComplexCorrelationSurface(self):
        r"""GetComplexCorrelationSurface(self) -> itkImageCF4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS4IUS4_GetComplexCorrelationSurface(self)

    def GetTransformParameters(self):
        r"""GetTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS4IUS4_GetTransformParameters(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkDataObjectDecoratorTTD4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS4IUS4_GetOutput(self)

    def GetPhaseCorrelationImage(self):
        r"""GetPhaseCorrelationImage(self) -> itkImageF4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS4IUS4_GetPhaseCorrelationImage(self)

    def GetOffsets(self):
        r"""GetOffsets(self) -> vectoritkPointD4"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS4IUS4_GetOffsets(self)

    def GetConfidences(self):
        r"""GetConfidences(self) -> vectorF"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS4IUS4_GetConfidences(self)
    SameDimensionCheck = _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS4IUS4_SameDimensionCheck
    
    __swig_destroy__ = _itkPhaseCorrelationImageRegistrationMethodPython.delete_itkPhaseCorrelationImageRegistrationMethodIUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhaseCorrelationImageRegistrationMethodIUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPhaseCorrelationImageRegistrationMethodIUS4IUS4

        Create a new object of the class itkPhaseCorrelationImageRegistrationMethodIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhaseCorrelationImageRegistrationMethodIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhaseCorrelationImageRegistrationMethodIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhaseCorrelationImageRegistrationMethodIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhaseCorrelationImageRegistrationMethodIUS4IUS4 in _itkPhaseCorrelationImageRegistrationMethodPython:
_itkPhaseCorrelationImageRegistrationMethodPython.itkPhaseCorrelationImageRegistrationMethodIUS4IUS4_swigregister(itkPhaseCorrelationImageRegistrationMethodIUS4IUS4)

def itkSimpleDataObjectDecoratorPD2_New():
    return itkSimpleDataObjectDecoratorPD2.New()

class itkSimpleDataObjectDecoratorPD2(itk.ITKCommonBasePython.itkDataObject):
    r"""Proxy of C++ itkSimpleDataObjectDecoratorPD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSimpleDataObjectDecoratorPD2_Pointer"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkSimpleDataObjectDecoratorPD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSimpleDataObjectDecoratorPD2_Pointer"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkSimpleDataObjectDecoratorPD2_Clone(self)

    def Set(self, val):
        r"""
        Set(self, val)

        Parameters
        ----------
        val: itkPointD2 const &

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkSimpleDataObjectDecoratorPD2_Set(self, val)

    def Get(self, *args):
        r"""
        Get(self) -> itkPointD2
        Get(self) -> itkPointD2
        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkSimpleDataObjectDecoratorPD2_Get(self, *args)
    __swig_destroy__ = _itkPhaseCorrelationImageRegistrationMethodPython.delete_itkSimpleDataObjectDecoratorPD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSimpleDataObjectDecoratorPD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkSimpleDataObjectDecoratorPD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSimpleDataObjectDecoratorPD2

        Create a new object of the class itkSimpleDataObjectDecoratorPD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSimpleDataObjectDecoratorPD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSimpleDataObjectDecoratorPD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSimpleDataObjectDecoratorPD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSimpleDataObjectDecoratorPD2 in _itkPhaseCorrelationImageRegistrationMethodPython:
_itkPhaseCorrelationImageRegistrationMethodPython.itkSimpleDataObjectDecoratorPD2_swigregister(itkSimpleDataObjectDecoratorPD2)

def itkSimpleDataObjectDecoratorPD3_New():
    return itkSimpleDataObjectDecoratorPD3.New()

class itkSimpleDataObjectDecoratorPD3(itk.ITKCommonBasePython.itkDataObject):
    r"""Proxy of C++ itkSimpleDataObjectDecoratorPD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSimpleDataObjectDecoratorPD3_Pointer"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkSimpleDataObjectDecoratorPD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSimpleDataObjectDecoratorPD3_Pointer"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkSimpleDataObjectDecoratorPD3_Clone(self)

    def Set(self, val):
        r"""
        Set(self, val)

        Parameters
        ----------
        val: itkPointD3 const &

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkSimpleDataObjectDecoratorPD3_Set(self, val)

    def Get(self, *args):
        r"""
        Get(self) -> itkPointD3
        Get(self) -> itkPointD3
        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkSimpleDataObjectDecoratorPD3_Get(self, *args)
    __swig_destroy__ = _itkPhaseCorrelationImageRegistrationMethodPython.delete_itkSimpleDataObjectDecoratorPD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSimpleDataObjectDecoratorPD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkSimpleDataObjectDecoratorPD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSimpleDataObjectDecoratorPD3

        Create a new object of the class itkSimpleDataObjectDecoratorPD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSimpleDataObjectDecoratorPD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSimpleDataObjectDecoratorPD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSimpleDataObjectDecoratorPD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSimpleDataObjectDecoratorPD3 in _itkPhaseCorrelationImageRegistrationMethodPython:
_itkPhaseCorrelationImageRegistrationMethodPython.itkSimpleDataObjectDecoratorPD3_swigregister(itkSimpleDataObjectDecoratorPD3)

def itkSimpleDataObjectDecoratorPD4_New():
    return itkSimpleDataObjectDecoratorPD4.New()

class itkSimpleDataObjectDecoratorPD4(itk.ITKCommonBasePython.itkDataObject):
    r"""Proxy of C++ itkSimpleDataObjectDecoratorPD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSimpleDataObjectDecoratorPD4_Pointer"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkSimpleDataObjectDecoratorPD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSimpleDataObjectDecoratorPD4_Pointer"""
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkSimpleDataObjectDecoratorPD4_Clone(self)

    def Set(self, val):
        r"""
        Set(self, val)

        Parameters
        ----------
        val: itkPointD4 const &

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkSimpleDataObjectDecoratorPD4_Set(self, val)

    def Get(self, *args):
        r"""
        Get(self) -> itkPointD4
        Get(self) -> itkPointD4
        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkSimpleDataObjectDecoratorPD4_Get(self, *args)
    __swig_destroy__ = _itkPhaseCorrelationImageRegistrationMethodPython.delete_itkSimpleDataObjectDecoratorPD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSimpleDataObjectDecoratorPD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhaseCorrelationImageRegistrationMethodPython.itkSimpleDataObjectDecoratorPD4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSimpleDataObjectDecoratorPD4

        Create a new object of the class itkSimpleDataObjectDecoratorPD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSimpleDataObjectDecoratorPD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSimpleDataObjectDecoratorPD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSimpleDataObjectDecoratorPD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSimpleDataObjectDecoratorPD4 in _itkPhaseCorrelationImageRegistrationMethodPython:
_itkPhaseCorrelationImageRegistrationMethodPython.itkSimpleDataObjectDecoratorPD4_swigregister(itkSimpleDataObjectDecoratorPD4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def phase_correlation_image_registration_method(*args,  fixed_image: itkt.Image=..., moving_image: itkt.Image=..., fixed_image_fft: itkt.Image=..., moving_image_fft: itkt.Image=..., release_data_flag: bool=..., release_data_before_update_flag: bool=..., operator=..., optimizer=..., pad_to_size: Sequence[int]=..., obligatory_padding: Sequence[int]=..., padding_method=..., crop_to_overlap: bool=..., butterworth_order: int=..., butterworth_low_frequency: float=..., butterworth_high_frequency: float=...,**kwargs):
    """Functional interface for PhaseCorrelationImageRegistrationMethod"""
    import itk

    kwarg_typehints = { 'fixed_image':fixed_image,'moving_image':moving_image,'fixed_image_fft':fixed_image_fft,'moving_image_fft':moving_image_fft,'release_data_flag':release_data_flag,'release_data_before_update_flag':release_data_before_update_flag,'operator':operator,'optimizer':optimizer,'pad_to_size':pad_to_size,'obligatory_padding':obligatory_padding,'padding_method':padding_method,'crop_to_overlap':crop_to_overlap,'butterworth_order':butterworth_order,'butterworth_low_frequency':butterworth_low_frequency,'butterworth_high_frequency':butterworth_high_frequency }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.PhaseCorrelationImageRegistrationMethod.New(*args, **kwargs)

    return instance.__internal_call__()

def phase_correlation_image_registration_method_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.Montage.PhaseCorrelationImageRegistrationMethod
    phase_correlation_image_registration_method.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    phase_correlation_image_registration_method.__doc__ = filter_object.__doc__



