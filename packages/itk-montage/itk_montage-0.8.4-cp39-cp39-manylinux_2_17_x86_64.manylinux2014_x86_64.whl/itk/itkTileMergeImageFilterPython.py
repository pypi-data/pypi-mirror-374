# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _MontagePython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkTileMergeImageFilterPython
else:
    import _itkTileMergeImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkImagePython
import itk.itkRGBPixelPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkRGBAPixelPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkCovariantVectorPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkTranslationTransformPython
import itk.itkOptimizerParametersPython
import itk.itkArrayPython
import itk.itkArray2DPython
import itk.itkTransformBasePython
import itk.itkDiffusionTensor3DPython
import itk.itkVariableLengthVectorPython
import itk.itkContinuousIndexPython
import itk.itkTileMontagePython
import itk.itkPhaseCorrelationOptimizerPython
import itk.itkPhaseCorrelationImageRegistrationMethodPython
import itk.itkPhaseCorrelationOperatorPython
import itk.itkImageToImageFilterBPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageToImageFilterCommonPython

def itkTileMergeImageFilterID2L_New():
    return itkTileMergeImageFilterID2L.New()

class itkTileMergeImageFilterID2L(itk.itkTileMontagePython.itkTileMontageID2D):
    r"""Proxy of C++ itkTileMergeImageFilterID2L class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMergeImageFilterID2L_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID2L___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMergeImageFilterID2L_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID2L_Clone(self)

    def SetMontage(self, montage):
        r"""
        SetMontage(self, montage)

        Parameters
        ----------
        montage: itkTileMontageID2D const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID2L_SetMontage(self, montage)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID2L_SetReleaseDataBeforeUpdateFlag(self, flag)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageD2
        GetOutput(self) -> itkImageD2
        GetOutput(self, idx) -> itkImageD2

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID2L_GetOutput(self, *args)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize2

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID2L_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageD2 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize2
        image: itkImageD2 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize2
        imageFilename: std::string const &

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID2L_SetInputTile(self, *args)

    def SetTileTransform(self, position, transform):
        r"""
        SetTileTransform(self, position, transform)

        Parameters
        ----------
        position: itkSize2
        transform: itkTranslationTransformD2 const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID2L_SetTileTransform(self, position, transform)

    def SetBackground(self, _arg):
        r"""
        SetBackground(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID2L_SetBackground(self, _arg)

    def GetBackground(self):
        r"""GetBackground(self) -> double"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID2L_GetBackground(self)

    def SetCropToFill(self, _arg):
        r"""
        SetCropToFill(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID2L_SetCropToFill(self, _arg)

    def GetCropToFill(self):
        r"""GetCropToFill(self) -> bool"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID2L_GetCropToFill(self)

    def CropToFillOn(self):
        r"""CropToFillOn(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID2L_CropToFillOn(self)

    def CropToFillOff(self):
        r"""CropToFillOff(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID2L_CropToFillOff(self)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterID2L

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMergeImageFilterID2L

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID2L_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterID2L

        Create a new object of the class itkTileMergeImageFilterID2L and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterID2L.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterID2L.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterID2L.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterID2L in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterID2L_swigregister(itkTileMergeImageFilterID2L)

def itkTileMergeImageFilterID2NN_New():
    return itkTileMergeImageFilterID2NN.New()

class itkTileMergeImageFilterID2NN(itk.itkTileMontagePython.itkTileMontageID2D):
    r"""Proxy of C++ itkTileMergeImageFilterID2NN class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMergeImageFilterID2NN_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID2NN___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMergeImageFilterID2NN_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID2NN_Clone(self)

    def SetMontage(self, montage):
        r"""
        SetMontage(self, montage)

        Parameters
        ----------
        montage: itkTileMontageID2D const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID2NN_SetMontage(self, montage)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID2NN_SetReleaseDataBeforeUpdateFlag(self, flag)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageD2
        GetOutput(self) -> itkImageD2
        GetOutput(self, idx) -> itkImageD2

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID2NN_GetOutput(self, *args)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize2

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID2NN_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageD2 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize2
        image: itkImageD2 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize2
        imageFilename: std::string const &

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID2NN_SetInputTile(self, *args)

    def SetTileTransform(self, position, transform):
        r"""
        SetTileTransform(self, position, transform)

        Parameters
        ----------
        position: itkSize2
        transform: itkTranslationTransformD2 const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID2NN_SetTileTransform(self, position, transform)

    def SetBackground(self, _arg):
        r"""
        SetBackground(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID2NN_SetBackground(self, _arg)

    def GetBackground(self):
        r"""GetBackground(self) -> double"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID2NN_GetBackground(self)

    def SetCropToFill(self, _arg):
        r"""
        SetCropToFill(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID2NN_SetCropToFill(self, _arg)

    def GetCropToFill(self):
        r"""GetCropToFill(self) -> bool"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID2NN_GetCropToFill(self)

    def CropToFillOn(self):
        r"""CropToFillOn(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID2NN_CropToFillOn(self)

    def CropToFillOff(self):
        r"""CropToFillOff(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID2NN_CropToFillOff(self)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterID2NN

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMergeImageFilterID2NN

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID2NN_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterID2NN

        Create a new object of the class itkTileMergeImageFilterID2NN and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterID2NN.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterID2NN.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterID2NN.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterID2NN in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterID2NN_swigregister(itkTileMergeImageFilterID2NN)

def itkTileMergeImageFilterID3L_New():
    return itkTileMergeImageFilterID3L.New()

class itkTileMergeImageFilterID3L(itk.itkTileMontagePython.itkTileMontageID3D):
    r"""Proxy of C++ itkTileMergeImageFilterID3L class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMergeImageFilterID3L_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID3L___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMergeImageFilterID3L_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID3L_Clone(self)

    def SetMontage(self, montage):
        r"""
        SetMontage(self, montage)

        Parameters
        ----------
        montage: itkTileMontageID3D const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID3L_SetMontage(self, montage)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID3L_SetReleaseDataBeforeUpdateFlag(self, flag)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageD3
        GetOutput(self) -> itkImageD3
        GetOutput(self, idx) -> itkImageD3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID3L_GetOutput(self, *args)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize3

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID3L_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageD3 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize3
        image: itkImageD3 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize3
        imageFilename: std::string const &

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID3L_SetInputTile(self, *args)

    def SetTileTransform(self, position, transform):
        r"""
        SetTileTransform(self, position, transform)

        Parameters
        ----------
        position: itkSize3
        transform: itkTranslationTransformD3 const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID3L_SetTileTransform(self, position, transform)

    def SetBackground(self, _arg):
        r"""
        SetBackground(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID3L_SetBackground(self, _arg)

    def GetBackground(self):
        r"""GetBackground(self) -> double"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID3L_GetBackground(self)

    def SetCropToFill(self, _arg):
        r"""
        SetCropToFill(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID3L_SetCropToFill(self, _arg)

    def GetCropToFill(self):
        r"""GetCropToFill(self) -> bool"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID3L_GetCropToFill(self)

    def CropToFillOn(self):
        r"""CropToFillOn(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID3L_CropToFillOn(self)

    def CropToFillOff(self):
        r"""CropToFillOff(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID3L_CropToFillOff(self)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterID3L

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMergeImageFilterID3L

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID3L_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterID3L

        Create a new object of the class itkTileMergeImageFilterID3L and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterID3L.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterID3L.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterID3L.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterID3L in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterID3L_swigregister(itkTileMergeImageFilterID3L)

def itkTileMergeImageFilterID3NN_New():
    return itkTileMergeImageFilterID3NN.New()

class itkTileMergeImageFilterID3NN(itk.itkTileMontagePython.itkTileMontageID3D):
    r"""Proxy of C++ itkTileMergeImageFilterID3NN class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMergeImageFilterID3NN_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID3NN___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMergeImageFilterID3NN_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID3NN_Clone(self)

    def SetMontage(self, montage):
        r"""
        SetMontage(self, montage)

        Parameters
        ----------
        montage: itkTileMontageID3D const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID3NN_SetMontage(self, montage)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID3NN_SetReleaseDataBeforeUpdateFlag(self, flag)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageD3
        GetOutput(self) -> itkImageD3
        GetOutput(self, idx) -> itkImageD3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID3NN_GetOutput(self, *args)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize3

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID3NN_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageD3 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize3
        image: itkImageD3 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize3
        imageFilename: std::string const &

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID3NN_SetInputTile(self, *args)

    def SetTileTransform(self, position, transform):
        r"""
        SetTileTransform(self, position, transform)

        Parameters
        ----------
        position: itkSize3
        transform: itkTranslationTransformD3 const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID3NN_SetTileTransform(self, position, transform)

    def SetBackground(self, _arg):
        r"""
        SetBackground(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID3NN_SetBackground(self, _arg)

    def GetBackground(self):
        r"""GetBackground(self) -> double"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID3NN_GetBackground(self)

    def SetCropToFill(self, _arg):
        r"""
        SetCropToFill(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID3NN_SetCropToFill(self, _arg)

    def GetCropToFill(self):
        r"""GetCropToFill(self) -> bool"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID3NN_GetCropToFill(self)

    def CropToFillOn(self):
        r"""CropToFillOn(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID3NN_CropToFillOn(self)

    def CropToFillOff(self):
        r"""CropToFillOff(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID3NN_CropToFillOff(self)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterID3NN

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMergeImageFilterID3NN

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID3NN_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterID3NN

        Create a new object of the class itkTileMergeImageFilterID3NN and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterID3NN.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterID3NN.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterID3NN.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterID3NN in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterID3NN_swigregister(itkTileMergeImageFilterID3NN)

def itkTileMergeImageFilterID4L_New():
    return itkTileMergeImageFilterID4L.New()

class itkTileMergeImageFilterID4L(itk.itkTileMontagePython.itkTileMontageID4D):
    r"""Proxy of C++ itkTileMergeImageFilterID4L class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMergeImageFilterID4L_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID4L___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMergeImageFilterID4L_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID4L_Clone(self)

    def SetMontage(self, montage):
        r"""
        SetMontage(self, montage)

        Parameters
        ----------
        montage: itkTileMontageID4D const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID4L_SetMontage(self, montage)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID4L_SetReleaseDataBeforeUpdateFlag(self, flag)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageD4
        GetOutput(self) -> itkImageD4
        GetOutput(self, idx) -> itkImageD4

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID4L_GetOutput(self, *args)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize4

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID4L_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageD4 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize4
        image: itkImageD4 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize4
        imageFilename: std::string const &

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID4L_SetInputTile(self, *args)

    def SetTileTransform(self, position, transform):
        r"""
        SetTileTransform(self, position, transform)

        Parameters
        ----------
        position: itkSize4
        transform: itkTranslationTransformD4 const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID4L_SetTileTransform(self, position, transform)

    def SetBackground(self, _arg):
        r"""
        SetBackground(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID4L_SetBackground(self, _arg)

    def GetBackground(self):
        r"""GetBackground(self) -> double"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID4L_GetBackground(self)

    def SetCropToFill(self, _arg):
        r"""
        SetCropToFill(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID4L_SetCropToFill(self, _arg)

    def GetCropToFill(self):
        r"""GetCropToFill(self) -> bool"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID4L_GetCropToFill(self)

    def CropToFillOn(self):
        r"""CropToFillOn(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID4L_CropToFillOn(self)

    def CropToFillOff(self):
        r"""CropToFillOff(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID4L_CropToFillOff(self)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterID4L

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMergeImageFilterID4L

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID4L_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterID4L

        Create a new object of the class itkTileMergeImageFilterID4L and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterID4L.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterID4L.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterID4L.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterID4L in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterID4L_swigregister(itkTileMergeImageFilterID4L)

def itkTileMergeImageFilterID4NN_New():
    return itkTileMergeImageFilterID4NN.New()

class itkTileMergeImageFilterID4NN(itk.itkTileMontagePython.itkTileMontageID4D):
    r"""Proxy of C++ itkTileMergeImageFilterID4NN class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMergeImageFilterID4NN_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID4NN___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMergeImageFilterID4NN_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID4NN_Clone(self)

    def SetMontage(self, montage):
        r"""
        SetMontage(self, montage)

        Parameters
        ----------
        montage: itkTileMontageID4D const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID4NN_SetMontage(self, montage)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID4NN_SetReleaseDataBeforeUpdateFlag(self, flag)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageD4
        GetOutput(self) -> itkImageD4
        GetOutput(self, idx) -> itkImageD4

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID4NN_GetOutput(self, *args)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize4

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID4NN_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageD4 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize4
        image: itkImageD4 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize4
        imageFilename: std::string const &

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID4NN_SetInputTile(self, *args)

    def SetTileTransform(self, position, transform):
        r"""
        SetTileTransform(self, position, transform)

        Parameters
        ----------
        position: itkSize4
        transform: itkTranslationTransformD4 const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID4NN_SetTileTransform(self, position, transform)

    def SetBackground(self, _arg):
        r"""
        SetBackground(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID4NN_SetBackground(self, _arg)

    def GetBackground(self):
        r"""GetBackground(self) -> double"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID4NN_GetBackground(self)

    def SetCropToFill(self, _arg):
        r"""
        SetCropToFill(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID4NN_SetCropToFill(self, _arg)

    def GetCropToFill(self):
        r"""GetCropToFill(self) -> bool"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID4NN_GetCropToFill(self)

    def CropToFillOn(self):
        r"""CropToFillOn(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID4NN_CropToFillOn(self)

    def CropToFillOff(self):
        r"""CropToFillOff(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID4NN_CropToFillOff(self)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterID4NN

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMergeImageFilterID4NN

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID4NN_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterID4NN

        Create a new object of the class itkTileMergeImageFilterID4NN and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterID4NN.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterID4NN.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterID4NN.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterID4NN in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterID4NN_swigregister(itkTileMergeImageFilterID4NN)

def itkTileMergeImageFilterIF2L_New():
    return itkTileMergeImageFilterIF2L.New()

class itkTileMergeImageFilterIF2L(itk.itkTileMontagePython.itkTileMontageIF2D):
    r"""Proxy of C++ itkTileMergeImageFilterIF2L class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMergeImageFilterIF2L_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2L___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMergeImageFilterIF2L_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2L_Clone(self)

    def SetMontage(self, montage):
        r"""
        SetMontage(self, montage)

        Parameters
        ----------
        montage: itkTileMontageIF2D const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2L_SetMontage(self, montage)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2L_SetReleaseDataBeforeUpdateFlag(self, flag)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageF2
        GetOutput(self) -> itkImageF2
        GetOutput(self, idx) -> itkImageF2

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2L_GetOutput(self, *args)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize2

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2L_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageF2 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize2
        image: itkImageF2 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize2
        imageFilename: std::string const &

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2L_SetInputTile(self, *args)

    def SetTileTransform(self, position, transform):
        r"""
        SetTileTransform(self, position, transform)

        Parameters
        ----------
        position: itkSize2
        transform: itkTranslationTransformD2 const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2L_SetTileTransform(self, position, transform)

    def SetBackground(self, _arg):
        r"""
        SetBackground(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2L_SetBackground(self, _arg)

    def GetBackground(self):
        r"""GetBackground(self) -> float"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2L_GetBackground(self)

    def SetCropToFill(self, _arg):
        r"""
        SetCropToFill(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2L_SetCropToFill(self, _arg)

    def GetCropToFill(self):
        r"""GetCropToFill(self) -> bool"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2L_GetCropToFill(self)

    def CropToFillOn(self):
        r"""CropToFillOn(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2L_CropToFillOn(self)

    def CropToFillOff(self):
        r"""CropToFillOff(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2L_CropToFillOff(self)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterIF2L

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMergeImageFilterIF2L

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2L_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterIF2L

        Create a new object of the class itkTileMergeImageFilterIF2L and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterIF2L.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterIF2L.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterIF2L.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterIF2L in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2L_swigregister(itkTileMergeImageFilterIF2L)

def itkTileMergeImageFilterIF2NN_New():
    return itkTileMergeImageFilterIF2NN.New()

class itkTileMergeImageFilterIF2NN(itk.itkTileMontagePython.itkTileMontageIF2D):
    r"""Proxy of C++ itkTileMergeImageFilterIF2NN class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMergeImageFilterIF2NN_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2NN___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMergeImageFilterIF2NN_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2NN_Clone(self)

    def SetMontage(self, montage):
        r"""
        SetMontage(self, montage)

        Parameters
        ----------
        montage: itkTileMontageIF2D const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2NN_SetMontage(self, montage)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2NN_SetReleaseDataBeforeUpdateFlag(self, flag)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageF2
        GetOutput(self) -> itkImageF2
        GetOutput(self, idx) -> itkImageF2

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2NN_GetOutput(self, *args)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize2

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2NN_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageF2 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize2
        image: itkImageF2 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize2
        imageFilename: std::string const &

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2NN_SetInputTile(self, *args)

    def SetTileTransform(self, position, transform):
        r"""
        SetTileTransform(self, position, transform)

        Parameters
        ----------
        position: itkSize2
        transform: itkTranslationTransformD2 const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2NN_SetTileTransform(self, position, transform)

    def SetBackground(self, _arg):
        r"""
        SetBackground(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2NN_SetBackground(self, _arg)

    def GetBackground(self):
        r"""GetBackground(self) -> float"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2NN_GetBackground(self)

    def SetCropToFill(self, _arg):
        r"""
        SetCropToFill(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2NN_SetCropToFill(self, _arg)

    def GetCropToFill(self):
        r"""GetCropToFill(self) -> bool"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2NN_GetCropToFill(self)

    def CropToFillOn(self):
        r"""CropToFillOn(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2NN_CropToFillOn(self)

    def CropToFillOff(self):
        r"""CropToFillOff(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2NN_CropToFillOff(self)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterIF2NN

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMergeImageFilterIF2NN

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2NN_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterIF2NN

        Create a new object of the class itkTileMergeImageFilterIF2NN and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterIF2NN.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterIF2NN.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterIF2NN.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterIF2NN in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2NN_swigregister(itkTileMergeImageFilterIF2NN)

def itkTileMergeImageFilterIF3L_New():
    return itkTileMergeImageFilterIF3L.New()

class itkTileMergeImageFilterIF3L(itk.itkTileMontagePython.itkTileMontageIF3D):
    r"""Proxy of C++ itkTileMergeImageFilterIF3L class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMergeImageFilterIF3L_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3L___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMergeImageFilterIF3L_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3L_Clone(self)

    def SetMontage(self, montage):
        r"""
        SetMontage(self, montage)

        Parameters
        ----------
        montage: itkTileMontageIF3D const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3L_SetMontage(self, montage)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3L_SetReleaseDataBeforeUpdateFlag(self, flag)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageF3
        GetOutput(self) -> itkImageF3
        GetOutput(self, idx) -> itkImageF3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3L_GetOutput(self, *args)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize3

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3L_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageF3 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize3
        image: itkImageF3 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize3
        imageFilename: std::string const &

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3L_SetInputTile(self, *args)

    def SetTileTransform(self, position, transform):
        r"""
        SetTileTransform(self, position, transform)

        Parameters
        ----------
        position: itkSize3
        transform: itkTranslationTransformD3 const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3L_SetTileTransform(self, position, transform)

    def SetBackground(self, _arg):
        r"""
        SetBackground(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3L_SetBackground(self, _arg)

    def GetBackground(self):
        r"""GetBackground(self) -> float"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3L_GetBackground(self)

    def SetCropToFill(self, _arg):
        r"""
        SetCropToFill(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3L_SetCropToFill(self, _arg)

    def GetCropToFill(self):
        r"""GetCropToFill(self) -> bool"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3L_GetCropToFill(self)

    def CropToFillOn(self):
        r"""CropToFillOn(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3L_CropToFillOn(self)

    def CropToFillOff(self):
        r"""CropToFillOff(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3L_CropToFillOff(self)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterIF3L

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMergeImageFilterIF3L

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3L_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterIF3L

        Create a new object of the class itkTileMergeImageFilterIF3L and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterIF3L.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterIF3L.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterIF3L.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterIF3L in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3L_swigregister(itkTileMergeImageFilterIF3L)

def itkTileMergeImageFilterIF3NN_New():
    return itkTileMergeImageFilterIF3NN.New()

class itkTileMergeImageFilterIF3NN(itk.itkTileMontagePython.itkTileMontageIF3D):
    r"""Proxy of C++ itkTileMergeImageFilterIF3NN class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMergeImageFilterIF3NN_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3NN___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMergeImageFilterIF3NN_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3NN_Clone(self)

    def SetMontage(self, montage):
        r"""
        SetMontage(self, montage)

        Parameters
        ----------
        montage: itkTileMontageIF3D const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3NN_SetMontage(self, montage)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3NN_SetReleaseDataBeforeUpdateFlag(self, flag)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageF3
        GetOutput(self) -> itkImageF3
        GetOutput(self, idx) -> itkImageF3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3NN_GetOutput(self, *args)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize3

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3NN_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageF3 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize3
        image: itkImageF3 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize3
        imageFilename: std::string const &

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3NN_SetInputTile(self, *args)

    def SetTileTransform(self, position, transform):
        r"""
        SetTileTransform(self, position, transform)

        Parameters
        ----------
        position: itkSize3
        transform: itkTranslationTransformD3 const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3NN_SetTileTransform(self, position, transform)

    def SetBackground(self, _arg):
        r"""
        SetBackground(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3NN_SetBackground(self, _arg)

    def GetBackground(self):
        r"""GetBackground(self) -> float"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3NN_GetBackground(self)

    def SetCropToFill(self, _arg):
        r"""
        SetCropToFill(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3NN_SetCropToFill(self, _arg)

    def GetCropToFill(self):
        r"""GetCropToFill(self) -> bool"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3NN_GetCropToFill(self)

    def CropToFillOn(self):
        r"""CropToFillOn(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3NN_CropToFillOn(self)

    def CropToFillOff(self):
        r"""CropToFillOff(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3NN_CropToFillOff(self)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterIF3NN

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMergeImageFilterIF3NN

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3NN_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterIF3NN

        Create a new object of the class itkTileMergeImageFilterIF3NN and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterIF3NN.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterIF3NN.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterIF3NN.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterIF3NN in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3NN_swigregister(itkTileMergeImageFilterIF3NN)

def itkTileMergeImageFilterIF4L_New():
    return itkTileMergeImageFilterIF4L.New()

class itkTileMergeImageFilterIF4L(itk.itkTileMontagePython.itkTileMontageIF4D):
    r"""Proxy of C++ itkTileMergeImageFilterIF4L class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMergeImageFilterIF4L_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4L___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMergeImageFilterIF4L_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4L_Clone(self)

    def SetMontage(self, montage):
        r"""
        SetMontage(self, montage)

        Parameters
        ----------
        montage: itkTileMontageIF4D const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4L_SetMontage(self, montage)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4L_SetReleaseDataBeforeUpdateFlag(self, flag)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageF4
        GetOutput(self) -> itkImageF4
        GetOutput(self, idx) -> itkImageF4

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4L_GetOutput(self, *args)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize4

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4L_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageF4 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize4
        image: itkImageF4 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize4
        imageFilename: std::string const &

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4L_SetInputTile(self, *args)

    def SetTileTransform(self, position, transform):
        r"""
        SetTileTransform(self, position, transform)

        Parameters
        ----------
        position: itkSize4
        transform: itkTranslationTransformD4 const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4L_SetTileTransform(self, position, transform)

    def SetBackground(self, _arg):
        r"""
        SetBackground(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4L_SetBackground(self, _arg)

    def GetBackground(self):
        r"""GetBackground(self) -> float"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4L_GetBackground(self)

    def SetCropToFill(self, _arg):
        r"""
        SetCropToFill(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4L_SetCropToFill(self, _arg)

    def GetCropToFill(self):
        r"""GetCropToFill(self) -> bool"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4L_GetCropToFill(self)

    def CropToFillOn(self):
        r"""CropToFillOn(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4L_CropToFillOn(self)

    def CropToFillOff(self):
        r"""CropToFillOff(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4L_CropToFillOff(self)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterIF4L

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMergeImageFilterIF4L

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4L_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterIF4L

        Create a new object of the class itkTileMergeImageFilterIF4L and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterIF4L.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterIF4L.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterIF4L.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterIF4L in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4L_swigregister(itkTileMergeImageFilterIF4L)

def itkTileMergeImageFilterIF4NN_New():
    return itkTileMergeImageFilterIF4NN.New()

class itkTileMergeImageFilterIF4NN(itk.itkTileMontagePython.itkTileMontageIF4D):
    r"""Proxy of C++ itkTileMergeImageFilterIF4NN class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMergeImageFilterIF4NN_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4NN___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMergeImageFilterIF4NN_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4NN_Clone(self)

    def SetMontage(self, montage):
        r"""
        SetMontage(self, montage)

        Parameters
        ----------
        montage: itkTileMontageIF4D const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4NN_SetMontage(self, montage)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4NN_SetReleaseDataBeforeUpdateFlag(self, flag)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageF4
        GetOutput(self) -> itkImageF4
        GetOutput(self, idx) -> itkImageF4

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4NN_GetOutput(self, *args)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize4

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4NN_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageF4 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize4
        image: itkImageF4 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize4
        imageFilename: std::string const &

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4NN_SetInputTile(self, *args)

    def SetTileTransform(self, position, transform):
        r"""
        SetTileTransform(self, position, transform)

        Parameters
        ----------
        position: itkSize4
        transform: itkTranslationTransformD4 const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4NN_SetTileTransform(self, position, transform)

    def SetBackground(self, _arg):
        r"""
        SetBackground(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4NN_SetBackground(self, _arg)

    def GetBackground(self):
        r"""GetBackground(self) -> float"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4NN_GetBackground(self)

    def SetCropToFill(self, _arg):
        r"""
        SetCropToFill(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4NN_SetCropToFill(self, _arg)

    def GetCropToFill(self):
        r"""GetCropToFill(self) -> bool"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4NN_GetCropToFill(self)

    def CropToFillOn(self):
        r"""CropToFillOn(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4NN_CropToFillOn(self)

    def CropToFillOff(self):
        r"""CropToFillOff(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4NN_CropToFillOff(self)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterIF4NN

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMergeImageFilterIF4NN

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4NN_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterIF4NN

        Create a new object of the class itkTileMergeImageFilterIF4NN and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterIF4NN.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterIF4NN.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterIF4NN.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterIF4NN in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4NN_swigregister(itkTileMergeImageFilterIF4NN)

def itkTileMergeImageFilterIRGBAUC2L_New():
    return itkTileMergeImageFilterIRGBAUC2L.New()

class itkTileMergeImageFilterIRGBAUC2L(itk.itkTileMontagePython.itkTileMontageIUC2D):
    r"""Proxy of C++ itkTileMergeImageFilterIRGBAUC2L class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMergeImageFilterIRGBAUC2L_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2L___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMergeImageFilterIRGBAUC2L_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2L_Clone(self)

    def SetMontage(self, montage):
        r"""
        SetMontage(self, montage)

        Parameters
        ----------
        montage: itkTileMontageIUC2D const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2L_SetMontage(self, montage)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2L_SetReleaseDataBeforeUpdateFlag(self, flag)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageRGBAUC2
        GetOutput(self) -> itkImageRGBAUC2
        GetOutput(self, idx) -> itkImageRGBAUC2

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2L_GetOutput(self, *args)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize2

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2L_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageRGBAUC2 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize2
        image: itkImageRGBAUC2 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize2
        imageFilename: std::string const &

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2L_SetInputTile(self, *args)

    def SetTileTransform(self, position, transform):
        r"""
        SetTileTransform(self, position, transform)

        Parameters
        ----------
        position: itkSize2
        transform: itkTranslationTransformD2 const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2L_SetTileTransform(self, position, transform)

    def SetBackground(self, _arg):
        r"""
        SetBackground(self, _arg)

        Parameters
        ----------
        _arg: itkRGBAPixelUC

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2L_SetBackground(self, _arg)

    def GetBackground(self):
        r"""GetBackground(self) -> itkRGBAPixelUC"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2L_GetBackground(self)

    def SetCropToFill(self, _arg):
        r"""
        SetCropToFill(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2L_SetCropToFill(self, _arg)

    def GetCropToFill(self):
        r"""GetCropToFill(self) -> bool"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2L_GetCropToFill(self)

    def CropToFillOn(self):
        r"""CropToFillOn(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2L_CropToFillOn(self)

    def CropToFillOff(self):
        r"""CropToFillOff(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2L_CropToFillOff(self)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterIRGBAUC2L

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMergeImageFilterIRGBAUC2L

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2L_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterIRGBAUC2L

        Create a new object of the class itkTileMergeImageFilterIRGBAUC2L and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterIRGBAUC2L.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterIRGBAUC2L.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterIRGBAUC2L.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterIRGBAUC2L in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2L_swigregister(itkTileMergeImageFilterIRGBAUC2L)

def itkTileMergeImageFilterIRGBAUC2NN_New():
    return itkTileMergeImageFilterIRGBAUC2NN.New()

class itkTileMergeImageFilterIRGBAUC2NN(itk.itkTileMontagePython.itkTileMontageIUC2D):
    r"""Proxy of C++ itkTileMergeImageFilterIRGBAUC2NN class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMergeImageFilterIRGBAUC2NN_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2NN___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMergeImageFilterIRGBAUC2NN_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2NN_Clone(self)

    def SetMontage(self, montage):
        r"""
        SetMontage(self, montage)

        Parameters
        ----------
        montage: itkTileMontageIUC2D const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2NN_SetMontage(self, montage)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2NN_SetReleaseDataBeforeUpdateFlag(self, flag)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageRGBAUC2
        GetOutput(self) -> itkImageRGBAUC2
        GetOutput(self, idx) -> itkImageRGBAUC2

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2NN_GetOutput(self, *args)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize2

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2NN_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageRGBAUC2 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize2
        image: itkImageRGBAUC2 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize2
        imageFilename: std::string const &

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2NN_SetInputTile(self, *args)

    def SetTileTransform(self, position, transform):
        r"""
        SetTileTransform(self, position, transform)

        Parameters
        ----------
        position: itkSize2
        transform: itkTranslationTransformD2 const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2NN_SetTileTransform(self, position, transform)

    def SetBackground(self, _arg):
        r"""
        SetBackground(self, _arg)

        Parameters
        ----------
        _arg: itkRGBAPixelUC

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2NN_SetBackground(self, _arg)

    def GetBackground(self):
        r"""GetBackground(self) -> itkRGBAPixelUC"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2NN_GetBackground(self)

    def SetCropToFill(self, _arg):
        r"""
        SetCropToFill(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2NN_SetCropToFill(self, _arg)

    def GetCropToFill(self):
        r"""GetCropToFill(self) -> bool"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2NN_GetCropToFill(self)

    def CropToFillOn(self):
        r"""CropToFillOn(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2NN_CropToFillOn(self)

    def CropToFillOff(self):
        r"""CropToFillOff(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2NN_CropToFillOff(self)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterIRGBAUC2NN

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMergeImageFilterIRGBAUC2NN

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2NN_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterIRGBAUC2NN

        Create a new object of the class itkTileMergeImageFilterIRGBAUC2NN and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterIRGBAUC2NN.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterIRGBAUC2NN.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterIRGBAUC2NN.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterIRGBAUC2NN in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2NN_swigregister(itkTileMergeImageFilterIRGBAUC2NN)

def itkTileMergeImageFilterIRGBAUC3L_New():
    return itkTileMergeImageFilterIRGBAUC3L.New()

class itkTileMergeImageFilterIRGBAUC3L(itk.itkTileMontagePython.itkTileMontageIUC3D):
    r"""Proxy of C++ itkTileMergeImageFilterIRGBAUC3L class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMergeImageFilterIRGBAUC3L_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3L___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMergeImageFilterIRGBAUC3L_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3L_Clone(self)

    def SetMontage(self, montage):
        r"""
        SetMontage(self, montage)

        Parameters
        ----------
        montage: itkTileMontageIUC3D const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3L_SetMontage(self, montage)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3L_SetReleaseDataBeforeUpdateFlag(self, flag)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageRGBAUC3
        GetOutput(self) -> itkImageRGBAUC3
        GetOutput(self, idx) -> itkImageRGBAUC3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3L_GetOutput(self, *args)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize3

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3L_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageRGBAUC3 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize3
        image: itkImageRGBAUC3 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize3
        imageFilename: std::string const &

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3L_SetInputTile(self, *args)

    def SetTileTransform(self, position, transform):
        r"""
        SetTileTransform(self, position, transform)

        Parameters
        ----------
        position: itkSize3
        transform: itkTranslationTransformD3 const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3L_SetTileTransform(self, position, transform)

    def SetBackground(self, _arg):
        r"""
        SetBackground(self, _arg)

        Parameters
        ----------
        _arg: itkRGBAPixelUC

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3L_SetBackground(self, _arg)

    def GetBackground(self):
        r"""GetBackground(self) -> itkRGBAPixelUC"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3L_GetBackground(self)

    def SetCropToFill(self, _arg):
        r"""
        SetCropToFill(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3L_SetCropToFill(self, _arg)

    def GetCropToFill(self):
        r"""GetCropToFill(self) -> bool"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3L_GetCropToFill(self)

    def CropToFillOn(self):
        r"""CropToFillOn(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3L_CropToFillOn(self)

    def CropToFillOff(self):
        r"""CropToFillOff(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3L_CropToFillOff(self)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterIRGBAUC3L

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMergeImageFilterIRGBAUC3L

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3L_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterIRGBAUC3L

        Create a new object of the class itkTileMergeImageFilterIRGBAUC3L and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterIRGBAUC3L.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterIRGBAUC3L.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterIRGBAUC3L.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterIRGBAUC3L in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3L_swigregister(itkTileMergeImageFilterIRGBAUC3L)

def itkTileMergeImageFilterIRGBAUC3NN_New():
    return itkTileMergeImageFilterIRGBAUC3NN.New()

class itkTileMergeImageFilterIRGBAUC3NN(itk.itkTileMontagePython.itkTileMontageIUC3D):
    r"""Proxy of C++ itkTileMergeImageFilterIRGBAUC3NN class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMergeImageFilterIRGBAUC3NN_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3NN___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMergeImageFilterIRGBAUC3NN_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3NN_Clone(self)

    def SetMontage(self, montage):
        r"""
        SetMontage(self, montage)

        Parameters
        ----------
        montage: itkTileMontageIUC3D const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3NN_SetMontage(self, montage)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3NN_SetReleaseDataBeforeUpdateFlag(self, flag)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageRGBAUC3
        GetOutput(self) -> itkImageRGBAUC3
        GetOutput(self, idx) -> itkImageRGBAUC3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3NN_GetOutput(self, *args)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize3

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3NN_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageRGBAUC3 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize3
        image: itkImageRGBAUC3 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize3
        imageFilename: std::string const &

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3NN_SetInputTile(self, *args)

    def SetTileTransform(self, position, transform):
        r"""
        SetTileTransform(self, position, transform)

        Parameters
        ----------
        position: itkSize3
        transform: itkTranslationTransformD3 const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3NN_SetTileTransform(self, position, transform)

    def SetBackground(self, _arg):
        r"""
        SetBackground(self, _arg)

        Parameters
        ----------
        _arg: itkRGBAPixelUC

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3NN_SetBackground(self, _arg)

    def GetBackground(self):
        r"""GetBackground(self) -> itkRGBAPixelUC"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3NN_GetBackground(self)

    def SetCropToFill(self, _arg):
        r"""
        SetCropToFill(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3NN_SetCropToFill(self, _arg)

    def GetCropToFill(self):
        r"""GetCropToFill(self) -> bool"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3NN_GetCropToFill(self)

    def CropToFillOn(self):
        r"""CropToFillOn(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3NN_CropToFillOn(self)

    def CropToFillOff(self):
        r"""CropToFillOff(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3NN_CropToFillOff(self)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterIRGBAUC3NN

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMergeImageFilterIRGBAUC3NN

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3NN_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterIRGBAUC3NN

        Create a new object of the class itkTileMergeImageFilterIRGBAUC3NN and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterIRGBAUC3NN.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterIRGBAUC3NN.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterIRGBAUC3NN.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterIRGBAUC3NN in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3NN_swigregister(itkTileMergeImageFilterIRGBAUC3NN)

def itkTileMergeImageFilterIRGBAUC4L_New():
    return itkTileMergeImageFilterIRGBAUC4L.New()

class itkTileMergeImageFilterIRGBAUC4L(itk.itkTileMontagePython.itkTileMontageIUC4D):
    r"""Proxy of C++ itkTileMergeImageFilterIRGBAUC4L class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMergeImageFilterIRGBAUC4L_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4L___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMergeImageFilterIRGBAUC4L_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4L_Clone(self)

    def SetMontage(self, montage):
        r"""
        SetMontage(self, montage)

        Parameters
        ----------
        montage: itkTileMontageIUC4D const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4L_SetMontage(self, montage)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4L_SetReleaseDataBeforeUpdateFlag(self, flag)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageRGBAUC4
        GetOutput(self) -> itkImageRGBAUC4
        GetOutput(self, idx) -> itkImageRGBAUC4

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4L_GetOutput(self, *args)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize4

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4L_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageRGBAUC4 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize4
        image: itkImageRGBAUC4 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize4
        imageFilename: std::string const &

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4L_SetInputTile(self, *args)

    def SetTileTransform(self, position, transform):
        r"""
        SetTileTransform(self, position, transform)

        Parameters
        ----------
        position: itkSize4
        transform: itkTranslationTransformD4 const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4L_SetTileTransform(self, position, transform)

    def SetBackground(self, _arg):
        r"""
        SetBackground(self, _arg)

        Parameters
        ----------
        _arg: itkRGBAPixelUC

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4L_SetBackground(self, _arg)

    def GetBackground(self):
        r"""GetBackground(self) -> itkRGBAPixelUC"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4L_GetBackground(self)

    def SetCropToFill(self, _arg):
        r"""
        SetCropToFill(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4L_SetCropToFill(self, _arg)

    def GetCropToFill(self):
        r"""GetCropToFill(self) -> bool"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4L_GetCropToFill(self)

    def CropToFillOn(self):
        r"""CropToFillOn(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4L_CropToFillOn(self)

    def CropToFillOff(self):
        r"""CropToFillOff(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4L_CropToFillOff(self)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterIRGBAUC4L

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMergeImageFilterIRGBAUC4L

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4L_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterIRGBAUC4L

        Create a new object of the class itkTileMergeImageFilterIRGBAUC4L and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterIRGBAUC4L.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterIRGBAUC4L.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterIRGBAUC4L.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterIRGBAUC4L in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4L_swigregister(itkTileMergeImageFilterIRGBAUC4L)

def itkTileMergeImageFilterIRGBAUC4NN_New():
    return itkTileMergeImageFilterIRGBAUC4NN.New()

class itkTileMergeImageFilterIRGBAUC4NN(itk.itkTileMontagePython.itkTileMontageIUC4D):
    r"""Proxy of C++ itkTileMergeImageFilterIRGBAUC4NN class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMergeImageFilterIRGBAUC4NN_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4NN___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMergeImageFilterIRGBAUC4NN_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4NN_Clone(self)

    def SetMontage(self, montage):
        r"""
        SetMontage(self, montage)

        Parameters
        ----------
        montage: itkTileMontageIUC4D const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4NN_SetMontage(self, montage)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4NN_SetReleaseDataBeforeUpdateFlag(self, flag)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageRGBAUC4
        GetOutput(self) -> itkImageRGBAUC4
        GetOutput(self, idx) -> itkImageRGBAUC4

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4NN_GetOutput(self, *args)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize4

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4NN_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageRGBAUC4 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize4
        image: itkImageRGBAUC4 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize4
        imageFilename: std::string const &

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4NN_SetInputTile(self, *args)

    def SetTileTransform(self, position, transform):
        r"""
        SetTileTransform(self, position, transform)

        Parameters
        ----------
        position: itkSize4
        transform: itkTranslationTransformD4 const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4NN_SetTileTransform(self, position, transform)

    def SetBackground(self, _arg):
        r"""
        SetBackground(self, _arg)

        Parameters
        ----------
        _arg: itkRGBAPixelUC

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4NN_SetBackground(self, _arg)

    def GetBackground(self):
        r"""GetBackground(self) -> itkRGBAPixelUC"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4NN_GetBackground(self)

    def SetCropToFill(self, _arg):
        r"""
        SetCropToFill(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4NN_SetCropToFill(self, _arg)

    def GetCropToFill(self):
        r"""GetCropToFill(self) -> bool"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4NN_GetCropToFill(self)

    def CropToFillOn(self):
        r"""CropToFillOn(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4NN_CropToFillOn(self)

    def CropToFillOff(self):
        r"""CropToFillOff(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4NN_CropToFillOff(self)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterIRGBAUC4NN

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMergeImageFilterIRGBAUC4NN

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4NN_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterIRGBAUC4NN

        Create a new object of the class itkTileMergeImageFilterIRGBAUC4NN and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterIRGBAUC4NN.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterIRGBAUC4NN.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterIRGBAUC4NN.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterIRGBAUC4NN in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4NN_swigregister(itkTileMergeImageFilterIRGBAUC4NN)

def itkTileMergeImageFilterIRGBUC2L_New():
    return itkTileMergeImageFilterIRGBUC2L.New()

class itkTileMergeImageFilterIRGBUC2L(itk.itkTileMontagePython.itkTileMontageIUC2D):
    r"""Proxy of C++ itkTileMergeImageFilterIRGBUC2L class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMergeImageFilterIRGBUC2L_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2L___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMergeImageFilterIRGBUC2L_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2L_Clone(self)

    def SetMontage(self, montage):
        r"""
        SetMontage(self, montage)

        Parameters
        ----------
        montage: itkTileMontageIUC2D const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2L_SetMontage(self, montage)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2L_SetReleaseDataBeforeUpdateFlag(self, flag)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageRGBUC2
        GetOutput(self) -> itkImageRGBUC2
        GetOutput(self, idx) -> itkImageRGBUC2

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2L_GetOutput(self, *args)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize2

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2L_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageRGBUC2 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize2
        image: itkImageRGBUC2 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize2
        imageFilename: std::string const &

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2L_SetInputTile(self, *args)

    def SetTileTransform(self, position, transform):
        r"""
        SetTileTransform(self, position, transform)

        Parameters
        ----------
        position: itkSize2
        transform: itkTranslationTransformD2 const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2L_SetTileTransform(self, position, transform)

    def SetBackground(self, _arg):
        r"""
        SetBackground(self, _arg)

        Parameters
        ----------
        _arg: itkRGBPixelUC

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2L_SetBackground(self, _arg)

    def GetBackground(self):
        r"""GetBackground(self) -> itkRGBPixelUC"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2L_GetBackground(self)

    def SetCropToFill(self, _arg):
        r"""
        SetCropToFill(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2L_SetCropToFill(self, _arg)

    def GetCropToFill(self):
        r"""GetCropToFill(self) -> bool"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2L_GetCropToFill(self)

    def CropToFillOn(self):
        r"""CropToFillOn(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2L_CropToFillOn(self)

    def CropToFillOff(self):
        r"""CropToFillOff(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2L_CropToFillOff(self)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterIRGBUC2L

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMergeImageFilterIRGBUC2L

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2L_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterIRGBUC2L

        Create a new object of the class itkTileMergeImageFilterIRGBUC2L and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterIRGBUC2L.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterIRGBUC2L.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterIRGBUC2L.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterIRGBUC2L in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2L_swigregister(itkTileMergeImageFilterIRGBUC2L)

def itkTileMergeImageFilterIRGBUC2NN_New():
    return itkTileMergeImageFilterIRGBUC2NN.New()

class itkTileMergeImageFilterIRGBUC2NN(itk.itkTileMontagePython.itkTileMontageIUC2D):
    r"""Proxy of C++ itkTileMergeImageFilterIRGBUC2NN class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMergeImageFilterIRGBUC2NN_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2NN___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMergeImageFilterIRGBUC2NN_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2NN_Clone(self)

    def SetMontage(self, montage):
        r"""
        SetMontage(self, montage)

        Parameters
        ----------
        montage: itkTileMontageIUC2D const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2NN_SetMontage(self, montage)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2NN_SetReleaseDataBeforeUpdateFlag(self, flag)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageRGBUC2
        GetOutput(self) -> itkImageRGBUC2
        GetOutput(self, idx) -> itkImageRGBUC2

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2NN_GetOutput(self, *args)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize2

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2NN_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageRGBUC2 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize2
        image: itkImageRGBUC2 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize2
        imageFilename: std::string const &

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2NN_SetInputTile(self, *args)

    def SetTileTransform(self, position, transform):
        r"""
        SetTileTransform(self, position, transform)

        Parameters
        ----------
        position: itkSize2
        transform: itkTranslationTransformD2 const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2NN_SetTileTransform(self, position, transform)

    def SetBackground(self, _arg):
        r"""
        SetBackground(self, _arg)

        Parameters
        ----------
        _arg: itkRGBPixelUC

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2NN_SetBackground(self, _arg)

    def GetBackground(self):
        r"""GetBackground(self) -> itkRGBPixelUC"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2NN_GetBackground(self)

    def SetCropToFill(self, _arg):
        r"""
        SetCropToFill(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2NN_SetCropToFill(self, _arg)

    def GetCropToFill(self):
        r"""GetCropToFill(self) -> bool"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2NN_GetCropToFill(self)

    def CropToFillOn(self):
        r"""CropToFillOn(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2NN_CropToFillOn(self)

    def CropToFillOff(self):
        r"""CropToFillOff(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2NN_CropToFillOff(self)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterIRGBUC2NN

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMergeImageFilterIRGBUC2NN

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2NN_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterIRGBUC2NN

        Create a new object of the class itkTileMergeImageFilterIRGBUC2NN and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterIRGBUC2NN.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterIRGBUC2NN.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterIRGBUC2NN.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterIRGBUC2NN in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2NN_swigregister(itkTileMergeImageFilterIRGBUC2NN)

def itkTileMergeImageFilterIRGBUC3L_New():
    return itkTileMergeImageFilterIRGBUC3L.New()

class itkTileMergeImageFilterIRGBUC3L(itk.itkTileMontagePython.itkTileMontageIUC3D):
    r"""Proxy of C++ itkTileMergeImageFilterIRGBUC3L class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMergeImageFilterIRGBUC3L_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3L___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMergeImageFilterIRGBUC3L_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3L_Clone(self)

    def SetMontage(self, montage):
        r"""
        SetMontage(self, montage)

        Parameters
        ----------
        montage: itkTileMontageIUC3D const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3L_SetMontage(self, montage)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3L_SetReleaseDataBeforeUpdateFlag(self, flag)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageRGBUC3
        GetOutput(self) -> itkImageRGBUC3
        GetOutput(self, idx) -> itkImageRGBUC3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3L_GetOutput(self, *args)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize3

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3L_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageRGBUC3 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize3
        image: itkImageRGBUC3 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize3
        imageFilename: std::string const &

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3L_SetInputTile(self, *args)

    def SetTileTransform(self, position, transform):
        r"""
        SetTileTransform(self, position, transform)

        Parameters
        ----------
        position: itkSize3
        transform: itkTranslationTransformD3 const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3L_SetTileTransform(self, position, transform)

    def SetBackground(self, _arg):
        r"""
        SetBackground(self, _arg)

        Parameters
        ----------
        _arg: itkRGBPixelUC

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3L_SetBackground(self, _arg)

    def GetBackground(self):
        r"""GetBackground(self) -> itkRGBPixelUC"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3L_GetBackground(self)

    def SetCropToFill(self, _arg):
        r"""
        SetCropToFill(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3L_SetCropToFill(self, _arg)

    def GetCropToFill(self):
        r"""GetCropToFill(self) -> bool"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3L_GetCropToFill(self)

    def CropToFillOn(self):
        r"""CropToFillOn(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3L_CropToFillOn(self)

    def CropToFillOff(self):
        r"""CropToFillOff(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3L_CropToFillOff(self)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterIRGBUC3L

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMergeImageFilterIRGBUC3L

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3L_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterIRGBUC3L

        Create a new object of the class itkTileMergeImageFilterIRGBUC3L and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterIRGBUC3L.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterIRGBUC3L.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterIRGBUC3L.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterIRGBUC3L in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3L_swigregister(itkTileMergeImageFilterIRGBUC3L)

def itkTileMergeImageFilterIRGBUC3NN_New():
    return itkTileMergeImageFilterIRGBUC3NN.New()

class itkTileMergeImageFilterIRGBUC3NN(itk.itkTileMontagePython.itkTileMontageIUC3D):
    r"""Proxy of C++ itkTileMergeImageFilterIRGBUC3NN class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMergeImageFilterIRGBUC3NN_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3NN___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMergeImageFilterIRGBUC3NN_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3NN_Clone(self)

    def SetMontage(self, montage):
        r"""
        SetMontage(self, montage)

        Parameters
        ----------
        montage: itkTileMontageIUC3D const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3NN_SetMontage(self, montage)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3NN_SetReleaseDataBeforeUpdateFlag(self, flag)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageRGBUC3
        GetOutput(self) -> itkImageRGBUC3
        GetOutput(self, idx) -> itkImageRGBUC3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3NN_GetOutput(self, *args)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize3

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3NN_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageRGBUC3 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize3
        image: itkImageRGBUC3 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize3
        imageFilename: std::string const &

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3NN_SetInputTile(self, *args)

    def SetTileTransform(self, position, transform):
        r"""
        SetTileTransform(self, position, transform)

        Parameters
        ----------
        position: itkSize3
        transform: itkTranslationTransformD3 const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3NN_SetTileTransform(self, position, transform)

    def SetBackground(self, _arg):
        r"""
        SetBackground(self, _arg)

        Parameters
        ----------
        _arg: itkRGBPixelUC

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3NN_SetBackground(self, _arg)

    def GetBackground(self):
        r"""GetBackground(self) -> itkRGBPixelUC"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3NN_GetBackground(self)

    def SetCropToFill(self, _arg):
        r"""
        SetCropToFill(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3NN_SetCropToFill(self, _arg)

    def GetCropToFill(self):
        r"""GetCropToFill(self) -> bool"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3NN_GetCropToFill(self)

    def CropToFillOn(self):
        r"""CropToFillOn(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3NN_CropToFillOn(self)

    def CropToFillOff(self):
        r"""CropToFillOff(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3NN_CropToFillOff(self)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterIRGBUC3NN

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMergeImageFilterIRGBUC3NN

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3NN_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterIRGBUC3NN

        Create a new object of the class itkTileMergeImageFilterIRGBUC3NN and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterIRGBUC3NN.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterIRGBUC3NN.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterIRGBUC3NN.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterIRGBUC3NN in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3NN_swigregister(itkTileMergeImageFilterIRGBUC3NN)

def itkTileMergeImageFilterIRGBUC4L_New():
    return itkTileMergeImageFilterIRGBUC4L.New()

class itkTileMergeImageFilterIRGBUC4L(itk.itkTileMontagePython.itkTileMontageIUC4D):
    r"""Proxy of C++ itkTileMergeImageFilterIRGBUC4L class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMergeImageFilterIRGBUC4L_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4L___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMergeImageFilterIRGBUC4L_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4L_Clone(self)

    def SetMontage(self, montage):
        r"""
        SetMontage(self, montage)

        Parameters
        ----------
        montage: itkTileMontageIUC4D const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4L_SetMontage(self, montage)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4L_SetReleaseDataBeforeUpdateFlag(self, flag)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageRGBUC4
        GetOutput(self) -> itkImageRGBUC4
        GetOutput(self, idx) -> itkImageRGBUC4

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4L_GetOutput(self, *args)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize4

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4L_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageRGBUC4 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize4
        image: itkImageRGBUC4 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize4
        imageFilename: std::string const &

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4L_SetInputTile(self, *args)

    def SetTileTransform(self, position, transform):
        r"""
        SetTileTransform(self, position, transform)

        Parameters
        ----------
        position: itkSize4
        transform: itkTranslationTransformD4 const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4L_SetTileTransform(self, position, transform)

    def SetBackground(self, _arg):
        r"""
        SetBackground(self, _arg)

        Parameters
        ----------
        _arg: itkRGBPixelUC

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4L_SetBackground(self, _arg)

    def GetBackground(self):
        r"""GetBackground(self) -> itkRGBPixelUC"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4L_GetBackground(self)

    def SetCropToFill(self, _arg):
        r"""
        SetCropToFill(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4L_SetCropToFill(self, _arg)

    def GetCropToFill(self):
        r"""GetCropToFill(self) -> bool"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4L_GetCropToFill(self)

    def CropToFillOn(self):
        r"""CropToFillOn(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4L_CropToFillOn(self)

    def CropToFillOff(self):
        r"""CropToFillOff(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4L_CropToFillOff(self)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterIRGBUC4L

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMergeImageFilterIRGBUC4L

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4L_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterIRGBUC4L

        Create a new object of the class itkTileMergeImageFilterIRGBUC4L and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterIRGBUC4L.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterIRGBUC4L.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterIRGBUC4L.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterIRGBUC4L in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4L_swigregister(itkTileMergeImageFilterIRGBUC4L)

def itkTileMergeImageFilterIRGBUC4NN_New():
    return itkTileMergeImageFilterIRGBUC4NN.New()

class itkTileMergeImageFilterIRGBUC4NN(itk.itkTileMontagePython.itkTileMontageIUC4D):
    r"""Proxy of C++ itkTileMergeImageFilterIRGBUC4NN class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMergeImageFilterIRGBUC4NN_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4NN___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMergeImageFilterIRGBUC4NN_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4NN_Clone(self)

    def SetMontage(self, montage):
        r"""
        SetMontage(self, montage)

        Parameters
        ----------
        montage: itkTileMontageIUC4D const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4NN_SetMontage(self, montage)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4NN_SetReleaseDataBeforeUpdateFlag(self, flag)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageRGBUC4
        GetOutput(self) -> itkImageRGBUC4
        GetOutput(self, idx) -> itkImageRGBUC4

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4NN_GetOutput(self, *args)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize4

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4NN_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageRGBUC4 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize4
        image: itkImageRGBUC4 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize4
        imageFilename: std::string const &

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4NN_SetInputTile(self, *args)

    def SetTileTransform(self, position, transform):
        r"""
        SetTileTransform(self, position, transform)

        Parameters
        ----------
        position: itkSize4
        transform: itkTranslationTransformD4 const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4NN_SetTileTransform(self, position, transform)

    def SetBackground(self, _arg):
        r"""
        SetBackground(self, _arg)

        Parameters
        ----------
        _arg: itkRGBPixelUC

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4NN_SetBackground(self, _arg)

    def GetBackground(self):
        r"""GetBackground(self) -> itkRGBPixelUC"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4NN_GetBackground(self)

    def SetCropToFill(self, _arg):
        r"""
        SetCropToFill(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4NN_SetCropToFill(self, _arg)

    def GetCropToFill(self):
        r"""GetCropToFill(self) -> bool"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4NN_GetCropToFill(self)

    def CropToFillOn(self):
        r"""CropToFillOn(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4NN_CropToFillOn(self)

    def CropToFillOff(self):
        r"""CropToFillOff(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4NN_CropToFillOff(self)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterIRGBUC4NN

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMergeImageFilterIRGBUC4NN

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4NN_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterIRGBUC4NN

        Create a new object of the class itkTileMergeImageFilterIRGBUC4NN and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterIRGBUC4NN.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterIRGBUC4NN.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterIRGBUC4NN.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterIRGBUC4NN in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4NN_swigregister(itkTileMergeImageFilterIRGBUC4NN)

def itkTileMergeImageFilterISS2L_New():
    return itkTileMergeImageFilterISS2L.New()

class itkTileMergeImageFilterISS2L(itk.itkTileMontagePython.itkTileMontageISS2D):
    r"""Proxy of C++ itkTileMergeImageFilterISS2L class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMergeImageFilterISS2L_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2L___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMergeImageFilterISS2L_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2L_Clone(self)

    def SetMontage(self, montage):
        r"""
        SetMontage(self, montage)

        Parameters
        ----------
        montage: itkTileMontageISS2D const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2L_SetMontage(self, montage)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2L_SetReleaseDataBeforeUpdateFlag(self, flag)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageSS2
        GetOutput(self) -> itkImageSS2
        GetOutput(self, idx) -> itkImageSS2

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2L_GetOutput(self, *args)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize2

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2L_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageSS2 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize2
        image: itkImageSS2 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize2
        imageFilename: std::string const &

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2L_SetInputTile(self, *args)

    def SetTileTransform(self, position, transform):
        r"""
        SetTileTransform(self, position, transform)

        Parameters
        ----------
        position: itkSize2
        transform: itkTranslationTransformD2 const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2L_SetTileTransform(self, position, transform)

    def SetBackground(self, _arg):
        r"""
        SetBackground(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2L_SetBackground(self, _arg)

    def GetBackground(self):
        r"""GetBackground(self) -> short"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2L_GetBackground(self)

    def SetCropToFill(self, _arg):
        r"""
        SetCropToFill(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2L_SetCropToFill(self, _arg)

    def GetCropToFill(self):
        r"""GetCropToFill(self) -> bool"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2L_GetCropToFill(self)

    def CropToFillOn(self):
        r"""CropToFillOn(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2L_CropToFillOn(self)

    def CropToFillOff(self):
        r"""CropToFillOff(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2L_CropToFillOff(self)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterISS2L

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMergeImageFilterISS2L

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2L_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterISS2L

        Create a new object of the class itkTileMergeImageFilterISS2L and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterISS2L.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterISS2L.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterISS2L.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterISS2L in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2L_swigregister(itkTileMergeImageFilterISS2L)

def itkTileMergeImageFilterISS2NN_New():
    return itkTileMergeImageFilterISS2NN.New()

class itkTileMergeImageFilterISS2NN(itk.itkTileMontagePython.itkTileMontageISS2D):
    r"""Proxy of C++ itkTileMergeImageFilterISS2NN class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMergeImageFilterISS2NN_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2NN___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMergeImageFilterISS2NN_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2NN_Clone(self)

    def SetMontage(self, montage):
        r"""
        SetMontage(self, montage)

        Parameters
        ----------
        montage: itkTileMontageISS2D const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2NN_SetMontage(self, montage)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2NN_SetReleaseDataBeforeUpdateFlag(self, flag)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageSS2
        GetOutput(self) -> itkImageSS2
        GetOutput(self, idx) -> itkImageSS2

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2NN_GetOutput(self, *args)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize2

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2NN_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageSS2 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize2
        image: itkImageSS2 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize2
        imageFilename: std::string const &

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2NN_SetInputTile(self, *args)

    def SetTileTransform(self, position, transform):
        r"""
        SetTileTransform(self, position, transform)

        Parameters
        ----------
        position: itkSize2
        transform: itkTranslationTransformD2 const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2NN_SetTileTransform(self, position, transform)

    def SetBackground(self, _arg):
        r"""
        SetBackground(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2NN_SetBackground(self, _arg)

    def GetBackground(self):
        r"""GetBackground(self) -> short"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2NN_GetBackground(self)

    def SetCropToFill(self, _arg):
        r"""
        SetCropToFill(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2NN_SetCropToFill(self, _arg)

    def GetCropToFill(self):
        r"""GetCropToFill(self) -> bool"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2NN_GetCropToFill(self)

    def CropToFillOn(self):
        r"""CropToFillOn(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2NN_CropToFillOn(self)

    def CropToFillOff(self):
        r"""CropToFillOff(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2NN_CropToFillOff(self)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterISS2NN

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMergeImageFilterISS2NN

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2NN_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterISS2NN

        Create a new object of the class itkTileMergeImageFilterISS2NN and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterISS2NN.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterISS2NN.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterISS2NN.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterISS2NN in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2NN_swigregister(itkTileMergeImageFilterISS2NN)

def itkTileMergeImageFilterISS3L_New():
    return itkTileMergeImageFilterISS3L.New()

class itkTileMergeImageFilterISS3L(itk.itkTileMontagePython.itkTileMontageISS3D):
    r"""Proxy of C++ itkTileMergeImageFilterISS3L class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMergeImageFilterISS3L_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3L___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMergeImageFilterISS3L_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3L_Clone(self)

    def SetMontage(self, montage):
        r"""
        SetMontage(self, montage)

        Parameters
        ----------
        montage: itkTileMontageISS3D const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3L_SetMontage(self, montage)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3L_SetReleaseDataBeforeUpdateFlag(self, flag)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageSS3
        GetOutput(self) -> itkImageSS3
        GetOutput(self, idx) -> itkImageSS3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3L_GetOutput(self, *args)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize3

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3L_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageSS3 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize3
        image: itkImageSS3 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize3
        imageFilename: std::string const &

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3L_SetInputTile(self, *args)

    def SetTileTransform(self, position, transform):
        r"""
        SetTileTransform(self, position, transform)

        Parameters
        ----------
        position: itkSize3
        transform: itkTranslationTransformD3 const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3L_SetTileTransform(self, position, transform)

    def SetBackground(self, _arg):
        r"""
        SetBackground(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3L_SetBackground(self, _arg)

    def GetBackground(self):
        r"""GetBackground(self) -> short"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3L_GetBackground(self)

    def SetCropToFill(self, _arg):
        r"""
        SetCropToFill(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3L_SetCropToFill(self, _arg)

    def GetCropToFill(self):
        r"""GetCropToFill(self) -> bool"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3L_GetCropToFill(self)

    def CropToFillOn(self):
        r"""CropToFillOn(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3L_CropToFillOn(self)

    def CropToFillOff(self):
        r"""CropToFillOff(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3L_CropToFillOff(self)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterISS3L

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMergeImageFilterISS3L

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3L_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterISS3L

        Create a new object of the class itkTileMergeImageFilterISS3L and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterISS3L.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterISS3L.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterISS3L.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterISS3L in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3L_swigregister(itkTileMergeImageFilterISS3L)

def itkTileMergeImageFilterISS3NN_New():
    return itkTileMergeImageFilterISS3NN.New()

class itkTileMergeImageFilterISS3NN(itk.itkTileMontagePython.itkTileMontageISS3D):
    r"""Proxy of C++ itkTileMergeImageFilterISS3NN class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMergeImageFilterISS3NN_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3NN___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMergeImageFilterISS3NN_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3NN_Clone(self)

    def SetMontage(self, montage):
        r"""
        SetMontage(self, montage)

        Parameters
        ----------
        montage: itkTileMontageISS3D const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3NN_SetMontage(self, montage)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3NN_SetReleaseDataBeforeUpdateFlag(self, flag)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageSS3
        GetOutput(self) -> itkImageSS3
        GetOutput(self, idx) -> itkImageSS3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3NN_GetOutput(self, *args)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize3

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3NN_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageSS3 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize3
        image: itkImageSS3 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize3
        imageFilename: std::string const &

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3NN_SetInputTile(self, *args)

    def SetTileTransform(self, position, transform):
        r"""
        SetTileTransform(self, position, transform)

        Parameters
        ----------
        position: itkSize3
        transform: itkTranslationTransformD3 const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3NN_SetTileTransform(self, position, transform)

    def SetBackground(self, _arg):
        r"""
        SetBackground(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3NN_SetBackground(self, _arg)

    def GetBackground(self):
        r"""GetBackground(self) -> short"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3NN_GetBackground(self)

    def SetCropToFill(self, _arg):
        r"""
        SetCropToFill(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3NN_SetCropToFill(self, _arg)

    def GetCropToFill(self):
        r"""GetCropToFill(self) -> bool"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3NN_GetCropToFill(self)

    def CropToFillOn(self):
        r"""CropToFillOn(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3NN_CropToFillOn(self)

    def CropToFillOff(self):
        r"""CropToFillOff(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3NN_CropToFillOff(self)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterISS3NN

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMergeImageFilterISS3NN

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3NN_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterISS3NN

        Create a new object of the class itkTileMergeImageFilterISS3NN and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterISS3NN.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterISS3NN.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterISS3NN.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterISS3NN in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3NN_swigregister(itkTileMergeImageFilterISS3NN)

def itkTileMergeImageFilterISS4L_New():
    return itkTileMergeImageFilterISS4L.New()

class itkTileMergeImageFilterISS4L(itk.itkTileMontagePython.itkTileMontageISS4D):
    r"""Proxy of C++ itkTileMergeImageFilterISS4L class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMergeImageFilterISS4L_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4L___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMergeImageFilterISS4L_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4L_Clone(self)

    def SetMontage(self, montage):
        r"""
        SetMontage(self, montage)

        Parameters
        ----------
        montage: itkTileMontageISS4D const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4L_SetMontage(self, montage)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4L_SetReleaseDataBeforeUpdateFlag(self, flag)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageSS4
        GetOutput(self) -> itkImageSS4
        GetOutput(self, idx) -> itkImageSS4

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4L_GetOutput(self, *args)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize4

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4L_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageSS4 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize4
        image: itkImageSS4 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize4
        imageFilename: std::string const &

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4L_SetInputTile(self, *args)

    def SetTileTransform(self, position, transform):
        r"""
        SetTileTransform(self, position, transform)

        Parameters
        ----------
        position: itkSize4
        transform: itkTranslationTransformD4 const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4L_SetTileTransform(self, position, transform)

    def SetBackground(self, _arg):
        r"""
        SetBackground(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4L_SetBackground(self, _arg)

    def GetBackground(self):
        r"""GetBackground(self) -> short"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4L_GetBackground(self)

    def SetCropToFill(self, _arg):
        r"""
        SetCropToFill(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4L_SetCropToFill(self, _arg)

    def GetCropToFill(self):
        r"""GetCropToFill(self) -> bool"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4L_GetCropToFill(self)

    def CropToFillOn(self):
        r"""CropToFillOn(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4L_CropToFillOn(self)

    def CropToFillOff(self):
        r"""CropToFillOff(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4L_CropToFillOff(self)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterISS4L

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMergeImageFilterISS4L

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4L_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterISS4L

        Create a new object of the class itkTileMergeImageFilterISS4L and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterISS4L.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterISS4L.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterISS4L.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterISS4L in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4L_swigregister(itkTileMergeImageFilterISS4L)

def itkTileMergeImageFilterISS4NN_New():
    return itkTileMergeImageFilterISS4NN.New()

class itkTileMergeImageFilterISS4NN(itk.itkTileMontagePython.itkTileMontageISS4D):
    r"""Proxy of C++ itkTileMergeImageFilterISS4NN class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMergeImageFilterISS4NN_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4NN___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMergeImageFilterISS4NN_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4NN_Clone(self)

    def SetMontage(self, montage):
        r"""
        SetMontage(self, montage)

        Parameters
        ----------
        montage: itkTileMontageISS4D const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4NN_SetMontage(self, montage)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4NN_SetReleaseDataBeforeUpdateFlag(self, flag)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageSS4
        GetOutput(self) -> itkImageSS4
        GetOutput(self, idx) -> itkImageSS4

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4NN_GetOutput(self, *args)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize4

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4NN_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageSS4 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize4
        image: itkImageSS4 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize4
        imageFilename: std::string const &

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4NN_SetInputTile(self, *args)

    def SetTileTransform(self, position, transform):
        r"""
        SetTileTransform(self, position, transform)

        Parameters
        ----------
        position: itkSize4
        transform: itkTranslationTransformD4 const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4NN_SetTileTransform(self, position, transform)

    def SetBackground(self, _arg):
        r"""
        SetBackground(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4NN_SetBackground(self, _arg)

    def GetBackground(self):
        r"""GetBackground(self) -> short"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4NN_GetBackground(self)

    def SetCropToFill(self, _arg):
        r"""
        SetCropToFill(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4NN_SetCropToFill(self, _arg)

    def GetCropToFill(self):
        r"""GetCropToFill(self) -> bool"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4NN_GetCropToFill(self)

    def CropToFillOn(self):
        r"""CropToFillOn(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4NN_CropToFillOn(self)

    def CropToFillOff(self):
        r"""CropToFillOff(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4NN_CropToFillOff(self)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterISS4NN

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMergeImageFilterISS4NN

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4NN_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterISS4NN

        Create a new object of the class itkTileMergeImageFilterISS4NN and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterISS4NN.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterISS4NN.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterISS4NN.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterISS4NN in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4NN_swigregister(itkTileMergeImageFilterISS4NN)

def itkTileMergeImageFilterIUC2L_New():
    return itkTileMergeImageFilterIUC2L.New()

class itkTileMergeImageFilterIUC2L(itk.itkTileMontagePython.itkTileMontageIUC2D):
    r"""Proxy of C++ itkTileMergeImageFilterIUC2L class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMergeImageFilterIUC2L_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2L___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMergeImageFilterIUC2L_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2L_Clone(self)

    def SetMontage(self, montage):
        r"""
        SetMontage(self, montage)

        Parameters
        ----------
        montage: itkTileMontageIUC2D const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2L_SetMontage(self, montage)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2L_SetReleaseDataBeforeUpdateFlag(self, flag)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageUC2
        GetOutput(self) -> itkImageUC2
        GetOutput(self, idx) -> itkImageUC2

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2L_GetOutput(self, *args)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize2

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2L_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageUC2 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize2
        image: itkImageUC2 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize2
        imageFilename: std::string const &

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2L_SetInputTile(self, *args)

    def SetTileTransform(self, position, transform):
        r"""
        SetTileTransform(self, position, transform)

        Parameters
        ----------
        position: itkSize2
        transform: itkTranslationTransformD2 const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2L_SetTileTransform(self, position, transform)

    def SetBackground(self, _arg):
        r"""
        SetBackground(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2L_SetBackground(self, _arg)

    def GetBackground(self):
        r"""GetBackground(self) -> unsigned char"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2L_GetBackground(self)

    def SetCropToFill(self, _arg):
        r"""
        SetCropToFill(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2L_SetCropToFill(self, _arg)

    def GetCropToFill(self):
        r"""GetCropToFill(self) -> bool"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2L_GetCropToFill(self)

    def CropToFillOn(self):
        r"""CropToFillOn(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2L_CropToFillOn(self)

    def CropToFillOff(self):
        r"""CropToFillOff(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2L_CropToFillOff(self)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterIUC2L

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMergeImageFilterIUC2L

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2L_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterIUC2L

        Create a new object of the class itkTileMergeImageFilterIUC2L and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterIUC2L.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterIUC2L.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterIUC2L.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterIUC2L in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2L_swigregister(itkTileMergeImageFilterIUC2L)

def itkTileMergeImageFilterIUC2NN_New():
    return itkTileMergeImageFilterIUC2NN.New()

class itkTileMergeImageFilterIUC2NN(itk.itkTileMontagePython.itkTileMontageIUC2D):
    r"""Proxy of C++ itkTileMergeImageFilterIUC2NN class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMergeImageFilterIUC2NN_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2NN___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMergeImageFilterIUC2NN_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2NN_Clone(self)

    def SetMontage(self, montage):
        r"""
        SetMontage(self, montage)

        Parameters
        ----------
        montage: itkTileMontageIUC2D const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2NN_SetMontage(self, montage)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2NN_SetReleaseDataBeforeUpdateFlag(self, flag)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageUC2
        GetOutput(self) -> itkImageUC2
        GetOutput(self, idx) -> itkImageUC2

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2NN_GetOutput(self, *args)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize2

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2NN_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageUC2 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize2
        image: itkImageUC2 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize2
        imageFilename: std::string const &

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2NN_SetInputTile(self, *args)

    def SetTileTransform(self, position, transform):
        r"""
        SetTileTransform(self, position, transform)

        Parameters
        ----------
        position: itkSize2
        transform: itkTranslationTransformD2 const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2NN_SetTileTransform(self, position, transform)

    def SetBackground(self, _arg):
        r"""
        SetBackground(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2NN_SetBackground(self, _arg)

    def GetBackground(self):
        r"""GetBackground(self) -> unsigned char"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2NN_GetBackground(self)

    def SetCropToFill(self, _arg):
        r"""
        SetCropToFill(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2NN_SetCropToFill(self, _arg)

    def GetCropToFill(self):
        r"""GetCropToFill(self) -> bool"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2NN_GetCropToFill(self)

    def CropToFillOn(self):
        r"""CropToFillOn(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2NN_CropToFillOn(self)

    def CropToFillOff(self):
        r"""CropToFillOff(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2NN_CropToFillOff(self)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterIUC2NN

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMergeImageFilterIUC2NN

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2NN_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterIUC2NN

        Create a new object of the class itkTileMergeImageFilterIUC2NN and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterIUC2NN.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterIUC2NN.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterIUC2NN.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterIUC2NN in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2NN_swigregister(itkTileMergeImageFilterIUC2NN)

def itkTileMergeImageFilterIUC3L_New():
    return itkTileMergeImageFilterIUC3L.New()

class itkTileMergeImageFilterIUC3L(itk.itkTileMontagePython.itkTileMontageIUC3D):
    r"""Proxy of C++ itkTileMergeImageFilterIUC3L class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMergeImageFilterIUC3L_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3L___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMergeImageFilterIUC3L_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3L_Clone(self)

    def SetMontage(self, montage):
        r"""
        SetMontage(self, montage)

        Parameters
        ----------
        montage: itkTileMontageIUC3D const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3L_SetMontage(self, montage)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3L_SetReleaseDataBeforeUpdateFlag(self, flag)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageUC3
        GetOutput(self) -> itkImageUC3
        GetOutput(self, idx) -> itkImageUC3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3L_GetOutput(self, *args)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize3

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3L_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageUC3 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize3
        image: itkImageUC3 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize3
        imageFilename: std::string const &

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3L_SetInputTile(self, *args)

    def SetTileTransform(self, position, transform):
        r"""
        SetTileTransform(self, position, transform)

        Parameters
        ----------
        position: itkSize3
        transform: itkTranslationTransformD3 const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3L_SetTileTransform(self, position, transform)

    def SetBackground(self, _arg):
        r"""
        SetBackground(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3L_SetBackground(self, _arg)

    def GetBackground(self):
        r"""GetBackground(self) -> unsigned char"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3L_GetBackground(self)

    def SetCropToFill(self, _arg):
        r"""
        SetCropToFill(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3L_SetCropToFill(self, _arg)

    def GetCropToFill(self):
        r"""GetCropToFill(self) -> bool"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3L_GetCropToFill(self)

    def CropToFillOn(self):
        r"""CropToFillOn(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3L_CropToFillOn(self)

    def CropToFillOff(self):
        r"""CropToFillOff(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3L_CropToFillOff(self)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterIUC3L

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMergeImageFilterIUC3L

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3L_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterIUC3L

        Create a new object of the class itkTileMergeImageFilterIUC3L and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterIUC3L.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterIUC3L.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterIUC3L.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterIUC3L in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3L_swigregister(itkTileMergeImageFilterIUC3L)

def itkTileMergeImageFilterIUC3NN_New():
    return itkTileMergeImageFilterIUC3NN.New()

class itkTileMergeImageFilterIUC3NN(itk.itkTileMontagePython.itkTileMontageIUC3D):
    r"""Proxy of C++ itkTileMergeImageFilterIUC3NN class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMergeImageFilterIUC3NN_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3NN___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMergeImageFilterIUC3NN_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3NN_Clone(self)

    def SetMontage(self, montage):
        r"""
        SetMontage(self, montage)

        Parameters
        ----------
        montage: itkTileMontageIUC3D const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3NN_SetMontage(self, montage)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3NN_SetReleaseDataBeforeUpdateFlag(self, flag)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageUC3
        GetOutput(self) -> itkImageUC3
        GetOutput(self, idx) -> itkImageUC3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3NN_GetOutput(self, *args)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize3

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3NN_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageUC3 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize3
        image: itkImageUC3 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize3
        imageFilename: std::string const &

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3NN_SetInputTile(self, *args)

    def SetTileTransform(self, position, transform):
        r"""
        SetTileTransform(self, position, transform)

        Parameters
        ----------
        position: itkSize3
        transform: itkTranslationTransformD3 const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3NN_SetTileTransform(self, position, transform)

    def SetBackground(self, _arg):
        r"""
        SetBackground(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3NN_SetBackground(self, _arg)

    def GetBackground(self):
        r"""GetBackground(self) -> unsigned char"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3NN_GetBackground(self)

    def SetCropToFill(self, _arg):
        r"""
        SetCropToFill(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3NN_SetCropToFill(self, _arg)

    def GetCropToFill(self):
        r"""GetCropToFill(self) -> bool"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3NN_GetCropToFill(self)

    def CropToFillOn(self):
        r"""CropToFillOn(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3NN_CropToFillOn(self)

    def CropToFillOff(self):
        r"""CropToFillOff(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3NN_CropToFillOff(self)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterIUC3NN

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMergeImageFilterIUC3NN

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3NN_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterIUC3NN

        Create a new object of the class itkTileMergeImageFilterIUC3NN and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterIUC3NN.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterIUC3NN.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterIUC3NN.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterIUC3NN in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3NN_swigregister(itkTileMergeImageFilterIUC3NN)

def itkTileMergeImageFilterIUC4L_New():
    return itkTileMergeImageFilterIUC4L.New()

class itkTileMergeImageFilterIUC4L(itk.itkTileMontagePython.itkTileMontageIUC4D):
    r"""Proxy of C++ itkTileMergeImageFilterIUC4L class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMergeImageFilterIUC4L_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4L___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMergeImageFilterIUC4L_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4L_Clone(self)

    def SetMontage(self, montage):
        r"""
        SetMontage(self, montage)

        Parameters
        ----------
        montage: itkTileMontageIUC4D const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4L_SetMontage(self, montage)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4L_SetReleaseDataBeforeUpdateFlag(self, flag)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageUC4
        GetOutput(self) -> itkImageUC4
        GetOutput(self, idx) -> itkImageUC4

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4L_GetOutput(self, *args)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize4

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4L_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageUC4 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize4
        image: itkImageUC4 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize4
        imageFilename: std::string const &

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4L_SetInputTile(self, *args)

    def SetTileTransform(self, position, transform):
        r"""
        SetTileTransform(self, position, transform)

        Parameters
        ----------
        position: itkSize4
        transform: itkTranslationTransformD4 const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4L_SetTileTransform(self, position, transform)

    def SetBackground(self, _arg):
        r"""
        SetBackground(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4L_SetBackground(self, _arg)

    def GetBackground(self):
        r"""GetBackground(self) -> unsigned char"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4L_GetBackground(self)

    def SetCropToFill(self, _arg):
        r"""
        SetCropToFill(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4L_SetCropToFill(self, _arg)

    def GetCropToFill(self):
        r"""GetCropToFill(self) -> bool"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4L_GetCropToFill(self)

    def CropToFillOn(self):
        r"""CropToFillOn(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4L_CropToFillOn(self)

    def CropToFillOff(self):
        r"""CropToFillOff(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4L_CropToFillOff(self)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterIUC4L

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMergeImageFilterIUC4L

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4L_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterIUC4L

        Create a new object of the class itkTileMergeImageFilterIUC4L and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterIUC4L.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterIUC4L.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterIUC4L.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterIUC4L in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4L_swigregister(itkTileMergeImageFilterIUC4L)

def itkTileMergeImageFilterIUC4NN_New():
    return itkTileMergeImageFilterIUC4NN.New()

class itkTileMergeImageFilterIUC4NN(itk.itkTileMontagePython.itkTileMontageIUC4D):
    r"""Proxy of C++ itkTileMergeImageFilterIUC4NN class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMergeImageFilterIUC4NN_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4NN___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMergeImageFilterIUC4NN_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4NN_Clone(self)

    def SetMontage(self, montage):
        r"""
        SetMontage(self, montage)

        Parameters
        ----------
        montage: itkTileMontageIUC4D const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4NN_SetMontage(self, montage)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4NN_SetReleaseDataBeforeUpdateFlag(self, flag)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageUC4
        GetOutput(self) -> itkImageUC4
        GetOutput(self, idx) -> itkImageUC4

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4NN_GetOutput(self, *args)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize4

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4NN_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageUC4 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize4
        image: itkImageUC4 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize4
        imageFilename: std::string const &

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4NN_SetInputTile(self, *args)

    def SetTileTransform(self, position, transform):
        r"""
        SetTileTransform(self, position, transform)

        Parameters
        ----------
        position: itkSize4
        transform: itkTranslationTransformD4 const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4NN_SetTileTransform(self, position, transform)

    def SetBackground(self, _arg):
        r"""
        SetBackground(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4NN_SetBackground(self, _arg)

    def GetBackground(self):
        r"""GetBackground(self) -> unsigned char"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4NN_GetBackground(self)

    def SetCropToFill(self, _arg):
        r"""
        SetCropToFill(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4NN_SetCropToFill(self, _arg)

    def GetCropToFill(self):
        r"""GetCropToFill(self) -> bool"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4NN_GetCropToFill(self)

    def CropToFillOn(self):
        r"""CropToFillOn(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4NN_CropToFillOn(self)

    def CropToFillOff(self):
        r"""CropToFillOff(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4NN_CropToFillOff(self)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterIUC4NN

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMergeImageFilterIUC4NN

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4NN_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterIUC4NN

        Create a new object of the class itkTileMergeImageFilterIUC4NN and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterIUC4NN.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterIUC4NN.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterIUC4NN.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterIUC4NN in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4NN_swigregister(itkTileMergeImageFilterIUC4NN)

def itkTileMergeImageFilterIUS2L_New():
    return itkTileMergeImageFilterIUS2L.New()

class itkTileMergeImageFilterIUS2L(itk.itkTileMontagePython.itkTileMontageIUS2D):
    r"""Proxy of C++ itkTileMergeImageFilterIUS2L class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMergeImageFilterIUS2L_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2L___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMergeImageFilterIUS2L_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2L_Clone(self)

    def SetMontage(self, montage):
        r"""
        SetMontage(self, montage)

        Parameters
        ----------
        montage: itkTileMontageIUS2D const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2L_SetMontage(self, montage)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2L_SetReleaseDataBeforeUpdateFlag(self, flag)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageUS2
        GetOutput(self) -> itkImageUS2
        GetOutput(self, idx) -> itkImageUS2

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2L_GetOutput(self, *args)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize2

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2L_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageUS2 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize2
        image: itkImageUS2 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize2
        imageFilename: std::string const &

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2L_SetInputTile(self, *args)

    def SetTileTransform(self, position, transform):
        r"""
        SetTileTransform(self, position, transform)

        Parameters
        ----------
        position: itkSize2
        transform: itkTranslationTransformD2 const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2L_SetTileTransform(self, position, transform)

    def SetBackground(self, _arg):
        r"""
        SetBackground(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2L_SetBackground(self, _arg)

    def GetBackground(self):
        r"""GetBackground(self) -> unsigned short"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2L_GetBackground(self)

    def SetCropToFill(self, _arg):
        r"""
        SetCropToFill(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2L_SetCropToFill(self, _arg)

    def GetCropToFill(self):
        r"""GetCropToFill(self) -> bool"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2L_GetCropToFill(self)

    def CropToFillOn(self):
        r"""CropToFillOn(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2L_CropToFillOn(self)

    def CropToFillOff(self):
        r"""CropToFillOff(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2L_CropToFillOff(self)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterIUS2L

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMergeImageFilterIUS2L

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2L_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterIUS2L

        Create a new object of the class itkTileMergeImageFilterIUS2L and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterIUS2L.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterIUS2L.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterIUS2L.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterIUS2L in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2L_swigregister(itkTileMergeImageFilterIUS2L)

def itkTileMergeImageFilterIUS2NN_New():
    return itkTileMergeImageFilterIUS2NN.New()

class itkTileMergeImageFilterIUS2NN(itk.itkTileMontagePython.itkTileMontageIUS2D):
    r"""Proxy of C++ itkTileMergeImageFilterIUS2NN class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMergeImageFilterIUS2NN_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2NN___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMergeImageFilterIUS2NN_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2NN_Clone(self)

    def SetMontage(self, montage):
        r"""
        SetMontage(self, montage)

        Parameters
        ----------
        montage: itkTileMontageIUS2D const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2NN_SetMontage(self, montage)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2NN_SetReleaseDataBeforeUpdateFlag(self, flag)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageUS2
        GetOutput(self) -> itkImageUS2
        GetOutput(self, idx) -> itkImageUS2

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2NN_GetOutput(self, *args)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize2

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2NN_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageUS2 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize2
        image: itkImageUS2 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize2
        imageFilename: std::string const &

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2NN_SetInputTile(self, *args)

    def SetTileTransform(self, position, transform):
        r"""
        SetTileTransform(self, position, transform)

        Parameters
        ----------
        position: itkSize2
        transform: itkTranslationTransformD2 const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2NN_SetTileTransform(self, position, transform)

    def SetBackground(self, _arg):
        r"""
        SetBackground(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2NN_SetBackground(self, _arg)

    def GetBackground(self):
        r"""GetBackground(self) -> unsigned short"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2NN_GetBackground(self)

    def SetCropToFill(self, _arg):
        r"""
        SetCropToFill(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2NN_SetCropToFill(self, _arg)

    def GetCropToFill(self):
        r"""GetCropToFill(self) -> bool"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2NN_GetCropToFill(self)

    def CropToFillOn(self):
        r"""CropToFillOn(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2NN_CropToFillOn(self)

    def CropToFillOff(self):
        r"""CropToFillOff(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2NN_CropToFillOff(self)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterIUS2NN

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMergeImageFilterIUS2NN

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2NN_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterIUS2NN

        Create a new object of the class itkTileMergeImageFilterIUS2NN and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterIUS2NN.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterIUS2NN.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterIUS2NN.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterIUS2NN in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2NN_swigregister(itkTileMergeImageFilterIUS2NN)

def itkTileMergeImageFilterIUS3L_New():
    return itkTileMergeImageFilterIUS3L.New()

class itkTileMergeImageFilterIUS3L(itk.itkTileMontagePython.itkTileMontageIUS3D):
    r"""Proxy of C++ itkTileMergeImageFilterIUS3L class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMergeImageFilterIUS3L_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3L___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMergeImageFilterIUS3L_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3L_Clone(self)

    def SetMontage(self, montage):
        r"""
        SetMontage(self, montage)

        Parameters
        ----------
        montage: itkTileMontageIUS3D const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3L_SetMontage(self, montage)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3L_SetReleaseDataBeforeUpdateFlag(self, flag)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageUS3
        GetOutput(self) -> itkImageUS3
        GetOutput(self, idx) -> itkImageUS3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3L_GetOutput(self, *args)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize3

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3L_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageUS3 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize3
        image: itkImageUS3 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize3
        imageFilename: std::string const &

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3L_SetInputTile(self, *args)

    def SetTileTransform(self, position, transform):
        r"""
        SetTileTransform(self, position, transform)

        Parameters
        ----------
        position: itkSize3
        transform: itkTranslationTransformD3 const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3L_SetTileTransform(self, position, transform)

    def SetBackground(self, _arg):
        r"""
        SetBackground(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3L_SetBackground(self, _arg)

    def GetBackground(self):
        r"""GetBackground(self) -> unsigned short"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3L_GetBackground(self)

    def SetCropToFill(self, _arg):
        r"""
        SetCropToFill(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3L_SetCropToFill(self, _arg)

    def GetCropToFill(self):
        r"""GetCropToFill(self) -> bool"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3L_GetCropToFill(self)

    def CropToFillOn(self):
        r"""CropToFillOn(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3L_CropToFillOn(self)

    def CropToFillOff(self):
        r"""CropToFillOff(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3L_CropToFillOff(self)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterIUS3L

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMergeImageFilterIUS3L

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3L_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterIUS3L

        Create a new object of the class itkTileMergeImageFilterIUS3L and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterIUS3L.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterIUS3L.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterIUS3L.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterIUS3L in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3L_swigregister(itkTileMergeImageFilterIUS3L)

def itkTileMergeImageFilterIUS3NN_New():
    return itkTileMergeImageFilterIUS3NN.New()

class itkTileMergeImageFilterIUS3NN(itk.itkTileMontagePython.itkTileMontageIUS3D):
    r"""Proxy of C++ itkTileMergeImageFilterIUS3NN class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMergeImageFilterIUS3NN_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3NN___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMergeImageFilterIUS3NN_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3NN_Clone(self)

    def SetMontage(self, montage):
        r"""
        SetMontage(self, montage)

        Parameters
        ----------
        montage: itkTileMontageIUS3D const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3NN_SetMontage(self, montage)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3NN_SetReleaseDataBeforeUpdateFlag(self, flag)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageUS3
        GetOutput(self) -> itkImageUS3
        GetOutput(self, idx) -> itkImageUS3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3NN_GetOutput(self, *args)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize3

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3NN_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageUS3 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize3
        image: itkImageUS3 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize3
        imageFilename: std::string const &

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3NN_SetInputTile(self, *args)

    def SetTileTransform(self, position, transform):
        r"""
        SetTileTransform(self, position, transform)

        Parameters
        ----------
        position: itkSize3
        transform: itkTranslationTransformD3 const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3NN_SetTileTransform(self, position, transform)

    def SetBackground(self, _arg):
        r"""
        SetBackground(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3NN_SetBackground(self, _arg)

    def GetBackground(self):
        r"""GetBackground(self) -> unsigned short"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3NN_GetBackground(self)

    def SetCropToFill(self, _arg):
        r"""
        SetCropToFill(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3NN_SetCropToFill(self, _arg)

    def GetCropToFill(self):
        r"""GetCropToFill(self) -> bool"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3NN_GetCropToFill(self)

    def CropToFillOn(self):
        r"""CropToFillOn(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3NN_CropToFillOn(self)

    def CropToFillOff(self):
        r"""CropToFillOff(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3NN_CropToFillOff(self)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterIUS3NN

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMergeImageFilterIUS3NN

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3NN_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterIUS3NN

        Create a new object of the class itkTileMergeImageFilterIUS3NN and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterIUS3NN.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterIUS3NN.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterIUS3NN.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterIUS3NN in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3NN_swigregister(itkTileMergeImageFilterIUS3NN)

def itkTileMergeImageFilterIUS4L_New():
    return itkTileMergeImageFilterIUS4L.New()

class itkTileMergeImageFilterIUS4L(itk.itkTileMontagePython.itkTileMontageIUS4D):
    r"""Proxy of C++ itkTileMergeImageFilterIUS4L class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMergeImageFilterIUS4L_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4L___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMergeImageFilterIUS4L_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4L_Clone(self)

    def SetMontage(self, montage):
        r"""
        SetMontage(self, montage)

        Parameters
        ----------
        montage: itkTileMontageIUS4D const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4L_SetMontage(self, montage)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4L_SetReleaseDataBeforeUpdateFlag(self, flag)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageUS4
        GetOutput(self) -> itkImageUS4
        GetOutput(self, idx) -> itkImageUS4

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4L_GetOutput(self, *args)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize4

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4L_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageUS4 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize4
        image: itkImageUS4 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize4
        imageFilename: std::string const &

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4L_SetInputTile(self, *args)

    def SetTileTransform(self, position, transform):
        r"""
        SetTileTransform(self, position, transform)

        Parameters
        ----------
        position: itkSize4
        transform: itkTranslationTransformD4 const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4L_SetTileTransform(self, position, transform)

    def SetBackground(self, _arg):
        r"""
        SetBackground(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4L_SetBackground(self, _arg)

    def GetBackground(self):
        r"""GetBackground(self) -> unsigned short"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4L_GetBackground(self)

    def SetCropToFill(self, _arg):
        r"""
        SetCropToFill(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4L_SetCropToFill(self, _arg)

    def GetCropToFill(self):
        r"""GetCropToFill(self) -> bool"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4L_GetCropToFill(self)

    def CropToFillOn(self):
        r"""CropToFillOn(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4L_CropToFillOn(self)

    def CropToFillOff(self):
        r"""CropToFillOff(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4L_CropToFillOff(self)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterIUS4L

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMergeImageFilterIUS4L

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4L_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterIUS4L

        Create a new object of the class itkTileMergeImageFilterIUS4L and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterIUS4L.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterIUS4L.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterIUS4L.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterIUS4L in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4L_swigregister(itkTileMergeImageFilterIUS4L)

def itkTileMergeImageFilterIUS4NN_New():
    return itkTileMergeImageFilterIUS4NN.New()

class itkTileMergeImageFilterIUS4NN(itk.itkTileMontagePython.itkTileMontageIUS4D):
    r"""Proxy of C++ itkTileMergeImageFilterIUS4NN class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMergeImageFilterIUS4NN_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4NN___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMergeImageFilterIUS4NN_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4NN_Clone(self)

    def SetMontage(self, montage):
        r"""
        SetMontage(self, montage)

        Parameters
        ----------
        montage: itkTileMontageIUS4D const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4NN_SetMontage(self, montage)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4NN_SetReleaseDataBeforeUpdateFlag(self, flag)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageUS4
        GetOutput(self) -> itkImageUS4
        GetOutput(self, idx) -> itkImageUS4

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4NN_GetOutput(self, *args)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize4

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4NN_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageUS4 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize4
        image: itkImageUS4 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize4
        imageFilename: std::string const &

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4NN_SetInputTile(self, *args)

    def SetTileTransform(self, position, transform):
        r"""
        SetTileTransform(self, position, transform)

        Parameters
        ----------
        position: itkSize4
        transform: itkTranslationTransformD4 const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4NN_SetTileTransform(self, position, transform)

    def SetBackground(self, _arg):
        r"""
        SetBackground(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4NN_SetBackground(self, _arg)

    def GetBackground(self):
        r"""GetBackground(self) -> unsigned short"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4NN_GetBackground(self)

    def SetCropToFill(self, _arg):
        r"""
        SetCropToFill(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4NN_SetCropToFill(self, _arg)

    def GetCropToFill(self):
        r"""GetCropToFill(self) -> bool"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4NN_GetCropToFill(self)

    def CropToFillOn(self):
        r"""CropToFillOn(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4NN_CropToFillOn(self)

    def CropToFillOff(self):
        r"""CropToFillOff(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4NN_CropToFillOff(self)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterIUS4NN

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMergeImageFilterIUS4NN

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4NN_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterIUS4NN

        Create a new object of the class itkTileMergeImageFilterIUS4NN and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterIUS4NN.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterIUS4NN.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterIUS4NN.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterIUS4NN in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4NN_swigregister(itkTileMergeImageFilterIUS4NN)

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def tile_merge_image_filter(*args,  montage=..., release_data_flag: bool=..., release_data_before_update_flag: bool=..., montage_size: Union[Sequence[int], Sequence[int]]=..., input_tile: Union[Sequence[int], Sequence[int], int]=..., tile_transform: Sequence[int]=..., background: int=..., crop_to_fill: bool=..., origin_adjustment: Sequence[float]=..., forced_spacing: Sequence[float]=..., absolute_threshold: float=..., relative_threshold: float=..., position_tolerance: int=..., crop_to_overlap: bool=..., obligatory_padding: Sequence[int]=..., padding_method=..., peak_interpolation_method=...,**kwargs):
    """Functional interface for TileMergeImageFilter"""
    import itk

    kwarg_typehints = { 'montage':montage,'release_data_flag':release_data_flag,'release_data_before_update_flag':release_data_before_update_flag,'montage_size':montage_size,'input_tile':input_tile,'tile_transform':tile_transform,'background':background,'crop_to_fill':crop_to_fill,'origin_adjustment':origin_adjustment,'forced_spacing':forced_spacing,'absolute_threshold':absolute_threshold,'relative_threshold':relative_threshold,'position_tolerance':position_tolerance,'crop_to_overlap':crop_to_overlap,'obligatory_padding':obligatory_padding,'padding_method':padding_method,'peak_interpolation_method':peak_interpolation_method }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.TileMergeImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def tile_merge_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.Montage.TileMergeImageFilter
    tile_merge_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    tile_merge_image_filter.__doc__ = filter_object.__doc__



