# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _MontagePython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkPhaseCorrelationOptimizerPython
else:
    import _itkPhaseCorrelationOptimizerPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkImagePython
import itk.itkRGBPixelPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkRGBAPixelPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkCovariantVectorPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkPhaseCorrelationImageRegistrationMethodPython
import itk.itkTranslationTransformPython
import itk.itkOptimizerParametersPython
import itk.itkArrayPython
import itk.itkArray2DPython
import itk.itkTransformBasePython
import itk.itkDiffusionTensor3DPython
import itk.itkVariableLengthVectorPython
import itk.itkPhaseCorrelationOperatorPython
import itk.itkImageToImageFilterBPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageToImageFilterCommonPython

def itkPhaseCorrelationOptimizerD2_New():
    return itkPhaseCorrelationOptimizerD2.New()

class itkPhaseCorrelationOptimizerD2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkPhaseCorrelationOptimizerD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhaseCorrelationOptimizerD2_Pointer"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhaseCorrelationOptimizerD2_Pointer"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD2_Clone(self)

    def GetOffsets(self):
        r"""GetOffsets(self) -> vectoritkPointD2"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD2_GetOffsets(self)

    def GetConfidences(self):
        r"""GetConfidences(self) -> vectorD"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD2_GetConfidences(self)

    def SetFixedImage(self, image):
        r"""
        SetFixedImage(self, image)

        Parameters
        ----------
        image: itkImageBase2 const *

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD2_SetFixedImage(self, image)

    def SetMovingImage(self, image):
        r"""
        SetMovingImage(self, image)

        Parameters
        ----------
        image: itkImageBase2 const *

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD2_SetMovingImage(self, image)

    def SetRealInput(self, image):
        r"""
        SetRealInput(self, image)

        Parameters
        ----------
        image: itkImageD2 const *

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD2_SetRealInput(self, image)

    def SetComplexInput(self, image):
        r"""
        SetComplexInput(self, image)

        Parameters
        ----------
        image: itkImageCD2 const *

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD2_SetComplexInput(self, image)

    def GetPeakInterpolationMethod(self):
        r"""GetPeakInterpolationMethod(self) -> itkPhaseCorrelationOptimizerEnums::PeakInterpolationMethod"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD2_GetPeakInterpolationMethod(self)

    def SetPeakInterpolationMethod(self, peakInterpolationMethod):
        r"""
        SetPeakInterpolationMethod(self, peakInterpolationMethod)

        Parameters
        ----------
        peakInterpolationMethod: enum itkPhaseCorrelationOptimizerEnums::PeakInterpolationMethod const

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD2_SetPeakInterpolationMethod(self, peakInterpolationMethod)

    def GetOutput(self, index):
        r"""
        GetOutput(self, index) -> itkSimpleDataObjectDecoratorPD2

        Parameters
        ----------
        index: unsigned int

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD2_GetOutput(self, index)

    def SetOffsetCount(self, count):
        r"""
        SetOffsetCount(self, count)

        Parameters
        ----------
        count: unsigned int

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD2_SetOffsetCount(self, count)

    def GetOffsetCount(self):
        r"""GetOffsetCount(self) -> unsigned int"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD2_GetOffsetCount(self)

    def GetMergePeaks(self):
        r"""GetMergePeaks(self) -> unsigned int"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD2_GetMergePeaks(self)

    def SetMergePeaks(self, _arg):
        r"""
        SetMergePeaks(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD2_SetMergePeaks(self, _arg)

    def GetZeroSuppression(self):
        r"""GetZeroSuppression(self) -> double"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD2_GetZeroSuppression(self)

    def SetZeroSuppression(self, _arg):
        r"""
        SetZeroSuppression(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD2_SetZeroSuppression(self, _arg)

    def GetPixelDistanceTolerance(self):
        r"""GetPixelDistanceTolerance(self) -> unsigned long"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD2_GetPixelDistanceTolerance(self)

    def SetPixelDistanceTolerance(self, _arg):
        r"""
        SetPixelDistanceTolerance(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD2_SetPixelDistanceTolerance(self, _arg)

    def GetAdjustedInput(self):
        r"""GetAdjustedInput(self) -> itkImageD2"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD2_GetAdjustedInput(self)

    def GetMaxIndices(self):
        r"""GetMaxIndices(self) -> std::vector< itkIndex2,std::allocator< itkIndex2 > > const &"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD2_GetMaxIndices(self)

    def GetPhaseInterpolated(self):
        r"""GetPhaseInterpolated(self) -> unsigned int"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD2_GetPhaseInterpolated(self)

    def SetPhaseInterpolated(self, _arg):
        r"""
        SetPhaseInterpolated(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD2_SetPhaseInterpolated(self, _arg)
    __swig_destroy__ = _itkPhaseCorrelationOptimizerPython.delete_itkPhaseCorrelationOptimizerD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhaseCorrelationOptimizerD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPhaseCorrelationOptimizerD2

        Create a new object of the class itkPhaseCorrelationOptimizerD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhaseCorrelationOptimizerD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhaseCorrelationOptimizerD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhaseCorrelationOptimizerD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhaseCorrelationOptimizerD2 in _itkPhaseCorrelationOptimizerPython:
_itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD2_swigregister(itkPhaseCorrelationOptimizerD2)

def itkPhaseCorrelationOptimizerD3_New():
    return itkPhaseCorrelationOptimizerD3.New()

class itkPhaseCorrelationOptimizerD3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkPhaseCorrelationOptimizerD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhaseCorrelationOptimizerD3_Pointer"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhaseCorrelationOptimizerD3_Pointer"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD3_Clone(self)

    def GetOffsets(self):
        r"""GetOffsets(self) -> vectoritkPointD3"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD3_GetOffsets(self)

    def GetConfidences(self):
        r"""GetConfidences(self) -> vectorD"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD3_GetConfidences(self)

    def SetFixedImage(self, image):
        r"""
        SetFixedImage(self, image)

        Parameters
        ----------
        image: itkImageBase3 const *

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD3_SetFixedImage(self, image)

    def SetMovingImage(self, image):
        r"""
        SetMovingImage(self, image)

        Parameters
        ----------
        image: itkImageBase3 const *

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD3_SetMovingImage(self, image)

    def SetRealInput(self, image):
        r"""
        SetRealInput(self, image)

        Parameters
        ----------
        image: itkImageD3 const *

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD3_SetRealInput(self, image)

    def SetComplexInput(self, image):
        r"""
        SetComplexInput(self, image)

        Parameters
        ----------
        image: itkImageCD3 const *

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD3_SetComplexInput(self, image)

    def GetPeakInterpolationMethod(self):
        r"""GetPeakInterpolationMethod(self) -> itkPhaseCorrelationOptimizerEnums::PeakInterpolationMethod"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD3_GetPeakInterpolationMethod(self)

    def SetPeakInterpolationMethod(self, peakInterpolationMethod):
        r"""
        SetPeakInterpolationMethod(self, peakInterpolationMethod)

        Parameters
        ----------
        peakInterpolationMethod: enum itkPhaseCorrelationOptimizerEnums::PeakInterpolationMethod const

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD3_SetPeakInterpolationMethod(self, peakInterpolationMethod)

    def GetOutput(self, index):
        r"""
        GetOutput(self, index) -> itkSimpleDataObjectDecoratorPD3

        Parameters
        ----------
        index: unsigned int

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD3_GetOutput(self, index)

    def SetOffsetCount(self, count):
        r"""
        SetOffsetCount(self, count)

        Parameters
        ----------
        count: unsigned int

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD3_SetOffsetCount(self, count)

    def GetOffsetCount(self):
        r"""GetOffsetCount(self) -> unsigned int"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD3_GetOffsetCount(self)

    def GetMergePeaks(self):
        r"""GetMergePeaks(self) -> unsigned int"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD3_GetMergePeaks(self)

    def SetMergePeaks(self, _arg):
        r"""
        SetMergePeaks(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD3_SetMergePeaks(self, _arg)

    def GetZeroSuppression(self):
        r"""GetZeroSuppression(self) -> double"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD3_GetZeroSuppression(self)

    def SetZeroSuppression(self, _arg):
        r"""
        SetZeroSuppression(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD3_SetZeroSuppression(self, _arg)

    def GetPixelDistanceTolerance(self):
        r"""GetPixelDistanceTolerance(self) -> unsigned long"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD3_GetPixelDistanceTolerance(self)

    def SetPixelDistanceTolerance(self, _arg):
        r"""
        SetPixelDistanceTolerance(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD3_SetPixelDistanceTolerance(self, _arg)

    def GetAdjustedInput(self):
        r"""GetAdjustedInput(self) -> itkImageD3"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD3_GetAdjustedInput(self)

    def GetMaxIndices(self):
        r"""GetMaxIndices(self) -> std::vector< itkIndex3,std::allocator< itkIndex3 > > const &"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD3_GetMaxIndices(self)

    def GetPhaseInterpolated(self):
        r"""GetPhaseInterpolated(self) -> unsigned int"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD3_GetPhaseInterpolated(self)

    def SetPhaseInterpolated(self, _arg):
        r"""
        SetPhaseInterpolated(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD3_SetPhaseInterpolated(self, _arg)
    __swig_destroy__ = _itkPhaseCorrelationOptimizerPython.delete_itkPhaseCorrelationOptimizerD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhaseCorrelationOptimizerD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPhaseCorrelationOptimizerD3

        Create a new object of the class itkPhaseCorrelationOptimizerD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhaseCorrelationOptimizerD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhaseCorrelationOptimizerD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhaseCorrelationOptimizerD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhaseCorrelationOptimizerD3 in _itkPhaseCorrelationOptimizerPython:
_itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD3_swigregister(itkPhaseCorrelationOptimizerD3)

def itkPhaseCorrelationOptimizerD4_New():
    return itkPhaseCorrelationOptimizerD4.New()

class itkPhaseCorrelationOptimizerD4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkPhaseCorrelationOptimizerD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhaseCorrelationOptimizerD4_Pointer"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhaseCorrelationOptimizerD4_Pointer"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD4_Clone(self)

    def GetOffsets(self):
        r"""GetOffsets(self) -> vectoritkPointD4"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD4_GetOffsets(self)

    def GetConfidences(self):
        r"""GetConfidences(self) -> vectorD"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD4_GetConfidences(self)

    def SetFixedImage(self, image):
        r"""
        SetFixedImage(self, image)

        Parameters
        ----------
        image: itkImageBase4 const *

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD4_SetFixedImage(self, image)

    def SetMovingImage(self, image):
        r"""
        SetMovingImage(self, image)

        Parameters
        ----------
        image: itkImageBase4 const *

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD4_SetMovingImage(self, image)

    def SetRealInput(self, image):
        r"""
        SetRealInput(self, image)

        Parameters
        ----------
        image: itkImageD4 const *

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD4_SetRealInput(self, image)

    def SetComplexInput(self, image):
        r"""
        SetComplexInput(self, image)

        Parameters
        ----------
        image: itkImageCD4 const *

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD4_SetComplexInput(self, image)

    def GetPeakInterpolationMethod(self):
        r"""GetPeakInterpolationMethod(self) -> itkPhaseCorrelationOptimizerEnums::PeakInterpolationMethod"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD4_GetPeakInterpolationMethod(self)

    def SetPeakInterpolationMethod(self, peakInterpolationMethod):
        r"""
        SetPeakInterpolationMethod(self, peakInterpolationMethod)

        Parameters
        ----------
        peakInterpolationMethod: enum itkPhaseCorrelationOptimizerEnums::PeakInterpolationMethod const

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD4_SetPeakInterpolationMethod(self, peakInterpolationMethod)

    def GetOutput(self, index):
        r"""
        GetOutput(self, index) -> itkSimpleDataObjectDecoratorPD4

        Parameters
        ----------
        index: unsigned int

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD4_GetOutput(self, index)

    def SetOffsetCount(self, count):
        r"""
        SetOffsetCount(self, count)

        Parameters
        ----------
        count: unsigned int

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD4_SetOffsetCount(self, count)

    def GetOffsetCount(self):
        r"""GetOffsetCount(self) -> unsigned int"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD4_GetOffsetCount(self)

    def GetMergePeaks(self):
        r"""GetMergePeaks(self) -> unsigned int"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD4_GetMergePeaks(self)

    def SetMergePeaks(self, _arg):
        r"""
        SetMergePeaks(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD4_SetMergePeaks(self, _arg)

    def GetZeroSuppression(self):
        r"""GetZeroSuppression(self) -> double"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD4_GetZeroSuppression(self)

    def SetZeroSuppression(self, _arg):
        r"""
        SetZeroSuppression(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD4_SetZeroSuppression(self, _arg)

    def GetPixelDistanceTolerance(self):
        r"""GetPixelDistanceTolerance(self) -> unsigned long"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD4_GetPixelDistanceTolerance(self)

    def SetPixelDistanceTolerance(self, _arg):
        r"""
        SetPixelDistanceTolerance(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD4_SetPixelDistanceTolerance(self, _arg)

    def GetAdjustedInput(self):
        r"""GetAdjustedInput(self) -> itkImageD4"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD4_GetAdjustedInput(self)

    def GetMaxIndices(self):
        r"""GetMaxIndices(self) -> std::vector< itkIndex4,std::allocator< itkIndex4 > > const &"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD4_GetMaxIndices(self)

    def GetPhaseInterpolated(self):
        r"""GetPhaseInterpolated(self) -> unsigned int"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD4_GetPhaseInterpolated(self)

    def SetPhaseInterpolated(self, _arg):
        r"""
        SetPhaseInterpolated(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD4_SetPhaseInterpolated(self, _arg)
    __swig_destroy__ = _itkPhaseCorrelationOptimizerPython.delete_itkPhaseCorrelationOptimizerD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhaseCorrelationOptimizerD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPhaseCorrelationOptimizerD4

        Create a new object of the class itkPhaseCorrelationOptimizerD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhaseCorrelationOptimizerD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhaseCorrelationOptimizerD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhaseCorrelationOptimizerD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhaseCorrelationOptimizerD4 in _itkPhaseCorrelationOptimizerPython:
_itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerD4_swigregister(itkPhaseCorrelationOptimizerD4)
class itkPhaseCorrelationOptimizerEnums(object):
    r"""Proxy of C++ itkPhaseCorrelationOptimizerEnums class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    PeakInterpolationMethod__None = _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerEnums_PeakInterpolationMethod__None
    
    PeakInterpolationMethod_Parabolic = _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerEnums_PeakInterpolationMethod_Parabolic
    
    PeakInterpolationMethod_Cosine = _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerEnums_PeakInterpolationMethod_Cosine
    
    PeakInterpolationMethod_WeightedMeanPhase = _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerEnums_PeakInterpolationMethod_WeightedMeanPhase
    

    @staticmethod
    def AllPeakInterpolationMethods():
        r"""AllPeakInterpolationMethods() -> std::initializer_list< itkPhaseCorrelationOptimizerEnums::PeakInterpolationMethod > const"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerEnums_AllPeakInterpolationMethods()

    def __init__(self, *args):
        r"""
        __init__(self) -> itkPhaseCorrelationOptimizerEnums
        __init__(self, arg0) -> itkPhaseCorrelationOptimizerEnums

        Parameters
        ----------
        arg0: itkPhaseCorrelationOptimizerEnums const &

        """
        _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerEnums_swiginit(self, _itkPhaseCorrelationOptimizerPython.new_itkPhaseCorrelationOptimizerEnums(*args))
    __swig_destroy__ = _itkPhaseCorrelationOptimizerPython.delete_itkPhaseCorrelationOptimizerEnums

# Register itkPhaseCorrelationOptimizerEnums in _itkPhaseCorrelationOptimizerPython:
_itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerEnums_swigregister(itkPhaseCorrelationOptimizerEnums)

def itkPhaseCorrelationOptimizerF2_New():
    return itkPhaseCorrelationOptimizerF2.New()

class itkPhaseCorrelationOptimizerF2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkPhaseCorrelationOptimizerF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhaseCorrelationOptimizerF2_Pointer"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhaseCorrelationOptimizerF2_Pointer"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF2_Clone(self)

    def GetOffsets(self):
        r"""GetOffsets(self) -> vectoritkPointD2"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF2_GetOffsets(self)

    def GetConfidences(self):
        r"""GetConfidences(self) -> vectorF"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF2_GetConfidences(self)

    def SetFixedImage(self, image):
        r"""
        SetFixedImage(self, image)

        Parameters
        ----------
        image: itkImageBase2 const *

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF2_SetFixedImage(self, image)

    def SetMovingImage(self, image):
        r"""
        SetMovingImage(self, image)

        Parameters
        ----------
        image: itkImageBase2 const *

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF2_SetMovingImage(self, image)

    def SetRealInput(self, image):
        r"""
        SetRealInput(self, image)

        Parameters
        ----------
        image: itkImageF2 const *

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF2_SetRealInput(self, image)

    def SetComplexInput(self, image):
        r"""
        SetComplexInput(self, image)

        Parameters
        ----------
        image: itkImageCF2 const *

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF2_SetComplexInput(self, image)

    def GetPeakInterpolationMethod(self):
        r"""GetPeakInterpolationMethod(self) -> itkPhaseCorrelationOptimizerEnums::PeakInterpolationMethod"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF2_GetPeakInterpolationMethod(self)

    def SetPeakInterpolationMethod(self, peakInterpolationMethod):
        r"""
        SetPeakInterpolationMethod(self, peakInterpolationMethod)

        Parameters
        ----------
        peakInterpolationMethod: enum itkPhaseCorrelationOptimizerEnums::PeakInterpolationMethod const

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF2_SetPeakInterpolationMethod(self, peakInterpolationMethod)

    def GetOutput(self, index):
        r"""
        GetOutput(self, index) -> itkSimpleDataObjectDecoratorPD2

        Parameters
        ----------
        index: unsigned int

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF2_GetOutput(self, index)

    def SetOffsetCount(self, count):
        r"""
        SetOffsetCount(self, count)

        Parameters
        ----------
        count: unsigned int

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF2_SetOffsetCount(self, count)

    def GetOffsetCount(self):
        r"""GetOffsetCount(self) -> unsigned int"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF2_GetOffsetCount(self)

    def GetMergePeaks(self):
        r"""GetMergePeaks(self) -> unsigned int"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF2_GetMergePeaks(self)

    def SetMergePeaks(self, _arg):
        r"""
        SetMergePeaks(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF2_SetMergePeaks(self, _arg)

    def GetZeroSuppression(self):
        r"""GetZeroSuppression(self) -> double"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF2_GetZeroSuppression(self)

    def SetZeroSuppression(self, _arg):
        r"""
        SetZeroSuppression(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF2_SetZeroSuppression(self, _arg)

    def GetPixelDistanceTolerance(self):
        r"""GetPixelDistanceTolerance(self) -> unsigned long"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF2_GetPixelDistanceTolerance(self)

    def SetPixelDistanceTolerance(self, _arg):
        r"""
        SetPixelDistanceTolerance(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF2_SetPixelDistanceTolerance(self, _arg)

    def GetAdjustedInput(self):
        r"""GetAdjustedInput(self) -> itkImageF2"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF2_GetAdjustedInput(self)

    def GetMaxIndices(self):
        r"""GetMaxIndices(self) -> std::vector< itkIndex2,std::allocator< itkIndex2 > > const &"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF2_GetMaxIndices(self)

    def GetPhaseInterpolated(self):
        r"""GetPhaseInterpolated(self) -> unsigned int"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF2_GetPhaseInterpolated(self)

    def SetPhaseInterpolated(self, _arg):
        r"""
        SetPhaseInterpolated(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF2_SetPhaseInterpolated(self, _arg)
    __swig_destroy__ = _itkPhaseCorrelationOptimizerPython.delete_itkPhaseCorrelationOptimizerF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhaseCorrelationOptimizerF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPhaseCorrelationOptimizerF2

        Create a new object of the class itkPhaseCorrelationOptimizerF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhaseCorrelationOptimizerF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhaseCorrelationOptimizerF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhaseCorrelationOptimizerF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhaseCorrelationOptimizerF2 in _itkPhaseCorrelationOptimizerPython:
_itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF2_swigregister(itkPhaseCorrelationOptimizerF2)

def itkPhaseCorrelationOptimizerF3_New():
    return itkPhaseCorrelationOptimizerF3.New()

class itkPhaseCorrelationOptimizerF3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkPhaseCorrelationOptimizerF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhaseCorrelationOptimizerF3_Pointer"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhaseCorrelationOptimizerF3_Pointer"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF3_Clone(self)

    def GetOffsets(self):
        r"""GetOffsets(self) -> vectoritkPointD3"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF3_GetOffsets(self)

    def GetConfidences(self):
        r"""GetConfidences(self) -> vectorF"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF3_GetConfidences(self)

    def SetFixedImage(self, image):
        r"""
        SetFixedImage(self, image)

        Parameters
        ----------
        image: itkImageBase3 const *

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF3_SetFixedImage(self, image)

    def SetMovingImage(self, image):
        r"""
        SetMovingImage(self, image)

        Parameters
        ----------
        image: itkImageBase3 const *

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF3_SetMovingImage(self, image)

    def SetRealInput(self, image):
        r"""
        SetRealInput(self, image)

        Parameters
        ----------
        image: itkImageF3 const *

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF3_SetRealInput(self, image)

    def SetComplexInput(self, image):
        r"""
        SetComplexInput(self, image)

        Parameters
        ----------
        image: itkImageCF3 const *

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF3_SetComplexInput(self, image)

    def GetPeakInterpolationMethod(self):
        r"""GetPeakInterpolationMethod(self) -> itkPhaseCorrelationOptimizerEnums::PeakInterpolationMethod"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF3_GetPeakInterpolationMethod(self)

    def SetPeakInterpolationMethod(self, peakInterpolationMethod):
        r"""
        SetPeakInterpolationMethod(self, peakInterpolationMethod)

        Parameters
        ----------
        peakInterpolationMethod: enum itkPhaseCorrelationOptimizerEnums::PeakInterpolationMethod const

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF3_SetPeakInterpolationMethod(self, peakInterpolationMethod)

    def GetOutput(self, index):
        r"""
        GetOutput(self, index) -> itkSimpleDataObjectDecoratorPD3

        Parameters
        ----------
        index: unsigned int

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF3_GetOutput(self, index)

    def SetOffsetCount(self, count):
        r"""
        SetOffsetCount(self, count)

        Parameters
        ----------
        count: unsigned int

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF3_SetOffsetCount(self, count)

    def GetOffsetCount(self):
        r"""GetOffsetCount(self) -> unsigned int"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF3_GetOffsetCount(self)

    def GetMergePeaks(self):
        r"""GetMergePeaks(self) -> unsigned int"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF3_GetMergePeaks(self)

    def SetMergePeaks(self, _arg):
        r"""
        SetMergePeaks(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF3_SetMergePeaks(self, _arg)

    def GetZeroSuppression(self):
        r"""GetZeroSuppression(self) -> double"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF3_GetZeroSuppression(self)

    def SetZeroSuppression(self, _arg):
        r"""
        SetZeroSuppression(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF3_SetZeroSuppression(self, _arg)

    def GetPixelDistanceTolerance(self):
        r"""GetPixelDistanceTolerance(self) -> unsigned long"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF3_GetPixelDistanceTolerance(self)

    def SetPixelDistanceTolerance(self, _arg):
        r"""
        SetPixelDistanceTolerance(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF3_SetPixelDistanceTolerance(self, _arg)

    def GetAdjustedInput(self):
        r"""GetAdjustedInput(self) -> itkImageF3"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF3_GetAdjustedInput(self)

    def GetMaxIndices(self):
        r"""GetMaxIndices(self) -> std::vector< itkIndex3,std::allocator< itkIndex3 > > const &"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF3_GetMaxIndices(self)

    def GetPhaseInterpolated(self):
        r"""GetPhaseInterpolated(self) -> unsigned int"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF3_GetPhaseInterpolated(self)

    def SetPhaseInterpolated(self, _arg):
        r"""
        SetPhaseInterpolated(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF3_SetPhaseInterpolated(self, _arg)
    __swig_destroy__ = _itkPhaseCorrelationOptimizerPython.delete_itkPhaseCorrelationOptimizerF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhaseCorrelationOptimizerF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPhaseCorrelationOptimizerF3

        Create a new object of the class itkPhaseCorrelationOptimizerF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhaseCorrelationOptimizerF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhaseCorrelationOptimizerF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhaseCorrelationOptimizerF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhaseCorrelationOptimizerF3 in _itkPhaseCorrelationOptimizerPython:
_itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF3_swigregister(itkPhaseCorrelationOptimizerF3)

def itkPhaseCorrelationOptimizerF4_New():
    return itkPhaseCorrelationOptimizerF4.New()

class itkPhaseCorrelationOptimizerF4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkPhaseCorrelationOptimizerF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhaseCorrelationOptimizerF4_Pointer"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhaseCorrelationOptimizerF4_Pointer"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF4_Clone(self)

    def GetOffsets(self):
        r"""GetOffsets(self) -> vectoritkPointD4"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF4_GetOffsets(self)

    def GetConfidences(self):
        r"""GetConfidences(self) -> vectorF"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF4_GetConfidences(self)

    def SetFixedImage(self, image):
        r"""
        SetFixedImage(self, image)

        Parameters
        ----------
        image: itkImageBase4 const *

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF4_SetFixedImage(self, image)

    def SetMovingImage(self, image):
        r"""
        SetMovingImage(self, image)

        Parameters
        ----------
        image: itkImageBase4 const *

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF4_SetMovingImage(self, image)

    def SetRealInput(self, image):
        r"""
        SetRealInput(self, image)

        Parameters
        ----------
        image: itkImageF4 const *

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF4_SetRealInput(self, image)

    def SetComplexInput(self, image):
        r"""
        SetComplexInput(self, image)

        Parameters
        ----------
        image: itkImageCF4 const *

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF4_SetComplexInput(self, image)

    def GetPeakInterpolationMethod(self):
        r"""GetPeakInterpolationMethod(self) -> itkPhaseCorrelationOptimizerEnums::PeakInterpolationMethod"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF4_GetPeakInterpolationMethod(self)

    def SetPeakInterpolationMethod(self, peakInterpolationMethod):
        r"""
        SetPeakInterpolationMethod(self, peakInterpolationMethod)

        Parameters
        ----------
        peakInterpolationMethod: enum itkPhaseCorrelationOptimizerEnums::PeakInterpolationMethod const

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF4_SetPeakInterpolationMethod(self, peakInterpolationMethod)

    def GetOutput(self, index):
        r"""
        GetOutput(self, index) -> itkSimpleDataObjectDecoratorPD4

        Parameters
        ----------
        index: unsigned int

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF4_GetOutput(self, index)

    def SetOffsetCount(self, count):
        r"""
        SetOffsetCount(self, count)

        Parameters
        ----------
        count: unsigned int

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF4_SetOffsetCount(self, count)

    def GetOffsetCount(self):
        r"""GetOffsetCount(self) -> unsigned int"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF4_GetOffsetCount(self)

    def GetMergePeaks(self):
        r"""GetMergePeaks(self) -> unsigned int"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF4_GetMergePeaks(self)

    def SetMergePeaks(self, _arg):
        r"""
        SetMergePeaks(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF4_SetMergePeaks(self, _arg)

    def GetZeroSuppression(self):
        r"""GetZeroSuppression(self) -> double"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF4_GetZeroSuppression(self)

    def SetZeroSuppression(self, _arg):
        r"""
        SetZeroSuppression(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF4_SetZeroSuppression(self, _arg)

    def GetPixelDistanceTolerance(self):
        r"""GetPixelDistanceTolerance(self) -> unsigned long"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF4_GetPixelDistanceTolerance(self)

    def SetPixelDistanceTolerance(self, _arg):
        r"""
        SetPixelDistanceTolerance(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF4_SetPixelDistanceTolerance(self, _arg)

    def GetAdjustedInput(self):
        r"""GetAdjustedInput(self) -> itkImageF4"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF4_GetAdjustedInput(self)

    def GetMaxIndices(self):
        r"""GetMaxIndices(self) -> std::vector< itkIndex4,std::allocator< itkIndex4 > > const &"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF4_GetMaxIndices(self)

    def GetPhaseInterpolated(self):
        r"""GetPhaseInterpolated(self) -> unsigned int"""
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF4_GetPhaseInterpolated(self)

    def SetPhaseInterpolated(self, _arg):
        r"""
        SetPhaseInterpolated(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF4_SetPhaseInterpolated(self, _arg)
    __swig_destroy__ = _itkPhaseCorrelationOptimizerPython.delete_itkPhaseCorrelationOptimizerF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhaseCorrelationOptimizerF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPhaseCorrelationOptimizerF4

        Create a new object of the class itkPhaseCorrelationOptimizerF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhaseCorrelationOptimizerF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhaseCorrelationOptimizerF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhaseCorrelationOptimizerF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhaseCorrelationOptimizerF4 in _itkPhaseCorrelationOptimizerPython:
_itkPhaseCorrelationOptimizerPython.itkPhaseCorrelationOptimizerF4_swigregister(itkPhaseCorrelationOptimizerF4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def phase_correlation_optimizer(*args,  fixed_image: itkt.ImageBase=..., moving_image: itkt.ImageBase=..., real_input: itkt.Image=..., complex_input: itkt.Image=..., peak_interpolation_method=..., offset_count: int=..., merge_peaks: int=..., zero_suppression: float=..., pixel_distance_tolerance: int=..., phase_interpolated: int=...,**kwargs):
    """Functional interface for PhaseCorrelationOptimizer"""
    import itk

    kwarg_typehints = { 'fixed_image':fixed_image,'moving_image':moving_image,'real_input':real_input,'complex_input':complex_input,'peak_interpolation_method':peak_interpolation_method,'offset_count':offset_count,'merge_peaks':merge_peaks,'zero_suppression':zero_suppression,'pixel_distance_tolerance':pixel_distance_tolerance,'phase_interpolated':phase_interpolated }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.PhaseCorrelationOptimizer.New(*args, **kwargs)

    return instance.__internal_call__()

def phase_correlation_optimizer_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.Montage.PhaseCorrelationOptimizer
    phase_correlation_optimizer.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    phase_correlation_optimizer.__doc__ = filter_object.__doc__



