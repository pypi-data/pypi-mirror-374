# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _MontagePython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkNMinimaMaximaImageCalculatorPython
else:
    import _itkNMinimaMaximaImageCalculatorPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkImageRegionPython
import itk.itkSizePython
import itk.pyBasePython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkCovariantVectorPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkImagePython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython

def itkNMinimaMaximaImageCalculatorID2_New():
    return itkNMinimaMaximaImageCalculatorID2.New()

class itkNMinimaMaximaImageCalculatorID2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkNMinimaMaximaImageCalculatorID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNMinimaMaximaImageCalculatorID2_Pointer"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNMinimaMaximaImageCalculatorID2_Pointer"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorID2_Clone(self)

    def SetImage(self, _arg):
        r"""
        SetImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageD2 const *

        """
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorID2_SetImage(self, _arg)

    def ComputeMinima(self):
        r"""ComputeMinima(self)"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorID2_ComputeMinima(self)

    def ComputeMaxima(self):
        r"""ComputeMaxima(self)"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorID2_ComputeMaxima(self)

    def Compute(self):
        r"""Compute(self)"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorID2_Compute(self)

    def GetMinima(self):
        r"""GetMinima(self) -> vectorD"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorID2_GetMinima(self)

    def GetMaxima(self):
        r"""GetMaxima(self) -> vectorD"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorID2_GetMaxima(self)

    def GetIndicesOfMinima(self):
        r"""GetIndicesOfMinima(self) -> std::vector< itkIndex2,std::allocator< itkIndex2 > > const &"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorID2_GetIndicesOfMinima(self)

    def GetIndicesOfMaxima(self):
        r"""GetIndicesOfMaxima(self) -> std::vector< itkIndex2,std::allocator< itkIndex2 > > const &"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorID2_GetIndicesOfMaxima(self)

    def SetRegion(self, region):
        r"""
        SetRegion(self, region)

        Parameters
        ----------
        region: itkImageRegion2 const &

        """
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorID2_SetRegion(self, region)

    def GetN(self):
        r"""GetN(self) -> unsigned long"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorID2_GetN(self)

    def SetN(self, _arg):
        r"""
        SetN(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorID2_SetN(self, _arg)
    __swig_destroy__ = _itkNMinimaMaximaImageCalculatorPython.delete_itkNMinimaMaximaImageCalculatorID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNMinimaMaximaImageCalculatorID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNMinimaMaximaImageCalculatorID2

        Create a new object of the class itkNMinimaMaximaImageCalculatorID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNMinimaMaximaImageCalculatorID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNMinimaMaximaImageCalculatorID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNMinimaMaximaImageCalculatorID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNMinimaMaximaImageCalculatorID2 in _itkNMinimaMaximaImageCalculatorPython:
_itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorID2_swigregister(itkNMinimaMaximaImageCalculatorID2)

def itkNMinimaMaximaImageCalculatorID3_New():
    return itkNMinimaMaximaImageCalculatorID3.New()

class itkNMinimaMaximaImageCalculatorID3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkNMinimaMaximaImageCalculatorID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNMinimaMaximaImageCalculatorID3_Pointer"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNMinimaMaximaImageCalculatorID3_Pointer"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorID3_Clone(self)

    def SetImage(self, _arg):
        r"""
        SetImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageD3 const *

        """
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorID3_SetImage(self, _arg)

    def ComputeMinima(self):
        r"""ComputeMinima(self)"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorID3_ComputeMinima(self)

    def ComputeMaxima(self):
        r"""ComputeMaxima(self)"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorID3_ComputeMaxima(self)

    def Compute(self):
        r"""Compute(self)"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorID3_Compute(self)

    def GetMinima(self):
        r"""GetMinima(self) -> vectorD"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorID3_GetMinima(self)

    def GetMaxima(self):
        r"""GetMaxima(self) -> vectorD"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorID3_GetMaxima(self)

    def GetIndicesOfMinima(self):
        r"""GetIndicesOfMinima(self) -> std::vector< itkIndex3,std::allocator< itkIndex3 > > const &"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorID3_GetIndicesOfMinima(self)

    def GetIndicesOfMaxima(self):
        r"""GetIndicesOfMaxima(self) -> std::vector< itkIndex3,std::allocator< itkIndex3 > > const &"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorID3_GetIndicesOfMaxima(self)

    def SetRegion(self, region):
        r"""
        SetRegion(self, region)

        Parameters
        ----------
        region: itkImageRegion3 const &

        """
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorID3_SetRegion(self, region)

    def GetN(self):
        r"""GetN(self) -> unsigned long"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorID3_GetN(self)

    def SetN(self, _arg):
        r"""
        SetN(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorID3_SetN(self, _arg)
    __swig_destroy__ = _itkNMinimaMaximaImageCalculatorPython.delete_itkNMinimaMaximaImageCalculatorID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNMinimaMaximaImageCalculatorID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNMinimaMaximaImageCalculatorID3

        Create a new object of the class itkNMinimaMaximaImageCalculatorID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNMinimaMaximaImageCalculatorID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNMinimaMaximaImageCalculatorID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNMinimaMaximaImageCalculatorID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNMinimaMaximaImageCalculatorID3 in _itkNMinimaMaximaImageCalculatorPython:
_itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorID3_swigregister(itkNMinimaMaximaImageCalculatorID3)

def itkNMinimaMaximaImageCalculatorID4_New():
    return itkNMinimaMaximaImageCalculatorID4.New()

class itkNMinimaMaximaImageCalculatorID4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkNMinimaMaximaImageCalculatorID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNMinimaMaximaImageCalculatorID4_Pointer"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNMinimaMaximaImageCalculatorID4_Pointer"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorID4_Clone(self)

    def SetImage(self, _arg):
        r"""
        SetImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageD4 const *

        """
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorID4_SetImage(self, _arg)

    def ComputeMinima(self):
        r"""ComputeMinima(self)"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorID4_ComputeMinima(self)

    def ComputeMaxima(self):
        r"""ComputeMaxima(self)"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorID4_ComputeMaxima(self)

    def Compute(self):
        r"""Compute(self)"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorID4_Compute(self)

    def GetMinima(self):
        r"""GetMinima(self) -> vectorD"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorID4_GetMinima(self)

    def GetMaxima(self):
        r"""GetMaxima(self) -> vectorD"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorID4_GetMaxima(self)

    def GetIndicesOfMinima(self):
        r"""GetIndicesOfMinima(self) -> std::vector< itkIndex4,std::allocator< itkIndex4 > > const &"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorID4_GetIndicesOfMinima(self)

    def GetIndicesOfMaxima(self):
        r"""GetIndicesOfMaxima(self) -> std::vector< itkIndex4,std::allocator< itkIndex4 > > const &"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorID4_GetIndicesOfMaxima(self)

    def SetRegion(self, region):
        r"""
        SetRegion(self, region)

        Parameters
        ----------
        region: itkImageRegion4 const &

        """
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorID4_SetRegion(self, region)

    def GetN(self):
        r"""GetN(self) -> unsigned long"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorID4_GetN(self)

    def SetN(self, _arg):
        r"""
        SetN(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorID4_SetN(self, _arg)
    __swig_destroy__ = _itkNMinimaMaximaImageCalculatorPython.delete_itkNMinimaMaximaImageCalculatorID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNMinimaMaximaImageCalculatorID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNMinimaMaximaImageCalculatorID4

        Create a new object of the class itkNMinimaMaximaImageCalculatorID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNMinimaMaximaImageCalculatorID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNMinimaMaximaImageCalculatorID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNMinimaMaximaImageCalculatorID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNMinimaMaximaImageCalculatorID4 in _itkNMinimaMaximaImageCalculatorPython:
_itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorID4_swigregister(itkNMinimaMaximaImageCalculatorID4)

def itkNMinimaMaximaImageCalculatorIF2_New():
    return itkNMinimaMaximaImageCalculatorIF2.New()

class itkNMinimaMaximaImageCalculatorIF2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkNMinimaMaximaImageCalculatorIF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNMinimaMaximaImageCalculatorIF2_Pointer"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNMinimaMaximaImageCalculatorIF2_Pointer"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIF2_Clone(self)

    def SetImage(self, _arg):
        r"""
        SetImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageF2 const *

        """
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIF2_SetImage(self, _arg)

    def ComputeMinima(self):
        r"""ComputeMinima(self)"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIF2_ComputeMinima(self)

    def ComputeMaxima(self):
        r"""ComputeMaxima(self)"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIF2_ComputeMaxima(self)

    def Compute(self):
        r"""Compute(self)"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIF2_Compute(self)

    def GetMinima(self):
        r"""GetMinima(self) -> vectorF"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIF2_GetMinima(self)

    def GetMaxima(self):
        r"""GetMaxima(self) -> vectorF"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIF2_GetMaxima(self)

    def GetIndicesOfMinima(self):
        r"""GetIndicesOfMinima(self) -> std::vector< itkIndex2,std::allocator< itkIndex2 > > const &"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIF2_GetIndicesOfMinima(self)

    def GetIndicesOfMaxima(self):
        r"""GetIndicesOfMaxima(self) -> std::vector< itkIndex2,std::allocator< itkIndex2 > > const &"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIF2_GetIndicesOfMaxima(self)

    def SetRegion(self, region):
        r"""
        SetRegion(self, region)

        Parameters
        ----------
        region: itkImageRegion2 const &

        """
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIF2_SetRegion(self, region)

    def GetN(self):
        r"""GetN(self) -> unsigned long"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIF2_GetN(self)

    def SetN(self, _arg):
        r"""
        SetN(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIF2_SetN(self, _arg)
    __swig_destroy__ = _itkNMinimaMaximaImageCalculatorPython.delete_itkNMinimaMaximaImageCalculatorIF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNMinimaMaximaImageCalculatorIF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNMinimaMaximaImageCalculatorIF2

        Create a new object of the class itkNMinimaMaximaImageCalculatorIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNMinimaMaximaImageCalculatorIF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNMinimaMaximaImageCalculatorIF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNMinimaMaximaImageCalculatorIF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNMinimaMaximaImageCalculatorIF2 in _itkNMinimaMaximaImageCalculatorPython:
_itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIF2_swigregister(itkNMinimaMaximaImageCalculatorIF2)

def itkNMinimaMaximaImageCalculatorIF3_New():
    return itkNMinimaMaximaImageCalculatorIF3.New()

class itkNMinimaMaximaImageCalculatorIF3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkNMinimaMaximaImageCalculatorIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNMinimaMaximaImageCalculatorIF3_Pointer"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNMinimaMaximaImageCalculatorIF3_Pointer"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIF3_Clone(self)

    def SetImage(self, _arg):
        r"""
        SetImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageF3 const *

        """
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIF3_SetImage(self, _arg)

    def ComputeMinima(self):
        r"""ComputeMinima(self)"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIF3_ComputeMinima(self)

    def ComputeMaxima(self):
        r"""ComputeMaxima(self)"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIF3_ComputeMaxima(self)

    def Compute(self):
        r"""Compute(self)"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIF3_Compute(self)

    def GetMinima(self):
        r"""GetMinima(self) -> vectorF"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIF3_GetMinima(self)

    def GetMaxima(self):
        r"""GetMaxima(self) -> vectorF"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIF3_GetMaxima(self)

    def GetIndicesOfMinima(self):
        r"""GetIndicesOfMinima(self) -> std::vector< itkIndex3,std::allocator< itkIndex3 > > const &"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIF3_GetIndicesOfMinima(self)

    def GetIndicesOfMaxima(self):
        r"""GetIndicesOfMaxima(self) -> std::vector< itkIndex3,std::allocator< itkIndex3 > > const &"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIF3_GetIndicesOfMaxima(self)

    def SetRegion(self, region):
        r"""
        SetRegion(self, region)

        Parameters
        ----------
        region: itkImageRegion3 const &

        """
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIF3_SetRegion(self, region)

    def GetN(self):
        r"""GetN(self) -> unsigned long"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIF3_GetN(self)

    def SetN(self, _arg):
        r"""
        SetN(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIF3_SetN(self, _arg)
    __swig_destroy__ = _itkNMinimaMaximaImageCalculatorPython.delete_itkNMinimaMaximaImageCalculatorIF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNMinimaMaximaImageCalculatorIF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNMinimaMaximaImageCalculatorIF3

        Create a new object of the class itkNMinimaMaximaImageCalculatorIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNMinimaMaximaImageCalculatorIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNMinimaMaximaImageCalculatorIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNMinimaMaximaImageCalculatorIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNMinimaMaximaImageCalculatorIF3 in _itkNMinimaMaximaImageCalculatorPython:
_itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIF3_swigregister(itkNMinimaMaximaImageCalculatorIF3)

def itkNMinimaMaximaImageCalculatorIF4_New():
    return itkNMinimaMaximaImageCalculatorIF4.New()

class itkNMinimaMaximaImageCalculatorIF4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkNMinimaMaximaImageCalculatorIF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNMinimaMaximaImageCalculatorIF4_Pointer"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNMinimaMaximaImageCalculatorIF4_Pointer"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIF4_Clone(self)

    def SetImage(self, _arg):
        r"""
        SetImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageF4 const *

        """
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIF4_SetImage(self, _arg)

    def ComputeMinima(self):
        r"""ComputeMinima(self)"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIF4_ComputeMinima(self)

    def ComputeMaxima(self):
        r"""ComputeMaxima(self)"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIF4_ComputeMaxima(self)

    def Compute(self):
        r"""Compute(self)"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIF4_Compute(self)

    def GetMinima(self):
        r"""GetMinima(self) -> vectorF"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIF4_GetMinima(self)

    def GetMaxima(self):
        r"""GetMaxima(self) -> vectorF"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIF4_GetMaxima(self)

    def GetIndicesOfMinima(self):
        r"""GetIndicesOfMinima(self) -> std::vector< itkIndex4,std::allocator< itkIndex4 > > const &"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIF4_GetIndicesOfMinima(self)

    def GetIndicesOfMaxima(self):
        r"""GetIndicesOfMaxima(self) -> std::vector< itkIndex4,std::allocator< itkIndex4 > > const &"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIF4_GetIndicesOfMaxima(self)

    def SetRegion(self, region):
        r"""
        SetRegion(self, region)

        Parameters
        ----------
        region: itkImageRegion4 const &

        """
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIF4_SetRegion(self, region)

    def GetN(self):
        r"""GetN(self) -> unsigned long"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIF4_GetN(self)

    def SetN(self, _arg):
        r"""
        SetN(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIF4_SetN(self, _arg)
    __swig_destroy__ = _itkNMinimaMaximaImageCalculatorPython.delete_itkNMinimaMaximaImageCalculatorIF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNMinimaMaximaImageCalculatorIF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNMinimaMaximaImageCalculatorIF4

        Create a new object of the class itkNMinimaMaximaImageCalculatorIF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNMinimaMaximaImageCalculatorIF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNMinimaMaximaImageCalculatorIF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNMinimaMaximaImageCalculatorIF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNMinimaMaximaImageCalculatorIF4 in _itkNMinimaMaximaImageCalculatorPython:
_itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIF4_swigregister(itkNMinimaMaximaImageCalculatorIF4)

def itkNMinimaMaximaImageCalculatorISS2_New():
    return itkNMinimaMaximaImageCalculatorISS2.New()

class itkNMinimaMaximaImageCalculatorISS2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkNMinimaMaximaImageCalculatorISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNMinimaMaximaImageCalculatorISS2_Pointer"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNMinimaMaximaImageCalculatorISS2_Pointer"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorISS2_Clone(self)

    def SetImage(self, _arg):
        r"""
        SetImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS2 const *

        """
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorISS2_SetImage(self, _arg)

    def ComputeMinima(self):
        r"""ComputeMinima(self)"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorISS2_ComputeMinima(self)

    def ComputeMaxima(self):
        r"""ComputeMaxima(self)"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorISS2_ComputeMaxima(self)

    def Compute(self):
        r"""Compute(self)"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorISS2_Compute(self)

    def GetMinima(self):
        r"""GetMinima(self) -> vectorSS"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorISS2_GetMinima(self)

    def GetMaxima(self):
        r"""GetMaxima(self) -> vectorSS"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorISS2_GetMaxima(self)

    def GetIndicesOfMinima(self):
        r"""GetIndicesOfMinima(self) -> std::vector< itkIndex2,std::allocator< itkIndex2 > > const &"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorISS2_GetIndicesOfMinima(self)

    def GetIndicesOfMaxima(self):
        r"""GetIndicesOfMaxima(self) -> std::vector< itkIndex2,std::allocator< itkIndex2 > > const &"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorISS2_GetIndicesOfMaxima(self)

    def SetRegion(self, region):
        r"""
        SetRegion(self, region)

        Parameters
        ----------
        region: itkImageRegion2 const &

        """
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorISS2_SetRegion(self, region)

    def GetN(self):
        r"""GetN(self) -> unsigned long"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorISS2_GetN(self)

    def SetN(self, _arg):
        r"""
        SetN(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorISS2_SetN(self, _arg)
    __swig_destroy__ = _itkNMinimaMaximaImageCalculatorPython.delete_itkNMinimaMaximaImageCalculatorISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNMinimaMaximaImageCalculatorISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNMinimaMaximaImageCalculatorISS2

        Create a new object of the class itkNMinimaMaximaImageCalculatorISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNMinimaMaximaImageCalculatorISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNMinimaMaximaImageCalculatorISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNMinimaMaximaImageCalculatorISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNMinimaMaximaImageCalculatorISS2 in _itkNMinimaMaximaImageCalculatorPython:
_itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorISS2_swigregister(itkNMinimaMaximaImageCalculatorISS2)

def itkNMinimaMaximaImageCalculatorISS3_New():
    return itkNMinimaMaximaImageCalculatorISS3.New()

class itkNMinimaMaximaImageCalculatorISS3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkNMinimaMaximaImageCalculatorISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNMinimaMaximaImageCalculatorISS3_Pointer"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNMinimaMaximaImageCalculatorISS3_Pointer"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorISS3_Clone(self)

    def SetImage(self, _arg):
        r"""
        SetImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS3 const *

        """
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorISS3_SetImage(self, _arg)

    def ComputeMinima(self):
        r"""ComputeMinima(self)"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorISS3_ComputeMinima(self)

    def ComputeMaxima(self):
        r"""ComputeMaxima(self)"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorISS3_ComputeMaxima(self)

    def Compute(self):
        r"""Compute(self)"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorISS3_Compute(self)

    def GetMinima(self):
        r"""GetMinima(self) -> vectorSS"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorISS3_GetMinima(self)

    def GetMaxima(self):
        r"""GetMaxima(self) -> vectorSS"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorISS3_GetMaxima(self)

    def GetIndicesOfMinima(self):
        r"""GetIndicesOfMinima(self) -> std::vector< itkIndex3,std::allocator< itkIndex3 > > const &"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorISS3_GetIndicesOfMinima(self)

    def GetIndicesOfMaxima(self):
        r"""GetIndicesOfMaxima(self) -> std::vector< itkIndex3,std::allocator< itkIndex3 > > const &"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorISS3_GetIndicesOfMaxima(self)

    def SetRegion(self, region):
        r"""
        SetRegion(self, region)

        Parameters
        ----------
        region: itkImageRegion3 const &

        """
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorISS3_SetRegion(self, region)

    def GetN(self):
        r"""GetN(self) -> unsigned long"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorISS3_GetN(self)

    def SetN(self, _arg):
        r"""
        SetN(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorISS3_SetN(self, _arg)
    __swig_destroy__ = _itkNMinimaMaximaImageCalculatorPython.delete_itkNMinimaMaximaImageCalculatorISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNMinimaMaximaImageCalculatorISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNMinimaMaximaImageCalculatorISS3

        Create a new object of the class itkNMinimaMaximaImageCalculatorISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNMinimaMaximaImageCalculatorISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNMinimaMaximaImageCalculatorISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNMinimaMaximaImageCalculatorISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNMinimaMaximaImageCalculatorISS3 in _itkNMinimaMaximaImageCalculatorPython:
_itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorISS3_swigregister(itkNMinimaMaximaImageCalculatorISS3)

def itkNMinimaMaximaImageCalculatorISS4_New():
    return itkNMinimaMaximaImageCalculatorISS4.New()

class itkNMinimaMaximaImageCalculatorISS4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkNMinimaMaximaImageCalculatorISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNMinimaMaximaImageCalculatorISS4_Pointer"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNMinimaMaximaImageCalculatorISS4_Pointer"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorISS4_Clone(self)

    def SetImage(self, _arg):
        r"""
        SetImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS4 const *

        """
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorISS4_SetImage(self, _arg)

    def ComputeMinima(self):
        r"""ComputeMinima(self)"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorISS4_ComputeMinima(self)

    def ComputeMaxima(self):
        r"""ComputeMaxima(self)"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorISS4_ComputeMaxima(self)

    def Compute(self):
        r"""Compute(self)"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorISS4_Compute(self)

    def GetMinima(self):
        r"""GetMinima(self) -> vectorSS"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorISS4_GetMinima(self)

    def GetMaxima(self):
        r"""GetMaxima(self) -> vectorSS"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorISS4_GetMaxima(self)

    def GetIndicesOfMinima(self):
        r"""GetIndicesOfMinima(self) -> std::vector< itkIndex4,std::allocator< itkIndex4 > > const &"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorISS4_GetIndicesOfMinima(self)

    def GetIndicesOfMaxima(self):
        r"""GetIndicesOfMaxima(self) -> std::vector< itkIndex4,std::allocator< itkIndex4 > > const &"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorISS4_GetIndicesOfMaxima(self)

    def SetRegion(self, region):
        r"""
        SetRegion(self, region)

        Parameters
        ----------
        region: itkImageRegion4 const &

        """
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorISS4_SetRegion(self, region)

    def GetN(self):
        r"""GetN(self) -> unsigned long"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorISS4_GetN(self)

    def SetN(self, _arg):
        r"""
        SetN(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorISS4_SetN(self, _arg)
    __swig_destroy__ = _itkNMinimaMaximaImageCalculatorPython.delete_itkNMinimaMaximaImageCalculatorISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNMinimaMaximaImageCalculatorISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNMinimaMaximaImageCalculatorISS4

        Create a new object of the class itkNMinimaMaximaImageCalculatorISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNMinimaMaximaImageCalculatorISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNMinimaMaximaImageCalculatorISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNMinimaMaximaImageCalculatorISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNMinimaMaximaImageCalculatorISS4 in _itkNMinimaMaximaImageCalculatorPython:
_itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorISS4_swigregister(itkNMinimaMaximaImageCalculatorISS4)

def itkNMinimaMaximaImageCalculatorIUC2_New():
    return itkNMinimaMaximaImageCalculatorIUC2.New()

class itkNMinimaMaximaImageCalculatorIUC2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkNMinimaMaximaImageCalculatorIUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNMinimaMaximaImageCalculatorIUC2_Pointer"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNMinimaMaximaImageCalculatorIUC2_Pointer"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUC2_Clone(self)

    def SetImage(self, _arg):
        r"""
        SetImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC2 const *

        """
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUC2_SetImage(self, _arg)

    def ComputeMinima(self):
        r"""ComputeMinima(self)"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUC2_ComputeMinima(self)

    def ComputeMaxima(self):
        r"""ComputeMaxima(self)"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUC2_ComputeMaxima(self)

    def Compute(self):
        r"""Compute(self)"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUC2_Compute(self)

    def GetMinima(self):
        r"""GetMinima(self) -> vectorUC"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUC2_GetMinima(self)

    def GetMaxima(self):
        r"""GetMaxima(self) -> vectorUC"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUC2_GetMaxima(self)

    def GetIndicesOfMinima(self):
        r"""GetIndicesOfMinima(self) -> std::vector< itkIndex2,std::allocator< itkIndex2 > > const &"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUC2_GetIndicesOfMinima(self)

    def GetIndicesOfMaxima(self):
        r"""GetIndicesOfMaxima(self) -> std::vector< itkIndex2,std::allocator< itkIndex2 > > const &"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUC2_GetIndicesOfMaxima(self)

    def SetRegion(self, region):
        r"""
        SetRegion(self, region)

        Parameters
        ----------
        region: itkImageRegion2 const &

        """
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUC2_SetRegion(self, region)

    def GetN(self):
        r"""GetN(self) -> unsigned long"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUC2_GetN(self)

    def SetN(self, _arg):
        r"""
        SetN(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUC2_SetN(self, _arg)
    __swig_destroy__ = _itkNMinimaMaximaImageCalculatorPython.delete_itkNMinimaMaximaImageCalculatorIUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNMinimaMaximaImageCalculatorIUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNMinimaMaximaImageCalculatorIUC2

        Create a new object of the class itkNMinimaMaximaImageCalculatorIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNMinimaMaximaImageCalculatorIUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNMinimaMaximaImageCalculatorIUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNMinimaMaximaImageCalculatorIUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNMinimaMaximaImageCalculatorIUC2 in _itkNMinimaMaximaImageCalculatorPython:
_itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUC2_swigregister(itkNMinimaMaximaImageCalculatorIUC2)

def itkNMinimaMaximaImageCalculatorIUC3_New():
    return itkNMinimaMaximaImageCalculatorIUC3.New()

class itkNMinimaMaximaImageCalculatorIUC3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkNMinimaMaximaImageCalculatorIUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNMinimaMaximaImageCalculatorIUC3_Pointer"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNMinimaMaximaImageCalculatorIUC3_Pointer"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUC3_Clone(self)

    def SetImage(self, _arg):
        r"""
        SetImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUC3_SetImage(self, _arg)

    def ComputeMinima(self):
        r"""ComputeMinima(self)"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUC3_ComputeMinima(self)

    def ComputeMaxima(self):
        r"""ComputeMaxima(self)"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUC3_ComputeMaxima(self)

    def Compute(self):
        r"""Compute(self)"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUC3_Compute(self)

    def GetMinima(self):
        r"""GetMinima(self) -> vectorUC"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUC3_GetMinima(self)

    def GetMaxima(self):
        r"""GetMaxima(self) -> vectorUC"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUC3_GetMaxima(self)

    def GetIndicesOfMinima(self):
        r"""GetIndicesOfMinima(self) -> std::vector< itkIndex3,std::allocator< itkIndex3 > > const &"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUC3_GetIndicesOfMinima(self)

    def GetIndicesOfMaxima(self):
        r"""GetIndicesOfMaxima(self) -> std::vector< itkIndex3,std::allocator< itkIndex3 > > const &"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUC3_GetIndicesOfMaxima(self)

    def SetRegion(self, region):
        r"""
        SetRegion(self, region)

        Parameters
        ----------
        region: itkImageRegion3 const &

        """
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUC3_SetRegion(self, region)

    def GetN(self):
        r"""GetN(self) -> unsigned long"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUC3_GetN(self)

    def SetN(self, _arg):
        r"""
        SetN(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUC3_SetN(self, _arg)
    __swig_destroy__ = _itkNMinimaMaximaImageCalculatorPython.delete_itkNMinimaMaximaImageCalculatorIUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNMinimaMaximaImageCalculatorIUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNMinimaMaximaImageCalculatorIUC3

        Create a new object of the class itkNMinimaMaximaImageCalculatorIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNMinimaMaximaImageCalculatorIUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNMinimaMaximaImageCalculatorIUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNMinimaMaximaImageCalculatorIUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNMinimaMaximaImageCalculatorIUC3 in _itkNMinimaMaximaImageCalculatorPython:
_itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUC3_swigregister(itkNMinimaMaximaImageCalculatorIUC3)

def itkNMinimaMaximaImageCalculatorIUC4_New():
    return itkNMinimaMaximaImageCalculatorIUC4.New()

class itkNMinimaMaximaImageCalculatorIUC4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkNMinimaMaximaImageCalculatorIUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNMinimaMaximaImageCalculatorIUC4_Pointer"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNMinimaMaximaImageCalculatorIUC4_Pointer"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUC4_Clone(self)

    def SetImage(self, _arg):
        r"""
        SetImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC4 const *

        """
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUC4_SetImage(self, _arg)

    def ComputeMinima(self):
        r"""ComputeMinima(self)"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUC4_ComputeMinima(self)

    def ComputeMaxima(self):
        r"""ComputeMaxima(self)"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUC4_ComputeMaxima(self)

    def Compute(self):
        r"""Compute(self)"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUC4_Compute(self)

    def GetMinima(self):
        r"""GetMinima(self) -> vectorUC"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUC4_GetMinima(self)

    def GetMaxima(self):
        r"""GetMaxima(self) -> vectorUC"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUC4_GetMaxima(self)

    def GetIndicesOfMinima(self):
        r"""GetIndicesOfMinima(self) -> std::vector< itkIndex4,std::allocator< itkIndex4 > > const &"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUC4_GetIndicesOfMinima(self)

    def GetIndicesOfMaxima(self):
        r"""GetIndicesOfMaxima(self) -> std::vector< itkIndex4,std::allocator< itkIndex4 > > const &"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUC4_GetIndicesOfMaxima(self)

    def SetRegion(self, region):
        r"""
        SetRegion(self, region)

        Parameters
        ----------
        region: itkImageRegion4 const &

        """
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUC4_SetRegion(self, region)

    def GetN(self):
        r"""GetN(self) -> unsigned long"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUC4_GetN(self)

    def SetN(self, _arg):
        r"""
        SetN(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUC4_SetN(self, _arg)
    __swig_destroy__ = _itkNMinimaMaximaImageCalculatorPython.delete_itkNMinimaMaximaImageCalculatorIUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNMinimaMaximaImageCalculatorIUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNMinimaMaximaImageCalculatorIUC4

        Create a new object of the class itkNMinimaMaximaImageCalculatorIUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNMinimaMaximaImageCalculatorIUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNMinimaMaximaImageCalculatorIUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNMinimaMaximaImageCalculatorIUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNMinimaMaximaImageCalculatorIUC4 in _itkNMinimaMaximaImageCalculatorPython:
_itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUC4_swigregister(itkNMinimaMaximaImageCalculatorIUC4)

def itkNMinimaMaximaImageCalculatorIUS2_New():
    return itkNMinimaMaximaImageCalculatorIUS2.New()

class itkNMinimaMaximaImageCalculatorIUS2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkNMinimaMaximaImageCalculatorIUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNMinimaMaximaImageCalculatorIUS2_Pointer"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNMinimaMaximaImageCalculatorIUS2_Pointer"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUS2_Clone(self)

    def SetImage(self, _arg):
        r"""
        SetImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS2 const *

        """
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUS2_SetImage(self, _arg)

    def ComputeMinima(self):
        r"""ComputeMinima(self)"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUS2_ComputeMinima(self)

    def ComputeMaxima(self):
        r"""ComputeMaxima(self)"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUS2_ComputeMaxima(self)

    def Compute(self):
        r"""Compute(self)"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUS2_Compute(self)

    def GetMinima(self):
        r"""GetMinima(self) -> vectorUS"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUS2_GetMinima(self)

    def GetMaxima(self):
        r"""GetMaxima(self) -> vectorUS"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUS2_GetMaxima(self)

    def GetIndicesOfMinima(self):
        r"""GetIndicesOfMinima(self) -> std::vector< itkIndex2,std::allocator< itkIndex2 > > const &"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUS2_GetIndicesOfMinima(self)

    def GetIndicesOfMaxima(self):
        r"""GetIndicesOfMaxima(self) -> std::vector< itkIndex2,std::allocator< itkIndex2 > > const &"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUS2_GetIndicesOfMaxima(self)

    def SetRegion(self, region):
        r"""
        SetRegion(self, region)

        Parameters
        ----------
        region: itkImageRegion2 const &

        """
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUS2_SetRegion(self, region)

    def GetN(self):
        r"""GetN(self) -> unsigned long"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUS2_GetN(self)

    def SetN(self, _arg):
        r"""
        SetN(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUS2_SetN(self, _arg)
    __swig_destroy__ = _itkNMinimaMaximaImageCalculatorPython.delete_itkNMinimaMaximaImageCalculatorIUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNMinimaMaximaImageCalculatorIUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNMinimaMaximaImageCalculatorIUS2

        Create a new object of the class itkNMinimaMaximaImageCalculatorIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNMinimaMaximaImageCalculatorIUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNMinimaMaximaImageCalculatorIUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNMinimaMaximaImageCalculatorIUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNMinimaMaximaImageCalculatorIUS2 in _itkNMinimaMaximaImageCalculatorPython:
_itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUS2_swigregister(itkNMinimaMaximaImageCalculatorIUS2)

def itkNMinimaMaximaImageCalculatorIUS3_New():
    return itkNMinimaMaximaImageCalculatorIUS3.New()

class itkNMinimaMaximaImageCalculatorIUS3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkNMinimaMaximaImageCalculatorIUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNMinimaMaximaImageCalculatorIUS3_Pointer"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNMinimaMaximaImageCalculatorIUS3_Pointer"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUS3_Clone(self)

    def SetImage(self, _arg):
        r"""
        SetImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS3 const *

        """
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUS3_SetImage(self, _arg)

    def ComputeMinima(self):
        r"""ComputeMinima(self)"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUS3_ComputeMinima(self)

    def ComputeMaxima(self):
        r"""ComputeMaxima(self)"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUS3_ComputeMaxima(self)

    def Compute(self):
        r"""Compute(self)"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUS3_Compute(self)

    def GetMinima(self):
        r"""GetMinima(self) -> vectorUS"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUS3_GetMinima(self)

    def GetMaxima(self):
        r"""GetMaxima(self) -> vectorUS"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUS3_GetMaxima(self)

    def GetIndicesOfMinima(self):
        r"""GetIndicesOfMinima(self) -> std::vector< itkIndex3,std::allocator< itkIndex3 > > const &"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUS3_GetIndicesOfMinima(self)

    def GetIndicesOfMaxima(self):
        r"""GetIndicesOfMaxima(self) -> std::vector< itkIndex3,std::allocator< itkIndex3 > > const &"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUS3_GetIndicesOfMaxima(self)

    def SetRegion(self, region):
        r"""
        SetRegion(self, region)

        Parameters
        ----------
        region: itkImageRegion3 const &

        """
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUS3_SetRegion(self, region)

    def GetN(self):
        r"""GetN(self) -> unsigned long"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUS3_GetN(self)

    def SetN(self, _arg):
        r"""
        SetN(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUS3_SetN(self, _arg)
    __swig_destroy__ = _itkNMinimaMaximaImageCalculatorPython.delete_itkNMinimaMaximaImageCalculatorIUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNMinimaMaximaImageCalculatorIUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNMinimaMaximaImageCalculatorIUS3

        Create a new object of the class itkNMinimaMaximaImageCalculatorIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNMinimaMaximaImageCalculatorIUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNMinimaMaximaImageCalculatorIUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNMinimaMaximaImageCalculatorIUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNMinimaMaximaImageCalculatorIUS3 in _itkNMinimaMaximaImageCalculatorPython:
_itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUS3_swigregister(itkNMinimaMaximaImageCalculatorIUS3)

def itkNMinimaMaximaImageCalculatorIUS4_New():
    return itkNMinimaMaximaImageCalculatorIUS4.New()

class itkNMinimaMaximaImageCalculatorIUS4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkNMinimaMaximaImageCalculatorIUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNMinimaMaximaImageCalculatorIUS4_Pointer"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNMinimaMaximaImageCalculatorIUS4_Pointer"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUS4_Clone(self)

    def SetImage(self, _arg):
        r"""
        SetImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS4 const *

        """
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUS4_SetImage(self, _arg)

    def ComputeMinima(self):
        r"""ComputeMinima(self)"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUS4_ComputeMinima(self)

    def ComputeMaxima(self):
        r"""ComputeMaxima(self)"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUS4_ComputeMaxima(self)

    def Compute(self):
        r"""Compute(self)"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUS4_Compute(self)

    def GetMinima(self):
        r"""GetMinima(self) -> vectorUS"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUS4_GetMinima(self)

    def GetMaxima(self):
        r"""GetMaxima(self) -> vectorUS"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUS4_GetMaxima(self)

    def GetIndicesOfMinima(self):
        r"""GetIndicesOfMinima(self) -> std::vector< itkIndex4,std::allocator< itkIndex4 > > const &"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUS4_GetIndicesOfMinima(self)

    def GetIndicesOfMaxima(self):
        r"""GetIndicesOfMaxima(self) -> std::vector< itkIndex4,std::allocator< itkIndex4 > > const &"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUS4_GetIndicesOfMaxima(self)

    def SetRegion(self, region):
        r"""
        SetRegion(self, region)

        Parameters
        ----------
        region: itkImageRegion4 const &

        """
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUS4_SetRegion(self, region)

    def GetN(self):
        r"""GetN(self) -> unsigned long"""
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUS4_GetN(self)

    def SetN(self, _arg):
        r"""
        SetN(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUS4_SetN(self, _arg)
    __swig_destroy__ = _itkNMinimaMaximaImageCalculatorPython.delete_itkNMinimaMaximaImageCalculatorIUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNMinimaMaximaImageCalculatorIUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNMinimaMaximaImageCalculatorIUS4

        Create a new object of the class itkNMinimaMaximaImageCalculatorIUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNMinimaMaximaImageCalculatorIUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNMinimaMaximaImageCalculatorIUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNMinimaMaximaImageCalculatorIUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNMinimaMaximaImageCalculatorIUS4 in _itkNMinimaMaximaImageCalculatorPython:
_itkNMinimaMaximaImageCalculatorPython.itkNMinimaMaximaImageCalculatorIUS4_swigregister(itkNMinimaMaximaImageCalculatorIUS4)

