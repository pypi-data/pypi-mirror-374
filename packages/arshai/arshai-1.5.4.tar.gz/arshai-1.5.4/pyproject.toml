[tool.poetry]
name = "arshai"
version = "1.5.4"
description = "A powerful agent framework for building conversational AI systems"
authors = ["Nima Nazarian <nimunzn@gmail.com>"]
readme = "README.md"
license = "MIT"
repository = "https://github.com/nimunzn/arshai"
homepage = "https://github.com/nimunzn/arshai"
documentation = "https://arshai.readthedocs.io"
keywords = ["ai", "agents", "llm", "workflow", "rag", "conversational-ai", "multi-agent", "vector-db", "embeddings"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Operating System :: OS Independent",
]
packages = [
    {include = "arshai"}
]
include = [
    "LICENSE",
    "README.md",
    "pyproject.toml",
]

[tool.poetry.dependencies]
python = ">=3.11,<3.13"
pydantic = "^2.0.0"
openai = "^1.0.0"
pyyaml = "^6.0.1"
redis = {version = "^5.0.0", optional = true}
pymilvus = {version = "^2.3.0", optional = true}
flashrank = {version = "^0.1.0", optional = true}
aiohttp = "^3.11.16"
requests = "^2.32.3"
voyageai = {version = "^0.3.2", optional = true}
# Documentation dependencies (optional)
sphinx = {version = "^7.0.0", optional = true}
sphinx-rtd-theme = {version = "^2.0.0", optional = true}
sphinx-autodoc-typehints = {version = "^1.24.0", optional = true}
myst-parser = {version = "^2.0.0", optional = true}
sphinx-copybutton = {version = "^0.5.2", optional = true}
sphinxcontrib-mermaid = {version = "^0.9.2", optional = true}
furo = {version = "^2023.9.10", optional = true}
mcp = "^1.10.1"
# Observability dependencies (optional)
opentelemetry-api = {version = "^1.20.0", optional = true}
opentelemetry-sdk = {version = "^1.20.0", optional = true}
opentelemetry-exporter-otlp-proto-grpc = {version = "^1.20.0", optional = true}
opentelemetry-exporter-otlp-proto-http = {version = "^1.20.0", optional = true}
loguru = "^0.7.3"
google-genai = {version = "^1.25.0"}
google-auth = {version = "^2.0.0"}

[tool.poetry.extras]
# Individual features (granular control)
voyageai = ["voyageai"]
reranking = ["flashrank"]
vector-db = ["pymilvus"]
redis = ["redis"]
observability = ["opentelemetry-api", "opentelemetry-sdk", "opentelemetry-exporter-otlp-proto-grpc", "opentelemetry-exporter-otlp-proto-http"]
docs = ["sphinx", "sphinx-rtd-theme", "sphinx-autodoc-typehints", "myst-parser", "sphinx-copybutton", "sphinxcontrib-mermaid", "furo"]

# Common bundles (convenience)
rag = ["pymilvus", "flashrank"]
production = ["redis", "observability"]
full = ["voyageai", "flashrank", "pymilvus", "redis", "opentelemetry-api", "opentelemetry-sdk", "opentelemetry-exporter-otlp-proto-grpc", "opentelemetry-exporter-otlp-proto-http"]

[tool.poetry.group.dev.dependencies]
pytest = "^7.0.0"
black = "^23.0.0"
isort = "^5.12.0"
mypy = "^1.0.0"
pytest-cov = "^4.1.0"
pytest-asyncio = "^0.21.1"
bandit = "^1.7.5"
safety = "^3.0.0"

[tool.poetry.group.docs.dependencies]
sphinx = "^7.0.0"
sphinx-rtd-theme = "^2.0.0"
sphinx-autodoc-typehints = "^1.24.0"
myst-parser = "^2.0.0"
sphinx-copybutton = "^0.5.2"
sphinxcontrib-mermaid = "^0.9.2"
furo = "^2023.9.10"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py311']

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*" 