"""
File generation utilities for FastestMCP CLI
"""

from typing import List


def generate_readme(tools: int, resources: int, prompts: int, transport: str, server_type: str) -> str:
    """Generate README.md file"""
    return f"""# MCP Server

Generated by FastestMCP CLI

## Configuration

- **Tools**: {tools}
- **Resources**: {resources}
- **Prompts**: {prompts}
- **Transport**: {transport}
- **Type**: {server_type}

## Running the Server

```bash
python server.py
```

## Structure

This server includes:
- {tools} tools
- {resources} resources
- {prompts} prompts

## Next Steps

1. Implement the TODO sections in the generated files
2. Add your specific business logic
3. Configure any required API keys or dependencies
4. Test the server with your MCP client
"""


def generate_folder_markdown(name: str, tools: int, resources: int, prompts: int, transport: str, server_type: str, files: List[str]) -> str:
    """Generate markdown representation of folder structure"""
    structure = f"""
```
{name}/
├── main.py               # Main entry point
├── server.py              # Main server file
├── __init__.py           # Package initialization
├── app/                  # Modular application components
│   ├── __init__.py
│   ├── tools.py          # Tool definitions ({tools} tools)
│   ├── resources.py      # Resource definitions ({resources} resources)
"""

    if prompts > 0:
        structure += f"""│   ├── prompts.py        # Prompt definitions ({prompts} prompts)
"""

    structure += """├── README.md             # Documentation
"""

    if transport == 'http':
        structure += """├── config_http.py        # HTTP transport config
"""
    elif transport == 'sse':
        structure += """├── config_sse.py         # SSE transport config
"""

    structure += """└── __pycache__/          # Python cache files
```

**Generated Files:**
"""
    for file in files:
        structure += f"- `{file}`\n"

    structure += f"""
**Server Details:**
- Tools: {tools}
- Resources: {resources}
- Prompts: {prompts}
- Transport: {transport}
- Type: {server_type}
"""

    return structure