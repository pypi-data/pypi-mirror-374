"""
Binance Simple Earn REST API

OpenAPI Specification for the Binance Simple Earn REST API
The version of the OpenAPI document: 1.0.0
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""

from typing import Optional, Union
from requests import Session
from binance_common.configuration import ConfigurationRestAPI
from binance_common.errors import RequiredError
from binance_common.models import ApiResponse
from binance_common.signature import Signers
from binance_common.utils import send_request

from ..models import GetCollateralRecordResponse
from ..models import GetFlexibleRedemptionRecordResponse
from ..models import GetFlexibleRewardsHistoryResponse
from ..models import GetFlexibleSubscriptionRecordResponse
from ..models import GetLockedRedemptionRecordResponse
from ..models import GetLockedRewardsHistoryResponse
from ..models import GetLockedSubscriptionRecordResponse
from ..models import GetRateHistoryResponse


class HistoryApi:
    """API Client for HistoryApi endpoints."""

    def __init__(
        self,
        configuration: ConfigurationRestAPI = None,
        session: Session = None,
        signer: Signers = None,
    ) -> None:
        self._configuration = configuration
        self._session = session
        self._signer = signer

    def get_collateral_record(
        self,
        product_id: Optional[str] = None,
        start_time: Optional[int] = None,
        end_time: Optional[int] = None,
        current: Optional[int] = None,
        size: Optional[int] = None,
        recv_window: Optional[int] = None,
    ) -> ApiResponse[GetCollateralRecordResponse]:
        """
                Get Collateral Record(USER_DATA)
                GET /sapi/v1/simple-earn/flexible/history/collateralRecord
                https://developers.binance.com/docs/simple_earn/history/Get-Collateral-Record

                Get Collateral Record

        * The time between `startTime` and `endTime` cannot be longer than 30 days.
        * If `startTime` and `endTime` are both not sent, then the last 30 days' data will be returned.
        * If `startTime` is sent but `endTime` is not sent, the next 30 days' data beginning from `startTime` will be returned.
        * If `endTime` is sent but `startTime` is not sent, the 30 days' data before `endTime` will be returned.

        Weight: 1

                Args:
                    product_id (Optional[str] = None):
                    start_time (Optional[int] = None):
                    end_time (Optional[int] = None):
                    current (Optional[int] = None): Currently querying the page. Start from 1. Default:1
                    size (Optional[int] = None): Default:10, Max:100
                    recv_window (Optional[int] = None):

                Returns:
                    ApiResponse[GetCollateralRecordResponse]

                Raises:
                    RequiredError: If a required parameter is missing.

        """

        payload = {
            "product_id": product_id,
            "start_time": start_time,
            "end_time": end_time,
            "current": current,
            "size": size,
            "recv_window": recv_window,
        }

        return send_request(
            self._session,
            self._configuration,
            method="GET",
            path="/sapi/v1/simple-earn/flexible/history/collateralRecord",
            payload=payload,
            time_unit=self._configuration.time_unit,
            response_model=GetCollateralRecordResponse,
            is_signed=True,
            signer=self._signer,
        )

    def get_flexible_redemption_record(
        self,
        product_id: Optional[str] = None,
        redeem_id: Optional[str] = None,
        asset: Optional[str] = None,
        start_time: Optional[int] = None,
        end_time: Optional[int] = None,
        current: Optional[int] = None,
        size: Optional[int] = None,
        recv_window: Optional[int] = None,
    ) -> ApiResponse[GetFlexibleRedemptionRecordResponse]:
        """
                Get Flexible Redemption Record(USER_DATA)
                GET /sapi/v1/simple-earn/flexible/history/redemptionRecord
                https://developers.binance.com/docs/simple_earn/history/Get-Flexible-Redemption-Record

                Get Flexible Redemption Record

        *	The time between `startTime` and `endTime` cannot be longer than 3 months.
        *	If `startTime` and `endTime` are both not sent, then the last 30 days' data will be returned.
        *	If `startTime` is sent but `endTime` is not sent, the next 30 days' data beginning from `startTime` will be returned.
        *	If `endTime` is sent but `startTime` is not sent, the 30 days' data before `endTime` will be returned.

        Weight: 150

                Args:
                    product_id (Optional[str] = None):
                    redeem_id (Optional[str] = None):
                    asset (Optional[str] = None):
                    start_time (Optional[int] = None):
                    end_time (Optional[int] = None):
                    current (Optional[int] = None): Currently querying the page. Start from 1. Default:1
                    size (Optional[int] = None): Default:10, Max:100
                    recv_window (Optional[int] = None):

                Returns:
                    ApiResponse[GetFlexibleRedemptionRecordResponse]

                Raises:
                    RequiredError: If a required parameter is missing.

        """

        payload = {
            "product_id": product_id,
            "redeem_id": redeem_id,
            "asset": asset,
            "start_time": start_time,
            "end_time": end_time,
            "current": current,
            "size": size,
            "recv_window": recv_window,
        }

        return send_request(
            self._session,
            self._configuration,
            method="GET",
            path="/sapi/v1/simple-earn/flexible/history/redemptionRecord",
            payload=payload,
            time_unit=self._configuration.time_unit,
            response_model=GetFlexibleRedemptionRecordResponse,
            is_signed=True,
            signer=self._signer,
        )

    def get_flexible_rewards_history(
        self,
        type: Union[str, None],
        product_id: Optional[str] = None,
        asset: Optional[str] = None,
        start_time: Optional[int] = None,
        end_time: Optional[int] = None,
        current: Optional[int] = None,
        size: Optional[int] = None,
        recv_window: Optional[int] = None,
    ) -> ApiResponse[GetFlexibleRewardsHistoryResponse]:
        """
                Get Flexible Rewards History(USER_DATA)
                GET /sapi/v1/simple-earn/flexible/history/rewardsRecord
                https://developers.binance.com/docs/simple_earn/history/Get-Flexible-Rewards-History

                Get Flexible Rewards History

        *	The time between `startTime` and `endTime` cannot be longer than 3 months.
        *	If `startTime` and `endTime` are both not sent, then the last 30 days' data will be returned.
        *	If `startTime` is sent but `endTime` is not sent, the next 30 days' data beginning from `startTime` will be returned.
        *	If `endTime` is sent but `startTime` is not sent, the 30 days' data before `endTime` will be returned.

        Weight: 150

                Args:
                    type (Union[str, None]): `BONUS` - Bonus tiered APR, `REALTIME` Real-time APR, `REWARDS` Historical rewards,`ALL`(set to default)
                    product_id (Optional[str] = None):
                    asset (Optional[str] = None):
                    start_time (Optional[int] = None):
                    end_time (Optional[int] = None):
                    current (Optional[int] = None): Currently querying the page. Start from 1. Default:1
                    size (Optional[int] = None): Default:10, Max:100
                    recv_window (Optional[int] = None):

                Returns:
                    ApiResponse[GetFlexibleRewardsHistoryResponse]

                Raises:
                    RequiredError: If a required parameter is missing.

        """

        if type is None:
            raise RequiredError(
                field="type", error_message="Missing required parameter 'type'"
            )

        payload = {
            "type": type,
            "product_id": product_id,
            "asset": asset,
            "start_time": start_time,
            "end_time": end_time,
            "current": current,
            "size": size,
            "recv_window": recv_window,
        }

        return send_request(
            self._session,
            self._configuration,
            method="GET",
            path="/sapi/v1/simple-earn/flexible/history/rewardsRecord",
            payload=payload,
            time_unit=self._configuration.time_unit,
            response_model=GetFlexibleRewardsHistoryResponse,
            is_signed=True,
            signer=self._signer,
        )

    def get_flexible_subscription_record(
        self,
        product_id: Optional[str] = None,
        purchase_id: Optional[str] = None,
        asset: Optional[str] = None,
        start_time: Optional[int] = None,
        end_time: Optional[int] = None,
        current: Optional[int] = None,
        size: Optional[int] = None,
        recv_window: Optional[int] = None,
    ) -> ApiResponse[GetFlexibleSubscriptionRecordResponse]:
        """
                Get Flexible Subscription Record(USER_DATA)
                GET /sapi/v1/simple-earn/flexible/history/subscriptionRecord
                https://developers.binance.com/docs/simple_earn/history/Get-Flexible-Subscription-Record

                Get Flexible Subscription Record

        * The time between `startTime` and `endTime` cannot be longer than 3 months.
        * If `startTime` and `endTime` are both not sent, then the last 30 days' data will be returned.
        * If `startTime` is sent but `endTime` is not sent, the next 30 days' data beginning from `startTime` will be returned.
        * If `endTime` is sent but `startTime` is not sent, the 30 days' data before `endTime` will be returned.

        Weight: 150

                Args:
                    product_id (Optional[str] = None):
                    purchase_id (Optional[str] = None):
                    asset (Optional[str] = None):
                    start_time (Optional[int] = None):
                    end_time (Optional[int] = None):
                    current (Optional[int] = None): Currently querying the page. Start from 1. Default:1
                    size (Optional[int] = None): Default:10, Max:100
                    recv_window (Optional[int] = None):

                Returns:
                    ApiResponse[GetFlexibleSubscriptionRecordResponse]

                Raises:
                    RequiredError: If a required parameter is missing.

        """

        payload = {
            "product_id": product_id,
            "purchase_id": purchase_id,
            "asset": asset,
            "start_time": start_time,
            "end_time": end_time,
            "current": current,
            "size": size,
            "recv_window": recv_window,
        }

        return send_request(
            self._session,
            self._configuration,
            method="GET",
            path="/sapi/v1/simple-earn/flexible/history/subscriptionRecord",
            payload=payload,
            time_unit=self._configuration.time_unit,
            response_model=GetFlexibleSubscriptionRecordResponse,
            is_signed=True,
            signer=self._signer,
        )

    def get_locked_redemption_record(
        self,
        position_id: Optional[int] = None,
        redeem_id: Optional[str] = None,
        asset: Optional[str] = None,
        start_time: Optional[int] = None,
        end_time: Optional[int] = None,
        current: Optional[int] = None,
        size: Optional[int] = None,
        recv_window: Optional[int] = None,
    ) -> ApiResponse[GetLockedRedemptionRecordResponse]:
        """
                Get Locked Redemption Record(USER_DATA)
                GET /sapi/v1/simple-earn/locked/history/redemptionRecord
                https://developers.binance.com/docs/simple_earn/history/Get-Locked-Redemption-Record

                Get Locked Redemption Record

        * The time between `startTime` and `endTime` cannot be longer than 3 months.
        * If `startTime` and `endTime` are both not sent, then the last 30 days' data will be returned.
        * If `startTime` is sent but `endTime` is not sent, the next 30 days' data beginning from `startTime` will be returned.
        * If `endTime` is sent but `startTime` is not sent, the 30 days' data before `endTime` will be returned.

        Weight: 150

                Args:
                    position_id (Optional[int] = None):
                    redeem_id (Optional[str] = None):
                    asset (Optional[str] = None):
                    start_time (Optional[int] = None):
                    end_time (Optional[int] = None):
                    current (Optional[int] = None): Currently querying the page. Start from 1. Default:1
                    size (Optional[int] = None): Default:10, Max:100
                    recv_window (Optional[int] = None):

                Returns:
                    ApiResponse[GetLockedRedemptionRecordResponse]

                Raises:
                    RequiredError: If a required parameter is missing.

        """

        payload = {
            "position_id": position_id,
            "redeem_id": redeem_id,
            "asset": asset,
            "start_time": start_time,
            "end_time": end_time,
            "current": current,
            "size": size,
            "recv_window": recv_window,
        }

        return send_request(
            self._session,
            self._configuration,
            method="GET",
            path="/sapi/v1/simple-earn/locked/history/redemptionRecord",
            payload=payload,
            time_unit=self._configuration.time_unit,
            response_model=GetLockedRedemptionRecordResponse,
            is_signed=True,
            signer=self._signer,
        )

    def get_locked_rewards_history(
        self,
        position_id: Optional[int] = None,
        asset: Optional[str] = None,
        start_time: Optional[int] = None,
        end_time: Optional[int] = None,
        current: Optional[int] = None,
        size: Optional[int] = None,
        recv_window: Optional[int] = None,
    ) -> ApiResponse[GetLockedRewardsHistoryResponse]:
        """
                Get Locked Rewards History(USER_DATA)
                GET /sapi/v1/simple-earn/locked/history/rewardsRecord
                https://developers.binance.com/docs/simple_earn/history/Get-Locked-Rewards-History

                Get Locked Rewards History

        * The time between `startTime` and `endTime` cannot be longer than 3 months.
        * If `startTime` and `endTime` are both not sent, then the last 30 days' data will be returned.
        * If `startTime` is sent but `endTime` is not sent, the next 30 days' data beginning from `startTime` will be returned.
        * If `endTime` is sent but `startTime` is not sent, the 30 days' data before `endTime` will be returned.

        Weight: 150

                Args:
                    position_id (Optional[int] = None):
                    asset (Optional[str] = None):
                    start_time (Optional[int] = None):
                    end_time (Optional[int] = None):
                    current (Optional[int] = None): Currently querying the page. Start from 1. Default:1
                    size (Optional[int] = None): Default:10, Max:100
                    recv_window (Optional[int] = None):

                Returns:
                    ApiResponse[GetLockedRewardsHistoryResponse]

                Raises:
                    RequiredError: If a required parameter is missing.

        """

        payload = {
            "position_id": position_id,
            "asset": asset,
            "start_time": start_time,
            "end_time": end_time,
            "current": current,
            "size": size,
            "recv_window": recv_window,
        }

        return send_request(
            self._session,
            self._configuration,
            method="GET",
            path="/sapi/v1/simple-earn/locked/history/rewardsRecord",
            payload=payload,
            time_unit=self._configuration.time_unit,
            response_model=GetLockedRewardsHistoryResponse,
            is_signed=True,
            signer=self._signer,
        )

    def get_locked_subscription_record(
        self,
        purchase_id: Optional[str] = None,
        asset: Optional[str] = None,
        start_time: Optional[int] = None,
        end_time: Optional[int] = None,
        current: Optional[int] = None,
        size: Optional[int] = None,
        recv_window: Optional[int] = None,
    ) -> ApiResponse[GetLockedSubscriptionRecordResponse]:
        """
                Get Locked Subscription Record(USER_DATA)
                GET /sapi/v1/simple-earn/locked/history/subscriptionRecord
                https://developers.binance.com/docs/simple_earn/history/Get-Locked-Subscription-Record

                Get Locked Subscription Record

        * The time between `startTime` and `endTime` cannot be longer than 3 months.
        * If `startTime` and `endTime` are both not sent, then the last 30 days' data will be returned.
        * If `startTime` is sent but `endTime` is not sent, the next 30 days' data beginning from `startTime` will be returned.
        * If `endTime` is sent but `startTime` is not sent, the 30 days' data before `endTime` will be returned.

        Weight: 150

                Args:
                    purchase_id (Optional[str] = None):
                    asset (Optional[str] = None):
                    start_time (Optional[int] = None):
                    end_time (Optional[int] = None):
                    current (Optional[int] = None): Currently querying the page. Start from 1. Default:1
                    size (Optional[int] = None): Default:10, Max:100
                    recv_window (Optional[int] = None):

                Returns:
                    ApiResponse[GetLockedSubscriptionRecordResponse]

                Raises:
                    RequiredError: If a required parameter is missing.

        """

        payload = {
            "purchase_id": purchase_id,
            "asset": asset,
            "start_time": start_time,
            "end_time": end_time,
            "current": current,
            "size": size,
            "recv_window": recv_window,
        }

        return send_request(
            self._session,
            self._configuration,
            method="GET",
            path="/sapi/v1/simple-earn/locked/history/subscriptionRecord",
            payload=payload,
            time_unit=self._configuration.time_unit,
            response_model=GetLockedSubscriptionRecordResponse,
            is_signed=True,
            signer=self._signer,
        )

    def get_rate_history(
        self,
        product_id: Union[str, None],
        apr_period: Optional[str] = None,
        start_time: Optional[int] = None,
        end_time: Optional[int] = None,
        current: Optional[int] = None,
        size: Optional[int] = None,
        recv_window: Optional[int] = None,
    ) -> ApiResponse[GetRateHistoryResponse]:
        """
                Get Rate History(USER_DATA)
                GET /sapi/v1/simple-earn/flexible/history/rateHistory
                https://developers.binance.com/docs/simple_earn/history/Get-Rate-History

                Get Rate History

        * The time between startTime and endTime cannot be longer than 1 year.
        * If `startTime` and `endTime` are both not sent, then the last 30 days' data will be returned.
        * If `startTime` is sent but `endTime` is not sent, the next 30 days' data beginning from `startTime` will be returned.
        * If `endTime` is sent but `startTime` is not sent, the 30 days' data before `endTime` will be returned.

        Weight: 150

                Args:
                    product_id (Union[str, None]):
                    apr_period (Optional[str] = None): "DAY","YEAR",default"DAY"
                    start_time (Optional[int] = None):
                    end_time (Optional[int] = None):
                    current (Optional[int] = None): Currently querying the page. Start from 1. Default:1
                    size (Optional[int] = None): Default:10, Max:100
                    recv_window (Optional[int] = None):

                Returns:
                    ApiResponse[GetRateHistoryResponse]

                Raises:
                    RequiredError: If a required parameter is missing.

        """

        if product_id is None:
            raise RequiredError(
                field="product_id",
                error_message="Missing required parameter 'product_id'",
            )

        payload = {
            "product_id": product_id,
            "apr_period": apr_period,
            "start_time": start_time,
            "end_time": end_time,
            "current": current,
            "size": size,
            "recv_window": recv_window,
        }

        return send_request(
            self._session,
            self._configuration,
            method="GET",
            path="/sapi/v1/simple-earn/flexible/history/rateHistory",
            payload=payload,
            time_unit=self._configuration.time_unit,
            response_model=GetRateHistoryResponse,
            is_signed=True,
            signer=self._signer,
        )
