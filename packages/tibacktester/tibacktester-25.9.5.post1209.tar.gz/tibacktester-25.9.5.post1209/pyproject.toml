[project]
name = "tibacktester"
version = "25.9.5-1209"
description = "TI-Backtester, yet another quantitative trading library."
readme = "README.md"
authors = [{ name = "tim-hub" }]
requires-python = ">=3.10, <3.13"
license = { text = "Apache" }
keywords = [
    'Algorithm Trading',
    'Backtesting'
]
classifiers = [
    "Programming Language :: Python :: 3",
]
urls = { homepage = "https://github.com/TradeInsight-Info/tibacktester" }


dependencies = [
    "akshare>=1.17.44",
    "alpaca-py>=0.42.1",
    "diskcache>=5.4.0",
    "dotenv>=0.9.9",
    "flake8>=5.0.4",
    "flake8-bugbear>=22.10.25",
    "joblib>=1.2.0",
    "jupyter>=1.1.1",
    "matplotlib>=3.9.1",
    "nbsphinx>=0.8.11",
    "numba>=0.61.0",
    "numpy>=2.2.6, <2.3.0",
    "pandas>=2, <2.3.0",
    "progressbar2>=4.1.1",
    "pytz>=2025.2",
    "ruff==0.12.12",
    "schedule>=1.2.2",
    "scikit-learn>=1.7.1",
    "scikit-optimize>=0.10.2",
    "seaborn>=0.13.2",
    "sphinx>=5.3.0, < 8",
    "sphinx-intl>=2.1.0",
    "sphinx-rtd-theme>=2.0.0",
    "ta-lib>=0.6.7",
    "tensorflow>=2.20.0",
    "tqdm>=4.67.1",
    "types-pytz==2025.2.0.20250809",
    "yahooquery>=2.3.7",
    "yfinance>=0.2.55",
]


[dependency-groups]
dev = [
    "types-pytz>=2025.2.0.20250809",
    "mypy>=1.17.1",
    "pandas-stubs==2.3.0.250703",
    "pytest>=8.4.2",
    "pytest-cov>=4.0.0",
    "pytest-instafail>=0.4.2",
    "pytest-randomly>=3.12.0",
    "pytest-xdist>=3.0.2",
    "ruff>=0.12.12"
]

[tool.setuptools]
package-dir = { "" = "src" }

[tool.setuptools.packages.find]
where = ["src"]


[tool.pytest.ini_options]
pythonpath = ["src"]
testpaths = ["tests"]
addopts = "-ra"

[tool.mypy]
# Python version target
python_version = "3.12"
ignore_missing_imports = true
# Equivalent to setting PYTHONPATH=src
mypy_path = "src"

# Paths to ignore (mypy uses 'exclude' as a regex string, not a list)
exclude = '''
(
    \.bzr|
    \.direnv|
    \.eggs|
    \.git|
    \.git-rewrite|
    \.hg|
    \.ipynb_checkpoints|
    \.mypy_cache|
    \.nox|
    \.pants\.d|
    \.pyenv|
    \.pytest_cache|
    \.pytype|
    \.ruff_cache|
    \.svn|
    \.tox|
    \.venv|
    \.vscode|
    __pypackages__|
    _build|
    buck-out|
    build|
    dist|
    node_modules|
    site-packages|
    venv
)
'''





[tool.ruff]
# Directories/files to lint
src = ["src", "tests"]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "docs"
]

# Same as Black.
line-length = 79
indent-width = 4

# Assume Python 3.12
target-version = "py312"

[tool.ruff.lint.per-file-ignores]
"src/pybroker/*.py" = ["E203", "E402"]
"src/pybroker/__init__.py" = ["F401", "E402"]
"tests/*.py" = ["E203", "E402"]
"tests/test_*" = ["E203", "E402", "F403", "F405"]

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = ["E402"]  # Module level import not at top of file

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "docs"
]

# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"
