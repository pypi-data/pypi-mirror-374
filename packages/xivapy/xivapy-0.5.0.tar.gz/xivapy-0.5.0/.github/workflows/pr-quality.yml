name: PR Quality Checks
on:
  pull_request:
    paths:
      - "src/**"
      - "tests/**"
      - "pyproject.toml"
jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.setup-key.outputs.cache-key }}
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true

      - name: Set up python
        run: uv python install

      - name: Generate cache key
        id: setup-key
        run: |
          echo "cache-key=uv=${{ hashFiles('uv.lock', 'pyproject.toml') }}" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v4
        id: cache-deps
        with:
          path: .venv
          key: ${{ steps.setup-key.outputs.cache-key }}

      - name: Install deps
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: uv sync --frozen

  lint:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true

      - name: Set up python
        run: uv python install

      - name: Restore dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: ${{ needs.setup.outputs.cache-key }}

      - name: Run lint
        run: uv run ruff check src tests --output-format=github

  format:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true

      - name: Set up python
        run: uv python install

      - name: Restore dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: ${{ needs.setup.outputs.cache-key }}

      - name: Check formatting
        run: uv run ruff format --check src tests

  types:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true

      - name: Set up python
        run: uv python install

      - name: Restore dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: ${{ needs.setup.outputs.cache-key }}

      - name: Type checking
        run: uv run mypy src --show-error-codes

  test:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true

      - name: Set up python
        run: uv python install

      - name: Restore dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: ${{ needs.setup.outputs.cache-key }}

      # TODO: upload coverage report later
      - name: Run tests
        run: uv run pytest --cov=src --cov-report=xml
