version: "1.0"

workflows:
  # Simple workflow execution (pre-written workflows)
  execute_existing_workflow:
    description: "Execute a pre-written workflow with specified parameters"
    steps:
      - agent: workflow_orchestrator
        input: "${user_input}"
        output:
          to: user

  # Dynamic workflow generation and execution
  generate_and_execute_workflow:
    description: "Generate a workflow from natural language and execute it"
    steps:
      - agent: workflow_generator
        input: "${user_input}"
        tools: [workflow_executor]
      - agent: workflow_orchestrator
        input: "Execute the workflow generated by workflow_generator: ${workflow_generator.output}"
        tools: [workflow_executor]
        output:
          to: user

  # Workflow generation only (for review/modification)
  generate_workflow_config:
    description: "Generate a workflow configuration for review without execution"
    steps:
      - agent: workflow_generator
        input: "${user_input}"
        output:
          to: user

  # Execution monitoring and management
  monitor_workflow_execution:
    description: "Monitor and manage running workflow executions"
    steps:
      - agent: execution_monitor
        input: "${user_input}"
        output:
          to: user

  # Workflow troubleshooting and debugging
  troubleshoot_workflow:
    description: "Diagnose and resolve workflow issues"
    steps:
      - agent: workflow_troubleshooter
        input: "${user_input}"
        output:
          to: user

  # Workflow advisory and best practices
  workflow_advisory:
    description: "Get advice on workflow design and execution strategies"
    steps:
      - agent: workflow_advisor
        input: "${user_input}"
        output:
          to: user

  # Integration planning and setup
  workflow_integration_planning:
    description: "Plan and configure workflow integrations with external systems"
    steps:
      - agent: workflow_integration_specialist
        input: "${user_input}"
        output:
          to: user

  # Advanced: Multi-step workflow orchestration
  advanced_workflow_orchestration:
    description: "Complex workflow orchestration with generation, validation, and execution"
    steps:
      - agent: workflow_advisor
        input: "Analyze requirements: ${user_input}"
        
      - agent: workflow_generator
        input: "Generate workflow based on analysis: ${workflow_advisor.output} Original request: ${user_input}"
        
      - agent: workflow_troubleshooter
        input: "Validate generated configuration: ${workflow_generator.output}"
        
      - agent: workflow_orchestrator
        input: "Execute validated workflow: ${workflow_generator.output} Validation: ${workflow_troubleshooter.output}"
        
      - agent: execution_monitor
        input: "Monitor execution: ${workflow_orchestrator.output}"
        output:
          to: user

  # Batch workflow processing
  batch_workflow_processing:
    description: "Process multiple workflows or datasets in batch mode"
    steps:
      - agent: workflow_advisor
        input: "Plan batch processing strategy: ${user_input}"
        
      - agent: workflow_generator
        input: "Generate batch workflow configuration: ${workflow_advisor.output}"
        
      - agent: workflow_orchestrator
        input: "Execute batch workflow: ${workflow_generator.output}"
        
      - agent: execution_monitor
        input: "Monitor batch execution: ${workflow_orchestrator.output}"
        output:
          to: user

  # Workflow optimization and performance tuning
  optimize_workflow_performance:
    description: "Analyze and optimize workflow performance"
    steps:
      - agent: execution_monitor
        input: "Analyze current performance: ${user_input}"
        
      - agent: workflow_advisor
        input: "Recommend optimizations: ${execution_monitor.output}"
        
      - agent: workflow_generator
        input: "Generate optimized configuration: ${workflow_advisor.output}"
        
      - agent: workflow_troubleshooter
        input: "Validate optimized configuration: ${workflow_generator.output}"
        output:
          to: user

  # Integration-focused workflow creation
  create_integration_workflow:
    description: "Create workflows specifically designed for external system integration"
    steps:
      - agent: workflow_integration_specialist
        input: "Analyze integration requirements: ${user_input}"
        
      - agent: workflow_generator
        input: "Generate integration workflow: ${workflow_integration_specialist.output}"
        
      - agent: workflow_troubleshooter
        input: "Validate integration configuration: ${workflow_generator.output}"
        
      - agent: workflow_orchestrator
        input: "Test integration workflow: ${workflow_generator.output}"
        output:
          to: user

  # Async workflow management
  async_workflow_management:
    description: "Manage long-running asynchronous workflows"
    steps:
      - agent: workflow_orchestrator
        input: "Start async workflow: ${user_input}"
        
      - agent: execution_monitor
        input: "Monitor async execution: ${workflow_orchestrator.output}"
        output:
          to: user

  # Workflow documentation and analysis
  document_workflow_system:
    description: "Document and analyze existing workflow systems"
    steps:
      - agent: workflow_troubleshooter
        input: "Analyze available workflows: ${user_input}"
        
      - agent: workflow_advisor
        input: "Document best practices and patterns: ${workflow_troubleshooter.output}"
        
      - agent: workflow_integration_specialist
        input: "Identify integration opportunities: ${workflow_advisor.output}"
        output:
          to: user