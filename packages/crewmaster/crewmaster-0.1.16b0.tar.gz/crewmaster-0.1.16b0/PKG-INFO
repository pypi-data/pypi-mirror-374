Metadata-Version: 2.3
Name: crewmaster
Version: 0.1.16b0
Summary: Orchestrates interactions between AI agents, with built-in LLM vendor independence.
Keywords: ai,llm,agent
Author: Imolko
Author-email: info@imolko.com
Requires-Python: >=3.12.3,<3.14
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Operating System :: POSIX :: Linux
Classifier: Framework :: FastAPI
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Requires-Dist: deepeval (>=2.3.8,<3.0.0)
Requires-Dist: fastapi (>=0.115.8,<0.116.0)
Requires-Dist: google (>=3.0.0,<4.0.0)
Requires-Dist: google-api-python-client (>=2.161.0,<3.0.0)
Requires-Dist: google-auth-httplib2 (>=0.2.0,<0.3.0)
Requires-Dist: google-auth-oauthlib (>=1.2.1,<2.0.0)
Requires-Dist: langchain (>=0.3.18,<0.4.0)
Requires-Dist: langchain-cli (>=0.0.35,<0.0.36)
Requires-Dist: langchain-community (>=0.3.17,<0.4.0)
Requires-Dist: langchain-core (>=0.3.35,<0.4.0)
Requires-Dist: langchain-openai (>=0.3.5,<0.4.0)
Requires-Dist: langchain-postgres (>=0.0.13,<0.0.14)
Requires-Dist: langgraph (>=0.2.71,<0.3.0)
Requires-Dist: langserve (>=0.3.1,<0.4.0)
Requires-Dist: mkdocs-mermaid2-plugin (>=1.2.2,<2.0.0)
Requires-Dist: pydantic (>=2.10.6,<3.0.0)
Requires-Dist: pydantic-settings (>=2.7.1,<3.0.0)
Requires-Dist: pytest (>=8.3.4,<9.0.0)
Requires-Dist: pytest-asyncio (>=0.25.3,<0.26.0)
Requires-Dist: pytest-mock (>=3.14.0,<4.0.0)
Requires-Dist: pytest-watcher (>=0.4.3,<0.5.0)
Requires-Dist: python-dotenv (>=1.0.1,<2.0.0)
Requires-Dist: pyyaml (>=6.0.2,<7.0.0)
Requires-Dist: setuptools (>=75.8.0,<76.0.0)
Requires-Dist: structlog (>=25.1.0,<26.0.0)
Requires-Dist: toml (>=0.10.2,<0.11.0)
Description-Content-Type: text/markdown

# Crewmaster

Orchestrates interactions between AI agents, with built-in LLM vendor independence.

## Getting Started

```
pip install crewmaster
```

## Variables de entorno

Necesitas crear un archivo .env con las siguientes variables de entorno de openai

```
LLM_API_KEY_OPEN_AI=DEFAULT
LLM_MODEL_OPEN_AI="gpt-3.5-turbo"
LLM_TEMPERATURE_OPEN_AI=0
```

## Instalar dependencias

1. Activar entorno virtual
```
poetry env use python
```
2. Instalar
```
poetry install
```

## Ejecutar los test 

1. Ejecutar todos los test
```
poetry run pytest
```

2. Se puede utilizar pytest para hacer los tests:
```
poetry run pytest ./ruta/a/probar --capture=no
```

3. Pytest no ofrece un modo "watch".  Si quiere utilizar un modo watch debes  ejecutar:
```
poetry run ptw ./ruta/a/monitorear ./ruta/a/probar --capture=no
```

4. Si se quiere probar sólo algún test, se puede agregar la marca `@pytest.mark.mi_marca` y luego ejecutar con el parámetro -k=mi_marca.

```
# test.py
@pytest.mark.mi_marca
def test_check...

# console
poetry run ptw ./ruta/a/monitorear ./ruta/a/probar --capture=no -k=mi_marca
```

Publicación en pypi
=====

La librería se publica automáticamente en Pypi con cada merge que se hace en los branchs de develop (beta) y master (production).

Puedes ver más información en la [documentación para pypi](docs/pypi.md).
