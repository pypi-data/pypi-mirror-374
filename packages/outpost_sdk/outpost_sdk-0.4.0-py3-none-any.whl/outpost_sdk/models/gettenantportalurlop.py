"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
from outpost_sdk.types import BaseModel
from outpost_sdk.utils import FieldMetadata, PathParamMetadata, QueryParamMetadata
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GetTenantPortalURLGlobalsTypedDict(TypedDict):
    tenant_id: NotRequired[str]


class GetTenantPortalURLGlobals(BaseModel):
    tenant_id: Annotated[
        Optional[str],
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ] = None


class Theme(str, Enum):
    r"""Optional theme preference for the portal."""

    LIGHT = "light"
    DARK = "dark"


class GetTenantPortalURLRequestTypedDict(TypedDict):
    tenant_id: NotRequired[str]
    r"""The ID of the tenant. Required when using AdminApiKey authentication."""
    theme: NotRequired[Theme]
    r"""Optional theme preference for the portal."""


class GetTenantPortalURLRequest(BaseModel):
    tenant_id: Annotated[
        Optional[str],
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ] = None
    r"""The ID of the tenant. Required when using AdminApiKey authentication."""

    theme: Annotated[
        Optional[Theme],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Optional theme preference for the portal."""
