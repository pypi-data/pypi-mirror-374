"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .awss3config import Awss3Config, Awss3ConfigTypedDict
from .awss3credentials import Awss3Credentials, Awss3CredentialsTypedDict
from .topics_union import TopicsUnion, TopicsUnionTypedDict
from enum import Enum
from outpost_sdk.types import BaseModel
from typing import Optional
from typing_extensions import NotRequired, TypedDict


class DestinationCreateAwss3Type(str, Enum):
    r"""Type of the destination. Must be 'aws_s3'."""

    AWS_S3 = "aws_s3"


class DestinationCreateAwss3TypedDict(TypedDict):
    type: DestinationCreateAwss3Type
    r"""Type of the destination. Must be 'aws_s3'."""
    topics: TopicsUnionTypedDict
    r"""\"*\" or an array of enabled topics."""
    config: Awss3ConfigTypedDict
    credentials: Awss3CredentialsTypedDict
    id: NotRequired[str]
    r"""Optional user-provided ID. A UUID will be generated if empty."""


class DestinationCreateAwss3(BaseModel):
    type: DestinationCreateAwss3Type
    r"""Type of the destination. Must be 'aws_s3'."""

    topics: TopicsUnion
    r"""\"*\" or an array of enabled topics."""

    config: Awss3Config

    credentials: Awss3Credentials

    id: Optional[str] = None
    r"""Optional user-provided ID. A UUID will be generated if empty."""
