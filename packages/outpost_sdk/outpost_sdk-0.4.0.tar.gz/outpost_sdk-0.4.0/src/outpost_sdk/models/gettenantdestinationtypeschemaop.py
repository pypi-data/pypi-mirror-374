"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
from outpost_sdk.types import BaseModel
from outpost_sdk.utils import FieldMetadata, PathParamMetadata
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GetTenantDestinationTypeSchemaGlobalsTypedDict(TypedDict):
    tenant_id: NotRequired[str]


class GetTenantDestinationTypeSchemaGlobals(BaseModel):
    tenant_id: Annotated[
        Optional[str],
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ] = None


class GetTenantDestinationTypeSchemaType(str, Enum):
    r"""The type of the destination."""

    WEBHOOK = "webhook"
    AWS_SQS = "aws_sqs"
    RABBITMQ = "rabbitmq"
    HOOKDECK = "hookdeck"
    AWS_KINESIS = "aws_kinesis"
    AWS_S3 = "aws_s3"


class GetTenantDestinationTypeSchemaRequestTypedDict(TypedDict):
    type: GetTenantDestinationTypeSchemaType
    r"""The type of the destination."""
    tenant_id: NotRequired[str]
    r"""The ID of the tenant. Required when using AdminApiKey authentication."""


class GetTenantDestinationTypeSchemaRequest(BaseModel):
    type: Annotated[
        GetTenantDestinationTypeSchemaType,
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""The type of the destination."""

    tenant_id: Annotated[
        Optional[str],
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ] = None
    r"""The ID of the tenant. Required when using AdminApiKey authentication."""
