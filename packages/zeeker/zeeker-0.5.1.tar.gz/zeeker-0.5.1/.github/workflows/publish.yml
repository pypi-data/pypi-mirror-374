name: Publish Python Package

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag to publish (e.g., v1.2.3)'
        required: true
        type: string
      environment:
        description: 'Publishing environment'
        required: true
        default: 'release'
        type: choice
        options:
          - release
          - test-pypi

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]
    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.tag_name || github.ref }}

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true
        cache-dependency-glob: "pyproject.toml"

    - name: Install dependencies
      run: |
        uv sync --group dev

    - name: Run tests
      run: |
        uv run pytest

  deploy:
    runs-on: ubuntu-latest
    needs: [test]
    environment: ${{ github.event.inputs.environment || 'release' }}
    permissions:
      id-token: write
    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.tag_name || github.ref }}

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true
        cache-dependency-glob: "pyproject.toml"

    - name: Build package
      run: |
        uv build

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: ${{ github.event.inputs.environment == 'test-pypi' && 'https://test.pypi.org/legacy/' || '' }}
        print-hash: true