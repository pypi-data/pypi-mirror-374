[build-system]
requires = [ "hatchling",]
build-backend = "hatchling.build"

[project]
name = "exonware-xsystem"
version = "0.0.1.1"
description = "Enterprise-grade Python framework with AI-powered performance optimization, 24 serialization formats, military-grade security, automatic memory leak prevention, circuit breakers, and production monitoring - replaces 50+ dependencies"
readme = "README.md"
requires-python = ">=3.8"
keywords = [ "enterprise", "framework", "serialization", "security", "performance", "monitoring", "threading", "memory-management", "circuit-breaker", "object-pool", "crypto", "ai-optimization", "json", "yaml", "msgpack", "bson", "cbor", "exonware",]
classifiers = [ "Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Information Technology", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3.9", "Programming Language :: Python :: 3.10", "Programming Language :: Python :: 3.11", "Programming Language :: Python :: 3.12", "Programming Language :: Python :: 3.13", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: System :: Systems Administration", "Topic :: Security :: Cryptography", "Topic :: Internet :: WWW/HTTP", "Topic :: Database", "Topic :: System :: Monitoring",]
dependencies = [
    # Core serialization dependencies (17 existing formats)
    "PyYAML>=5.4.0",
    "tomli-w>=1.0.0", 
    "dicttoxml>=1.7.0",
    "xmltodict>=0.12.0",
    "defusedxml>=0.7.0",
    "pymongo>=3.12.0",
    "msgpack>=1.0.0",
    "cbor2>=5.0.0",
    
    # NEW: Schema-based serialization dependencies (stable enterprise formats)
    "fastavro>=1.4.0",
    "protobuf>=3.19.0", 
    "pyarrow>=8.0.0",
    "pandas>=1.3.0",
    "flatbuffers>=2.0.0",
    # Note: pycapnp, thrift, pyorc moved to optional dependencies due to build complexity
    
    # Performance monitoring and system utilities
    "psutil>=5.8.0",
    
    # HTTP client and networking
    "httpx>=0.24.0",
    
    # Cryptographic operations and security
    "cryptography>=3.4.0",
    "bcrypt>=4.0.0",
    
    # Async I/O operations
    "aiofiles>=0.8.0",
    
    # Type checking support
    "typing-extensions>=4.0.0",
]
[[project.authors]]
name = "Eng. Muhammad AlShehri"
email = "connect@exonware.com"

[project.license]
text = "MIT"

[project.optional-dependencies]
dev = [ "pytest>=7.0.0", "pytest-asyncio>=0.21.0", "pytest-cov>=4.0.0", "black>=23.0.0", "isort>=5.12.0", "mypy>=1.0.0",]
serialization = [ "PyYAML>=6.0", "tomli-w>=1.0.0", "dicttoxml>=1.7.4", "xmltodict>=0.12.0", "pymongo>=4.0.0", "msgpack>=1.0.0", "cbor2>=5.0.0",]
yaml = [ "PyYAML>=6.0",]
toml = [ "tomli-w>=1.0.0",]
xml = [ "dicttoxml>=1.7.4", "xmltodict>=0.12.0",]
bson = [ "pymongo>=4.0.0",]
msgpack = [ "msgpack>=1.0.0",]
cbor = [ "cbor2>=5.0.0",]
http = [ "httpx>=0.24.0",]
crypto = [ "cryptography>=41.0.0",]
# Enterprise serialization formats (optional for maximum compatibility)
enterprise-advanced = [ "thrift>=0.15.0", "pyorc>=0.6.0",]
enterprise-capnproto = [ "pycapnp>=1.1.0",]  # Separate due to complex build requirements
enterprise = [ "fastavro>=1.4.0", "protobuf>=3.19.0", "pyarrow>=8.0.0", "pandas>=1.3.0", "flatbuffers>=2.0.0",]
# Complete installation with all stable formats
complete = [ "PyYAML>=6.0", "tomli-w>=1.0.0", "dicttoxml>=1.7.4", "xmltodict>=0.12.0", "pymongo>=4.0.0", "msgpack>=1.0.0", "cbor2>=5.0.0", "httpx>=0.24.0", "cryptography>=41.0.0", "fastavro>=1.4.0", "protobuf>=3.19.0", "pyarrow>=8.0.0", "pandas>=1.3.0", "flatbuffers>=2.0.0",]
# Maximum completeness (includes complex build dependencies)
all = [ "PyYAML>=6.0", "tomli-w>=1.0.0", "dicttoxml>=1.7.4", "xmltodict>=0.12.0", "pymongo>=4.0.0", "msgpack>=1.0.0", "cbor2>=5.0.0", "httpx>=0.24.0", "cryptography>=41.0.0", "fastavro>=1.4.0", "protobuf>=3.19.0", "thrift>=0.15.0", "pyarrow>=8.0.0", "pandas>=1.3.0", "pyorc>=0.6.0", "pycapnp>=1.1.0", "flatbuffers>=2.0.0",]

[project.urls]
Homepage = "https://exonware.com"
Repository = "https://github.com/exonware/xsystem"
Documentation = "https://github.com/exonware/xsystem#readme"

[tool.black]
line-length = 88
target-version = [ "py313",]

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.13"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_generics = true
disallow_untyped_calls = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[tool.pytest.ini_options]
testpaths = [ "tests",]
python_files = [ "test_*.py",]
python_classes = [ "Test*",]
python_functions = [ "test_*",]
addopts = "-v --tb=short"
markers = [ "xsystem_core: Core functionality tests", "xsystem_unit: Unit tests for individual components", "xsystem_integration: Integration tests between components", "xsystem_config: Configuration and setup tests", "xsystem_performance: Performance and benchmarking tests", "xsystem_security: Security validation tests", "xsystem_threading: Threading and concurrency tests", "xsystem_io: I/O operations tests", "xsystem_structures: Data structure tests", "xsystem_patterns: Design pattern tests", "xsystem_monitoring: Monitoring and metrics tests",]

[tool.hatch.build.targets.wheel]
packages = [ "src/exonware",]
py-modules = [ "src/xsystem",]

[tool.hatch.build.targets.sdist]
include = [ "/src", "/tests", "/README.md", "/.github",]
