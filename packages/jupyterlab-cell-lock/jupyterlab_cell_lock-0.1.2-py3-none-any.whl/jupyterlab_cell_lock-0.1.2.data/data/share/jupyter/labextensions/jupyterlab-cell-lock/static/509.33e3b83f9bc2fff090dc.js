"use strict";(self.webpackChunkjupyterlab_cell_lock=self.webpackChunkjupyterlab_cell_lock||[]).push([[509],{509:(e,l,t)=>{t.r(l),t.d(l,{default:()=>n});var a=t(980),o=t(436),c=t(760);const n={id:"jupyterlab-cell-lock:plugin",autoStart:!0,requires:[a.INotebookTracker],activate:(e,l)=>{console.log("jupyterlab-cell-lock extension activated!");const t=(e,l,t)=>{var a;const c=t.currentWidget;if(!c)return void console.warn("No active notebook.");const n=null===(a=c.content.model)||void 0===a?void 0:a.cells;if(!n)return;const d=e=>"boolean"!=typeof e||e;let s=0,r=0;for(let t=0;t<n.length;t++){const a=n.get(t),o=d(a.getMetadata("editable")),c=d(a.getMetadata("deletable"));o!==e||c!==l?(a.setMetadata("editable",e),a.setMetadata("deletable",l),s++):r++}const u=e?"unlocked":"locked";let b="";0===s?b=`All cells were already ${u}.`:(b=`${s} cell${s>1?"s":""} ${s>1?"were":"was"} successfully ${u}.`,r>0&&(b+=` ${r} cell${r>1?"s":""} ${r>1?"were":"was"} already ${u}.`),b+=" All cells are now "+(e?"editable and deletable.":"read-only and undeletable.")),(0,o.showDialog)({title:`Cells ${u}`,body:b,buttons:[o.Dialog.okButton()]})},a="jupyterlab-cell-lock:lock-cells";e.commands.addCommand(a,{label:"Make All Current Cells Read-Only & Undeletable",execute:()=>{t(!1,!1,l)}});const n="jupyterlab-cell-lock:unlock-cells";e.commands.addCommand(n,{label:"Make All Currrent Cells Editable & Deletable",execute:()=>{t(!0,!0,l)}}),l.widgetAdded.connect((l,t)=>{const d=new o.ToolbarButton({label:"Lock all cells",icon:c.lockIcon,onClick:()=>{e.commands.execute(a)},tooltip:"Make all current cells read-only & undeletable"}),s=new o.ToolbarButton({label:"Unlock all cells",icon:c.editIcon,onClick:()=>{e.commands.execute(n)},tooltip:"Make all current cells editable & deletable"});t.toolbar.insertItem(10,"lockCells",d),t.toolbar.insertItem(11,"unlockCells",s)})}}}}]);