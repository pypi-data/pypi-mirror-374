name: Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:
    inputs:
      debug:
        description: 'Enable debug mode'
        required: false
        default: false
        type: boolean

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12', '3.13']

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        cache-dependency-path: |
          pyproject.toml
          requirements*.txt

    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        enable-cache: true
        cache-dependency-glob: "uv.lock"

    - name: Cache Python virtual environment
      uses: actions/cache@v4
      id: venv-cache
      with:
        path: .venv
        key: ${{ runner.os }}-venv-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-venv-${{ matrix.python-version }}-

    - name: Create and Activate Virtual Environment
      if: steps.venv-cache.outputs.cache-hit != 'true'
      run: |
        uv venv .venv

    - name: Activate Virtual Environment
      run: |
        echo "VIRTUAL_ENV=.venv" >> $GITHUB_ENV
        echo "$PWD/.venv/bin" >> $GITHUB_PATH

    - name: Install dependencies
      run: |
        uv pip install -e ".[dev]"

    - name: Cache pre-commit hooks
      uses: actions/cache@v4
      with:
        path: ~/.cache/pre-commit
        key: ${{ runner.os }}-pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pre-commit-

    - name: Run pre-commit
      run: |
        pre-commit run --all-files

    - name: Test with pytest
      run: |
        pytest --cov=nemdatatools --cov-report=xml

    - name: Check commit messages (on pull request)
      if: github.event_name == 'pull_request'
      run: |
        cz check --rev-range ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }}

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        files: ./coverage.xml
        fail_ci_if_error: false
