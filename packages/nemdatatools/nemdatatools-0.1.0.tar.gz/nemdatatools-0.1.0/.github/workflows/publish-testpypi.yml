# This workflow will upload a Python Package to TestPyPI when a release is created
# Modified for uv package manager and TestPyPI publishing

name: Upload Python Package to TestPyPI

on:
  release:
    types: [prereleased]  # Pre-releases go to TestPyPI
  workflow_dispatch:  # Allow manual triggering

permissions:
  contents: read

jobs:
  release-build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Install dependencies and run quality checks
        run: |
          uv sync --all-extras --dev

      - name: Run tests
        run: |
          uv run pytest tests/ --cov=src/nemdatatools --cov-report=term-missing

      - name: Run linting
        run: |
          uv run ruff check src/ tests/
          uv run ruff format --check src/ tests/

      - name: Run type checking
        run: |
          uv run mypy src/nemdatatools --ignore-missing-imports

      - name: Build release distributions
        run: |
          uv build

      - name: Check build artifacts
        run: |
          uv run twine check dist/*

      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/

  testpypi-publish:
    runs-on: ubuntu-latest
    needs:
      - release-build
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write

    # Dedicated environments with protections for publishing are strongly recommended.
    environment:
      name: testpypi
      url: https://test.pypi.org/project/nemdatatools/

    steps:
      - uses: actions/checkout@v4

      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Publish release distributions to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          packages-dir: dist/

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Upload release assets
        run: |
          gh release upload ${{ github.ref_name }} dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Test install the exact version from TestPyPI
        run: |
          python -m venv .venv
          . .venv/bin/activate
          pip install --upgrade pip
          TAG_VERSION="${GITHUB_REF_NAME#v}"
          # Retry installation with backoff
          for i in {1..3}; do
            echo "Installation attempt $i..."
            if pip install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple/ "nemdatatools==$TAG_VERSION"; then
              python -c "import nemdatatools; print(f'✅ Successfully installed nemdatatools v{nemdatatools.__version__}')"
              exit 0
            fi
            sleep $((30 * i))
          done
          echo "❌ Installation failed after 3 attempts"
          exit 1
