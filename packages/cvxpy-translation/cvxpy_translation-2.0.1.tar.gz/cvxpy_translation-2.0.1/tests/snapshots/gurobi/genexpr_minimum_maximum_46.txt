CVXPY
Maximize
  Sum(X, None, False)
Subject To
 60: maximum(X + [[1.00 -2.00]
 [3.00 4.00]], [[1.00 -2.00]
 [3.00 4.00]]) <= 4.0
Bounds
 X free
End
----------------------------------------
AFTER COMPILATION
Minimize
  - C0 - C1 - C2 - C3
Subject To
 R0: C0 - C4 <= -1
 R1: C1 - C5 <= -3
 R2: C2 - C6 <= 2
 R3: C3 - C7 <= -4
 R4: - C4 <= -1
 R5: - C5 <= -3
 R6: - C6 <= 2
 R7: - C7 <= -4
 R8: C4 <= 4
 R9: C5 <= 4
 R10: C6 <= 4
 R11: C7 <= 4
Bounds
 C0 free
 C1 free
 C2 free
 C3 free
 C4 free
 C5 free
 C6 free
 C7 free
End
----------------------------------------
GUROBI
Maximize
  X[0,0] + X[0,1] + X[1,0] + X[1,1]
Subject To
 R0: - X[0,0] + index_1 = 1
 R1: - X[0,1] + index_3 = -2
 R2: - X[1,0] + index_5 = 3
 R3: - X[1,1] + index_7 = 4
 60[0,0]: maximum_2 <= 4
 60[0,1]: maximum_4 <= 4
 60[1,0]: maximum_6 <= 4
 60[1,1]: maximum_8 <= 4
Bounds
 X[0,0] free
 X[0,1] free
 X[1,0] free
 X[1,1] free
 index_1 free
 maximum_2 free
 index_3 free
 maximum_4 free
 index_5 free
 maximum_6 free
 index_7 free
 maximum_8 free
General Constraints
 GC0: maximum_2 = MAX ( index_1 , 1 )
 GC1: maximum_4 = MAX ( index_3 , -2 )
 GC2: maximum_6 = MAX ( index_5 , 3 )
 GC3: maximum_8 = MAX ( index_7 , 4 )
End