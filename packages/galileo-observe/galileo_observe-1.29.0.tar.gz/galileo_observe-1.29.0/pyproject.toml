[project]
name = "galileo-observe"
version = "1.29.0"
description = "ðŸ“ˆ Monitor your LLM integration with Galileo Observe!"
authors = [{ name = "Galileo Technologies Inc.", email = "team@rungalileo.io" }]
readme = "README.md"
requires-python = ">=3.9"
dynamic = ["dependencies"]
license = "Apache-2.0"
keywords = [
    "monitoring",
    "nlp",
    "llm",
    "quality",
    "language_models",
    "galileo",
    "artificial_intelligence",
    "observability",
    "generative_ai",
    "galileo",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Framework :: Pydantic",
    "License :: OSI Approved :: Apache Software License",
    "Framework :: IPython",
    "Framework :: Jupyter",
    "Framework :: Jupyter :: JupyterLab",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: ML",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]
dependencies = []

[project.optional-dependencies]
langchain = ["langchain-core"]
all = ["langchain-core"]

[tool.poetry.dependencies]
python = "^3.9"
pydantic = "^2.11.7"
pytz = ">=2024,<2026"
pyjwt = "^2.8.0"
tiktoken = ">=0.7,<0.12"
langchain-core = { version = "^0.3.74", optional = true }
httpx = ">0.27.0,<=0.29.0"
galileo-core = "^3.62.0"

[tool.poetry.group.test.dependencies]
pytest = "^8.4.1"
coverage = "^7.10.3"
pytest-cov = "^6.2.1"
pytest-xdist = "^3.8.0"
pytest-socket = "^0.7"
requests-mock = "^1.11.0"
pytest-asyncio = "^1.1"
galileo-core = { extras = ["testing"], version = "^3.62.0" }
pytest-env = "^1.1.5"


[tool.poetry.group.dev.dependencies]
pre-commit = "^4.3.0"
mypy = "^1.17.1"
types-requests = "^2.32.4.20250611"
types-pytz = "^2025.2"
invoke = "^2.2.0"


[tool.poetry.group.docs.dependencies]
mkdocs = "^1.6.0"
mkdocs-material = "^9.6.18"
mkdocstrings = "^0.30"
mkdocstrings-python = "^1.16.12"
griffe-fieldz = "^0.3.0"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# Test.
[tool.pytest.ini_options]
env = [
    "GALILEO_CONSOLE_URL=http://localtest:8088",
    "GALILEO_API_KEY=api-1234567890",
]
addopts = [
    # Run tests in parallel.
    "-n",
    "auto",
    # Show local variables in tracebacks.
    "--showlocals",
    # Show extra test summary info as specified by chars.
    "-o",
    "console_output_style=progress",
    # Disable warnings.
    "--disable-warnings",
    # Show slowest 10 test durations.
    "--durations=10",
    # Disable internet access.
    "--disable-socket",
    # Enable local socket access.
    "--allow-hosts=127.0.0.1,localhost",
]
asyncio_default_fixture_loop_scope = "function"

# Linters and formatters.
[tool.ruff]
line-length = 120
fix = true
src = ["src"]

[tool.ruff.format]
skip-magic-trailing-comma = true

[tool.ruff.lint]
select = ["E4", "E7", "E9", "F", "I", "UP", "ASYNC"]
ignore = []

[tool.ruff.lint.isort]
known-first-party = ["galileo_core"]
split-on-trailing-comma = false

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.docformatter]
style = "numpy"
recursive = true
wrap-summaries = 120
wrap-descriptions = 120


[tool.mypy]
mypy_path = ["src"]
disallow_untyped_defs = true
plugins = ["pydantic.mypy"]

# Release.
[tool.semantic_release]
version_variables = ["galileo_observe/__init__.py:__version__"]
version_toml = ["pyproject.toml:project.version"]
version_source = "tag"
commit_message = "chore(release): v{version}\n\nAutomatically generated by python-semantic-release"

[tool.semantic_release.commit_parser_options]
# Release patch version on these tags,
# https://python-semantic-release.readthedocs.io/en/latest/configuration.html#commit-parser-options-dict-str-any
patch_tags = ["fix", "perf", "chore", "docs", "style", "refactor"]
