[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "autocleaneeg-pubmedmcp"
version = "1.1.4"
description = "A Model Context Protocol (MCP) server for PubMed biomedical research database"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Ernest Pedapati", email = "ernest.pedapati@cchmc.org"}
]
maintainers = [
    {name = "Ernest Pedapati", email = "ernest.pedapati@cchmc.org"}
]
keywords = ["mcp", "pubmed", "biomedical", "research", "ai", "claude", "ncbi"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: Indexing/Search"
]
requires-python = ">=3.10"
dependencies = [
    "mcp>=1.0.0",
    "httpx>=0.25.0",
    "pydantic>=2.0.0",
    "email-validator>=2.0.0"
]

[project.urls]
Homepage = "https://github.com/anthropics/claude-code"
Documentation = "https://github.com/anthropics/claude-code/tree/main/examples/minimal_mcp_pubmed"
Repository = "https://github.com/anthropics/claude-code.git"
Issues = "https://github.com/anthropics/claude-code/issues"

[project.scripts]
autocleaneeg-pubmedmcp = "mcp_pubmed.server:cli"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0"
]

[tool.hatch.build.targets.sdist]
include = [
    "/mcp_pubmed",
    "/README.md",
    "/LICENSE"
]

[tool.hatch.build.targets.wheel]
packages = ["mcp_pubmed"]

[tool.ruff]
line-length = 100
target-version = "py310"

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
addopts = "-v --tb=short"
pythonpath = ["."]

[dependency-groups]
dev = [
    "black>=25.1.0",
    "mypy>=1.17.1",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "ruff>=0.12.11",
]
