[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "jraphx"
dynamic = ["version"]
description = "Graph Neural Networks with JAX/NNX"
readme = "README.md"
requires-python = ">=3.11"
license = "Apache-2.0"
authors = [
    {name = "JraphX Contributors"},
]
maintainers = [
    {name = "JraphX Contributors"},
]
keywords = [
    "jax",
    "graph-neural-networks",
    "gnn",
    "machine-learning",
    "deep-learning",
    "flax",
    "nnx",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "jax>=0.7.0",
    "jaxlib>=0.7.0",
    "flax>=0.11.2",
    "numpy>=1.21.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-xdist",
    "black>=22.0",
    "isort>=5.10",
    "mypy>=0.990",
    "ruff>=0.1.0",
]
test = [
    "pytest>=7.0",
    "pytest-xdist",
    "optax>=0.2.5",  # Used in examples
]
examples = [
    "optax>=0.2.5",
    "torch-geometric>=2.0.0",
    "grain>=0.2.12"
]
docs = [
    "sphinx==5.1.1",
    "sphinx-autodoc-typehints==1.19.2",
    "sphinx-copybutton>=0.5.2",
]
all = [
    "jraphx[dev,test,examples,docs]",
]

[project.urls]
Homepage = "https://dirt.design/jraphx/"
Repository = "https://github.com/DBraun/jraphx"
"Bug Tracker" = "https://github.com/DBraun/jraphx/issues"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]
include = ["jraphx*"]

[tool.setuptools.package-data]
jraphx = ["py.typed"]

[tool.setuptools.dynamic]
version = {attr = "jraphx.__version__"}

[tool.black]
line-length = 100
target-version = ["py311", "py312"]

[tool.isort]
profile = "black"
line_length = 100
known_first_party = ["jraphx"]
known_third_party = ["jax", "jaxlib", "flax", "numpy", "optax"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
follow_imports = "normal"
strict_equality = true
show_error_codes = true
pretty = true

[[tool.mypy.overrides]]
module = [
    "jax.*",
    "flax.*",
    "optax.*",
]
ignore_missing_imports = true

[tool.ruff]
line-length = 100
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "UP007", # Use X | Y for type annotations (conflicts with Python 3.11 compatibility)
    "UP038", # Use X | Y in isinstance call instead of (X, Y) - keep tuple syntax for isinstance
    "I001",  # Import block is un-sorted (handled by isort)
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # imported but unused
"tests/*" = ["F401", "F811"]  # allow unused imports and redefinition in tests

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = [
    "--strict-markers",
    "-v",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "gpu: marks tests that require GPU",
]


[tool.taskipy.tasks]
# Formatting tasks
format = "black src/ tests/ && isort src/ tests/"
lint = "ruff check src/ tests/"
typecheck = "mypy src/"
test = "pytest tests/ -v"

# Combined tasks
check = "task lint && task typecheck"
ci = "task format && task check && task test"

# Development tasks
install-dev = "pip install -e '.[dev]'"
install-hooks = "pre-commit install"
pre-commit = "pre-commit run --all-files"
