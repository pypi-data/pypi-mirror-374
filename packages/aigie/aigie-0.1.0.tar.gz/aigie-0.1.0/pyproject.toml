[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "aigie"
dynamic = ["version"]
description = "AI Agent Runtime Error Detection & Remediation with LLM-as-Judge Validation"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Aigie Team", email = "nirel@aigie.io"}
]
maintainers = [
    {name = "Aigie Team", email = "nirel@aigie.io"}
]
keywords = [
    "ai", "artificial-intelligence", "langchain", "langgraph", 
    "error-detection", "monitoring", "validation", "llm", "gemini",
    "agent", "runtime", "remediation", "auto-correction"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Testing",
    "Topic :: System :: Monitoring",
    "Topic :: System :: Logging",
]
requires-python = ">=3.8"
dependencies = [
    "langchain-core>=0.1.0",
    "langchain>=0.1.0",
    "langgraph>=0.0.20",
    "pydantic>=2.0.0",
    "asyncio-mqtt>=0.13.0",
    "psutil>=5.9.0",
    "colorama>=0.4.6",
    "rich>=13.0.0",
    "click>=8.0.0",
    "python-dotenv>=1.0.0",
    "httpx>=0.24.0",
    "aiofiles>=23.0.0",
    "typing-extensions>=4.5.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
cloud = [
    "google-cloud-logging>=3.0.0",
    "google-cloud-monitoring>=2.0.0",
]
gemini = [
    "google-generativeai>=0.3.0",
    "langchain-google-genai>=0.0.5",
    "google-cloud-aiplatform>=1.35.0",
    "vertexai>=1.35.0",
]
all = [
    "google-cloud-logging>=3.0.0",
    "google-cloud-monitoring>=2.0.0",
    "google-generativeai>=0.3.0",
    "langchain-google-genai>=0.0.5",
    "google-cloud-aiplatform>=1.35.0",
    "vertexai>=1.35.0",
]

[project.urls]
Homepage = "https://github.com/NirelNemirovsky/aigie-io"
Documentation = "https://aigie.readthedocs.io"
Repository = "https://github.com/NirelNemirovsky/aigie-io"
"Bug Tracker" = "https://github.com/NirelNemirovsky/aigie-io/issues"

[project.scripts]
aigie = "aigie.cli:main"

[tool.setuptools.dynamic]
version = {attr = "aigie.__version__"}

[tool.setuptools.packages.find]
exclude = ["tests*", "examples*", "venv*", ".venv*"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
    "--cov=aigie",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "e2e: End-to-end tests",
    "slow: Slow running tests",
]
