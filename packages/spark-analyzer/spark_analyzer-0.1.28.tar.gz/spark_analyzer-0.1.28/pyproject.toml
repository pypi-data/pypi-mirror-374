[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "spark_analyzer"
version = "0.1.28"
description = "A tool for analyzing Spark History Server data and identifying optimization opportunities"
readme = "README.md"
authors = [{name = "Onehouse Team", email = "support@onehouse.ai"}]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: Other/Proprietary License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.6"
dependencies = [
    "tabulate>=0.8.10",
    "requests>=2.28.1",
    "configparser>=5.2.0",
    "tqdm>=4.64.0",
    "typer>=0.9.0",
    "rich>=13.0.0",
    "pandas>=1.3.0",
    "openpyxl>=3.0.0"
]
license = { text = "Proprietary" }

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=6.0.0"
]

[project.scripts]
spark-analyzer = "spark_analyzer.cli:main"

[tool.setuptools]
include-package-data = true
packages = { find = { include = ["spark_analyzer*"], exclude = ["tests*", "docs*"] } }

[tool.setuptools.package-data]
spark_analyzer = [
    "resources/*.json",
    "static/images/*.png",
    "lib/configs/*.ini",
    "lib/configs/*.txt",
    "README.md",
    "*.md"
]

[tool.black]
line-length = 88

[tool.ruff]
target-version = "py36"
line-length = 88
select = ["E","F","B","I","C4","UP","ARG","PTH","SIM","ERA","TRY","RUF"]
ignore = ["E501"]

[tool.ruff.isort]
known-first-party = ["spark_analyzer"]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*.py" = ["ARG","B","SIM"]