[project]
name = "mcpevals"
version = "0.1.9"
description = "Pytest-style framework for evaluating Model Context Protocol (MCP) servers."
license = { file = "LICENSE" }
readme = "README.md"
authors = [
    { name = "Sarmad Qadri", email = "sarmad@lastmileai.dev" },
    { name = "Jerron Lim", email = "jerron@lastmileai.dev" }
]
requires-python = ">=3.10"
dependencies = [
    "anthropic>=0.34.0",
    "dspy>=2.6.27",
    "jinja2>=3.1.6",
    "mcp-agent>=0.1.13",
    "opentelemetry-api>=1.34.1",
    "opentelemetry-exporter-otlp>=1.34.1",
    "opentelemetry-sdk>=1.34.1",
    "pydantic>=2.11.5",
    "pytest>=8.4.0",
    "pyyaml>=6.0.2",
    "rich>=13.9.4",
    "typer>=0.16.0",
]

[project.optional-dependencies]
dev = [
    "pre-commit>=4.0.1",
    "pydantic>=2.10.4",
    "pyyaml>=6.0.2",
    "ruff>=0.8.4",
    "tomli>=2.2.1",
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.1",
    "trio>=0.30.0",
    "pytest-cov>=6.1.1",
    "httpx>=0.28.1",
]
pytest = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.1",
]
jaeger = [
    "opentelemetry-exporter-jaeger>=1.21.0",
]

[dependency-groups]
dev = [
    "pre-commit>=4.0.1",
    "pydantic>=2.10.4",
    "pyyaml>=6.0.2",
    "ruff>=0.8.4",
    "tomli>=2.2.1",
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.1",
    "trio>=0.30.0",
    "pytest-cov>=6.1.1",
    "httpx>=0.28.1",
]
pytest = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.1",
]
jaeger = [
    "opentelemetry-exporter-jaeger>=1.21.0",
]

[project.scripts]
mcp-eval = "mcp_eval.cli:app"
mcp-evals = "mcp_eval.cli:app"
mcpeval = "mcp_eval.cli:app"
mcp_eval = "mcp_eval.cli:app"
mcpevals = "mcp_eval.cli:app"

[project.entry-points."pytest11"]
mcp_eval = "mcp_eval.pytest_plugin"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.metadata]
allow-direct-references = true

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.hatch.build.targets.wheel]
packages = ["src/mcp_eval"]

[tool.setuptools.package-data]
mcp_eval = [
    "data/**/*.md",
    "data/**/*.py",
    "data/**/*.yaml",
    "data/**/*.yml",
    "data/**/*.json",
    "templates/**/*.j2"
]
