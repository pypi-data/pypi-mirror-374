# generated by datamodel-codegen:
#   filename:  geojson.json
#   timestamp: 2025-09-05T07:24:06+00:00

from __future__ import annotations

from enum import Enum
from typing import Any, Dict, List, Optional, Union

from pydantic import BaseModel, Field, RootModel


class Type(Enum):
    Point = 'Point'


class GeoJSON1(BaseModel):
    type: Type
    coordinates: List[float] = Field(..., min_length=2)
    bbox: Optional[List[float]] = Field(None, min_length=4)


class Type1(Enum):
    LineString = 'LineString'


class Coordinate(RootModel[List[float]]):
    root: List[float]


class GeoJSON2(BaseModel):
    type: Type1
    coordinates: List[Coordinate] = Field(..., min_length=2)
    bbox: Optional[List[float]] = Field(None, min_length=4)


class Type2(Enum):
    Polygon = 'Polygon'


class GeoJSON3(BaseModel):
    type: Type2
    coordinates: List[List[Coordinate]]
    bbox: Optional[List[float]] = Field(None, min_length=4)


class Type3(Enum):
    MultiPoint = 'MultiPoint'


class GeoJSON4(BaseModel):
    type: Type3
    coordinates: List[List[float]]
    bbox: Optional[List[float]] = Field(None, min_length=4)


class Type4(Enum):
    MultiLineString = 'MultiLineString'


class GeoJSON5(BaseModel):
    type: Type4
    coordinates: List[List[Coordinate]]
    bbox: Optional[List[float]] = Field(None, min_length=4)


class Type5(Enum):
    MultiPolygon = 'MultiPolygon'


class GeoJSON6(BaseModel):
    type: Type5
    coordinates: List[List[List[Coordinate]]]
    bbox: Optional[List[float]] = Field(None, min_length=4)


class Type6(Enum):
    GeometryCollection = 'GeometryCollection'


class Type7(Enum):
    Point = 'Point'


class Geometries(BaseModel):
    type: Type7
    coordinates: List[float] = Field(..., min_length=2)
    bbox: Optional[List[float]] = Field(None, min_length=4)


class Type8(Enum):
    LineString = 'LineString'


class Geometries1(BaseModel):
    type: Type8
    coordinates: List[Coordinate] = Field(..., min_length=2)
    bbox: Optional[List[float]] = Field(None, min_length=4)


class Type9(Enum):
    Polygon = 'Polygon'


class Geometries2(BaseModel):
    type: Type9
    coordinates: List[List[Coordinate]]
    bbox: Optional[List[float]] = Field(None, min_length=4)


class Type10(Enum):
    MultiPoint = 'MultiPoint'


class Geometries3(BaseModel):
    type: Type10
    coordinates: List[List[float]]
    bbox: Optional[List[float]] = Field(None, min_length=4)


class Type11(Enum):
    MultiLineString = 'MultiLineString'


class Geometries4(BaseModel):
    type: Type11
    coordinates: List[List[Coordinate]]
    bbox: Optional[List[float]] = Field(None, min_length=4)


class Type12(Enum):
    MultiPolygon = 'MultiPolygon'


class Geometries5(BaseModel):
    type: Type12
    coordinates: List[List[List[Coordinate]]]
    bbox: Optional[List[float]] = Field(None, min_length=4)


class GeoJSON7(BaseModel):
    type: Type6
    geometries: List[
        Union[
            Geometries, Geometries1, Geometries2, Geometries3, Geometries4, Geometries5
        ]
    ]
    bbox: Optional[List[float]] = Field(None, min_length=4)


class Type13(Enum):
    Feature = 'Feature'


class Type14(Enum):
    Point = 'Point'


class Geometry(BaseModel):
    type: Type14
    coordinates: List[float] = Field(..., min_length=2)
    bbox: Optional[List[float]] = Field(None, min_length=4)


class Type15(Enum):
    LineString = 'LineString'


class Geometry1(BaseModel):
    type: Type15
    coordinates: List[Coordinate] = Field(..., min_length=2)
    bbox: Optional[List[float]] = Field(None, min_length=4)


class Type16(Enum):
    Polygon = 'Polygon'


class Geometry2(BaseModel):
    type: Type16
    coordinates: List[List[Coordinate]]
    bbox: Optional[List[float]] = Field(None, min_length=4)


class Type17(Enum):
    MultiPoint = 'MultiPoint'


class Geometry3(BaseModel):
    type: Type17
    coordinates: List[List[float]]
    bbox: Optional[List[float]] = Field(None, min_length=4)


class Type18(Enum):
    MultiLineString = 'MultiLineString'


class Geometry4(BaseModel):
    type: Type18
    coordinates: List[List[Coordinate]]
    bbox: Optional[List[float]] = Field(None, min_length=4)


class Type19(Enum):
    MultiPolygon = 'MultiPolygon'


class Geometry5(BaseModel):
    type: Type19
    coordinates: List[List[List[Coordinate]]]
    bbox: Optional[List[float]] = Field(None, min_length=4)


class Type20(Enum):
    GeometryCollection = 'GeometryCollection'


class Type21(Enum):
    Point = 'Point'


class Geometries6(BaseModel):
    type: Type21
    coordinates: List[float] = Field(..., min_length=2)
    bbox: Optional[List[float]] = Field(None, min_length=4)


class Type22(Enum):
    LineString = 'LineString'


class Geometries7(BaseModel):
    type: Type22
    coordinates: List[Coordinate] = Field(..., min_length=2)
    bbox: Optional[List[float]] = Field(None, min_length=4)


class Type23(Enum):
    Polygon = 'Polygon'


class Geometries8(BaseModel):
    type: Type23
    coordinates: List[List[Coordinate]]
    bbox: Optional[List[float]] = Field(None, min_length=4)


class Type24(Enum):
    MultiPoint = 'MultiPoint'


class Geometries9(BaseModel):
    type: Type24
    coordinates: List[List[float]]
    bbox: Optional[List[float]] = Field(None, min_length=4)


class Type25(Enum):
    MultiLineString = 'MultiLineString'


class Geometries10(BaseModel):
    type: Type25
    coordinates: List[List[Coordinate]]
    bbox: Optional[List[float]] = Field(None, min_length=4)


class Type26(Enum):
    MultiPolygon = 'MultiPolygon'


class Geometries11(BaseModel):
    type: Type26
    coordinates: List[List[List[Coordinate]]]
    bbox: Optional[List[float]] = Field(None, min_length=4)


class Geometry6(BaseModel):
    type: Type20
    geometries: List[
        Union[
            Geometries6,
            Geometries7,
            Geometries8,
            Geometries9,
            Geometries10,
            Geometries11,
        ]
    ]
    bbox: Optional[List[float]] = Field(None, min_length=4)


class GeoJSON8(BaseModel):
    type: Type13
    id: Optional[Union[float, str]] = None
    properties: Optional[Dict[str, Any]] = None
    geometry: Optional[
        Union[
            Geometry, Geometry1, Geometry2, Geometry3, Geometry4, Geometry5, Geometry6
        ]
    ] = None
    bbox: Optional[List[float]] = Field(None, min_length=4)


class Type27(Enum):
    FeatureCollection = 'FeatureCollection'


class Type28(Enum):
    Feature = 'Feature'


class Type29(Enum):
    Point = 'Point'


class Geometry7(BaseModel):
    type: Type29
    coordinates: List[float] = Field(..., min_length=2)
    bbox: Optional[List[float]] = Field(None, min_length=4)


class Type30(Enum):
    LineString = 'LineString'


class Geometry8(BaseModel):
    type: Type30
    coordinates: List[Coordinate] = Field(..., min_length=2)
    bbox: Optional[List[float]] = Field(None, min_length=4)


class Type31(Enum):
    Polygon = 'Polygon'


class Geometry9(BaseModel):
    type: Type31
    coordinates: List[List[Coordinate]]
    bbox: Optional[List[float]] = Field(None, min_length=4)


class Type32(Enum):
    MultiPoint = 'MultiPoint'


class Geometry10(BaseModel):
    type: Type32
    coordinates: List[List[float]]
    bbox: Optional[List[float]] = Field(None, min_length=4)


class Type33(Enum):
    MultiLineString = 'MultiLineString'


class Geometry11(BaseModel):
    type: Type33
    coordinates: List[List[Coordinate]]
    bbox: Optional[List[float]] = Field(None, min_length=4)


class Type34(Enum):
    MultiPolygon = 'MultiPolygon'


class Geometry12(BaseModel):
    type: Type34
    coordinates: List[List[List[Coordinate]]]
    bbox: Optional[List[float]] = Field(None, min_length=4)


class Type35(Enum):
    GeometryCollection = 'GeometryCollection'


class Type36(Enum):
    Point = 'Point'


class Geometries12(BaseModel):
    type: Type36
    coordinates: List[float] = Field(..., min_length=2)
    bbox: Optional[List[float]] = Field(None, min_length=4)


class Type37(Enum):
    LineString = 'LineString'


class Geometries13(BaseModel):
    type: Type37
    coordinates: List[Coordinate] = Field(..., min_length=2)
    bbox: Optional[List[float]] = Field(None, min_length=4)


class Type38(Enum):
    Polygon = 'Polygon'


class Geometries14(BaseModel):
    type: Type38
    coordinates: List[List[Coordinate]]
    bbox: Optional[List[float]] = Field(None, min_length=4)


class Type39(Enum):
    MultiPoint = 'MultiPoint'


class Geometries15(BaseModel):
    type: Type39
    coordinates: List[List[float]]
    bbox: Optional[List[float]] = Field(None, min_length=4)


class Type40(Enum):
    MultiLineString = 'MultiLineString'


class Geometries16(BaseModel):
    type: Type40
    coordinates: List[List[Coordinate]]
    bbox: Optional[List[float]] = Field(None, min_length=4)


class Type41(Enum):
    MultiPolygon = 'MultiPolygon'


class Geometries17(BaseModel):
    type: Type41
    coordinates: List[List[List[Coordinate]]]
    bbox: Optional[List[float]] = Field(None, min_length=4)


class Geometry13(BaseModel):
    type: Type35
    geometries: List[
        Union[
            Geometries12,
            Geometries13,
            Geometries14,
            Geometries15,
            Geometries16,
            Geometries17,
        ]
    ]
    bbox: Optional[List[float]] = Field(None, min_length=4)


class Feature(BaseModel):
    type: Type28
    id: Optional[Union[float, str]] = None
    properties: Optional[Dict[str, Any]] = None
    geometry: Optional[
        Union[
            Geometry7,
            Geometry8,
            Geometry9,
            Geometry10,
            Geometry11,
            Geometry12,
            Geometry13,
        ]
    ] = None
    bbox: Optional[List[float]] = Field(None, min_length=4)


class GeoJSON9(BaseModel):
    type: Type27
    features: List[Feature]
    bbox: Optional[List[float]] = Field(None, min_length=4)


class GeoJSON(
    RootModel[
        Union[
            GeoJSON1,
            GeoJSON2,
            GeoJSON3,
            GeoJSON4,
            GeoJSON5,
            GeoJSON6,
            GeoJSON7,
            GeoJSON8,
            GeoJSON9,
        ]
    ]
):
    root: Union[
        GeoJSON1,
        GeoJSON2,
        GeoJSON3,
        GeoJSON4,
        GeoJSON5,
        GeoJSON6,
        GeoJSON7,
        GeoJSON8,
        GeoJSON9,
    ] = Field(..., title='GeoJSON')
