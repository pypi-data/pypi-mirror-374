# generated by datamodel-codegen:
#   filename:  project/layers/heatmapLayer.json
#   timestamp: 2025-09-05T07:24:06+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, ConfigDict, Field, confloat


class SymbologyState(BaseModel):
    renderType: str
    colorRamp: Optional[str] = 'viridis'


class IHeatmapLayer(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    source: str = Field(..., description='The id of the source')
    opacity: Optional[confloat(ge=0.0, le=1.0, multiple_of=0.1)] = Field(
        1, description='The opacity of the source'
    )
    radius: float = Field(..., description='Radius size in pixels')
    blur: float = Field(..., description='Blur size in pixels')
    color: Optional[List[str]] = ['#00f', '#0ff', '#0f0', '#ff0', '#f00']
    symbologyState: Optional[SymbologyState] = Field(
        None, description='The state of the symbology panel options'
    )
