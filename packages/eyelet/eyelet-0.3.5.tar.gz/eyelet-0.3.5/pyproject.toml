[project]
name = "eyelet"
version = "0.3.5"
description = "Hook orchestration system for AI agents with SQLite logging and powerful analytics"
readme = "README.md"
authors = [{name = "Brian Morin"}]
license = {text = "MIT"}
requires-python = ">=3.11"
keywords = ["hooks", "ai", "automation", "orchestration", "claude-code", "eyelet"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "click>=8.1.7",
    "textual>=0.47.0",
    "rich>=13.7.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "httpx>=0.25.2",
    "watchdog>=3.0.0",
    "jinja2>=3.1.2",
    "jsonschema>=4.20.0",
    "sqlalchemy>=2.0.23",
    "claude-code-sdk>=0.0.17",
    "pyyaml>=6.0.1",
]

[project.optional-dependencies]
completion = ["click-completion>=0.5.2", "psutil>=5.9.0"]
dev = ["pytest>=7.4.0", "pytest-cov>=4.1.0", "ruff>=0.1.0", "mypy>=1.0.0"]

[project.urls]
Homepage = "https://github.com/bdmorin/eyelet"
Documentation = "https://github.com/bdmorin/eyelet#readme"
Repository = "https://github.com/bdmorin/eyelet"
Issues = "https://github.com/bdmorin/eyelet/issues"

[build-system]
requires = ["setuptools>=65", "wheel"]
build-backend = "setuptools.build_meta"

[project.scripts]
eyelet = "eyelet.cli.main:cli"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
eyelet = ["schemas/*.json", "tui/*.tcss"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "--cov=eyelet --cov-report=xml --cov-report=term-missing"

[tool.ruff]
target-version = "py311"
line-length = 88

[tool.ruff.format]
# Use the same settings as Black
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by ruff format
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
follow_imports = "silent"
no_implicit_reexport = true
warn_redundant_casts = true
warn_unused_ignores = true

[dependency-groups]
dev = [
    "pytest-asyncio>=1.1.0",
    "pytest-cov>=6.2.1",
    "pytest-textual-snapshot>=1.1.0",
]
