[tool.poetry]
name = "just-semantic-search-server-cuda"
version = "0.4.5"
description = "Core interfaces for hybrid search implementations (CUDA version)"
authors = ["Anton Kulaga <antonkulaga@gmail.com>"]
license = "Apache-2.0"
readme = "README.md"
keywords = ["python", "llm", "gpu", "cuda", "science", "review", "hybrid search", "semantic search", "agent", "server"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Operating System :: Unix",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
]

packages = [
    { include = "just_semantic_search" }
]

include = [
    "bin/*.sh",
    "bin/*.bat"
]

[[tool.poetry.source]]
name = "torch-cpu"
url = "https://download.pytorch.org/whl/cpu"
priority = "explicit"

[[tool.poetry.source]]
name = "torch-gpu"
url = "https://download.pytorch.org/whl/cu124"
priority = "explicit"

[tool.poetry.scripts]
index-markdown = "just_semantic_search.server.index_markdown:app"
parse-papers = "just_semantic_search.server.scripts:parse_papers"


[tool.poetry.dependencies]
python = ">=3.10,<3.15"
just-semantic-search-scholar-cuda = "*"
just-semantic-search-meili-cuda = "*"
just-agents-web = ">=0.8.3"
python-multipart = ">=0.0.20" #for file uploads
mistral-ocr-parser = ">=0.1.0"

[build-system]
requires = ["poetry-core>=2.1.1", "poetry-dynamic-versioning>=1.4.1"]
build-backend = "poetry.core.masonry.api" 

[tool.poetry-dynamic-versioning]
enable = false
vcs = "git"
style = "semver"
pattern = "v?(?P<base>\\d+\\.\\d+\\.\\d+)"
format-jinja = "{{base}}"


[tool.poetry.group.dev.dependencies]
just-semantic-search-meili-cuda = { path = "../meili", develop = true }
just-semantic-search-scholar-cuda = { path = "../scholar", develop = true }
just-semantic-search-cuda = { path = "../core", develop = true }
