"""Analyzer scaffold for {CLASS_NAME}."""

from __future__ import annotations

from sentineliqsdk import Analyzer
from sentineliqsdk.models import AnalyzerReport, ModuleMetadata


class {CLASS_NAME}(Analyzer):
    """Analyzer: add logic in execute()."""

    METADATA = ModuleMetadata(
        name="{CLASS_NAME}",
        description="Analyzer scaffold",
        author=("SentinelIQ Team <team@sentineliq.com.br>",),
        pattern="example",
        doc_pattern="MkDocs module page; programmatic usage",
        doc="",
        version_stage="DEVELOPER",
    )

    def execute(self) -> AnalyzerReport:
        observable = self.get_data()
        taxonomy = self.build_taxonomy("safe", "example", "static", str(observable))
        full_report = {
            "observable": observable,
            "verdict": "safe",
            "taxonomy": [taxonomy.to_dict()],
            "metadata": self.METADATA.to_dict(),
        }
        return self.report(full_report)

    def run(self) -> AnalyzerReport:
        return self.execute()
