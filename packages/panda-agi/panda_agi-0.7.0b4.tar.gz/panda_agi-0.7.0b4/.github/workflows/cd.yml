name: CD - Build and Deploy

on:
  push:
    branches: [main]
    paths:
      - "examples/ui/**"
      - ".github/workflows/cd.yml"
  workflow_dispatch: # Allow manual triggering

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/panda-agi-ui

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch # Will produce 'main' tag on main branch
            type=sha,format=short # Will produce short SHA tag (e.g., d6eb994)

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: ./examples/ui/backend
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}-backend
            ${{ steps.meta.outputs.version == 'main' && format('{0}/{1}:main-backend', env.REGISTRY, env.IMAGE_NAME) || '' }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./examples/ui/frontend
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}-frontend
            ${{ steps.meta.outputs.version == 'main' && format('{0}/{1}:main-frontend', env.REGISTRY, env.IMAGE_NAME) || '' }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Update image tags in docker-compose.prod.yml
        run: |
          # The main tags are now consistently main-backend and main-frontend
          # No need to extract from steps.meta.outputs.tags for this specific purpose
          # The docker-compose.prod.yml should already be using these or be updated to use them.
          # For now, we ensure the sed commands use these literal tags.

          echo "Ensuring docker-compose.prod.yml uses main-backend and main-frontend tags for GHCR images."

          # This sed command will replace any ghcr.io/sinaptik-ai/panda-agi/panda-agi-ui image
          # ending with -backend with the literal main-backend tag.
          sed -i "s|image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:[a-zA-Z0-9_.-]*-backend|image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:main-backend|g" examples/ui/docker-compose.prod.yml
          sed -i "s|image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:[a-zA-Z0-9_.-]*-frontend|image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:main-frontend|g" examples/ui/docker-compose.prod.yml

          # Show the changes
          echo "Updated docker-compose.prod.yml:"
          cat examples/ui/docker-compose.prod.yml

      - name: Commit and push updated docker-compose.prod.yml
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add examples/ui/docker-compose.prod.yml
          git diff --quiet && git diff --staged --quiet || git commit -m "Update image tags in docker-compose.prod.yml [skip ci]"
          git push
