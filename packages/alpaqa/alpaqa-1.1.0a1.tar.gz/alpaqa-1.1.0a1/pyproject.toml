[project]
name = "alpaqa"
readme = "python/README.rst"
requires-python = ">=3.9"
license = "LGPL-3.0-or-later"
license-files = ["LICENSE"]
authors = [{ "name" = "Pieter P", "email" = "pieter.p.dev@outlook.com" }]
keywords = ["optimization", "panoc", "alm", "mpc"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Operating System :: POSIX :: Linux",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: MacOS",
    "Typing :: Typed",
]
dependencies = ["numpy<3"]
dynamic = ["version", "description"]

[project.optional-dependencies]
casadi = ["casadi~=3.7.1", "cmake>=3.28,<5", "ninja>=1.11.1,<2"]
docs = [
    "breathe~=4.36.0",
    "sphinx~=8.2.3",
    "sphinx-tabs~=3.4.7",
    "sphinxcontrib-matlabdomain~=0.22.1",
    "sphinxcontrib-moderncmakedomain~=3.29.0",
    "furo==2025.7.19",
    "casadi~=3.7.1",
    "cmake>=3.28,<5",
    "ninja>=1.11.1,<2",
    "matplotlib",
]
test = [
    "pytest>=7.2.0,<9",
    "qpalm~=1.2.1",
    "scipy>=1.9.3,<2",
    "casadi~=3.7.1",
    "cmake>=3.28,<5",
    "ninja>=1.11.1,<2",
]

[project.urls]
"Documentation" = "https://kul-optec.github.io/alpaqa"
"Source" = "https://github.com/kul-optec/alpaqa"
"Bug Tracker" = "https://github.com/kul-optec/alpaqa/issues"

[project.scripts]
alpaqa = "alpaqa.__main__:main"

[build-system]
requires = [
    "py-build-cmake~=0.6.0a2",
    "pybind11-stubgen~=2.5.5",
    "numpy<3",
    "conan~=2.20.0",
]
build-backend = "py_build_cmake.build"

# ---------------------------------------------------------------------------- #

[tool.py-build-cmake.module]
name = "alpaqa"
directory = "python"

[tool.py-build-cmake.sdist]
include = [
    "README.md",
    "CMakeLists.txt",
    "CMakePresets.json",
    "conanfile.py",
    "src",
    "cmake",
    "interfaces",
    "applications",
    "test",
    "python/test",
    "python/alpaqa-debug",
]

[tool.py-build-cmake.conan.cmake]
minimum_version = "4.1"
source_path = "."
args = ["-Wdev"]
build_type = "Release"
install_components = ["python_modules", "python_stubs"]
[tool.py-build-cmake.conan]
args = [
    "--build=missing",
    "-o&:with_python=True",
    "-o&:with_examples=False",
    "-o&:with_drivers=False",
    "-o&:with_gradient_checker=False",
    "-o&:with_single_precision=False",
    "-o&:with_long_double=True",
    "-o&:with_quad_precision=False",
    "-o&:with_json=False",
    "-c*:tools.build:skip_test=True",
    "-s",
    "compiler.cppstd=23",
]
[tool.py-build-cmake.linux.conan.cmake]
generator = "Ninja Multi-Config"
[tool.py-build-cmake.mac.conan.cmake]
generator = "Ninja Multi-Config"
[tool.py-build-cmake.windows.conan]
args = ['-c*:tools.build:compiler_executables*={"fortran": "FC-NOTFOUND"}']

[tool.py-build-cmake.stubgen]
args = ["-v"]

[tool.py-build-cmake.editable]
mode = "symlink"

# ---------------------------------------------------------------------------- #

[tool.cibuildwheel]
archs = ["auto64"]
skip = "pp311-*"                               # https://github.com/pypy/pypy/issues/5328
build-frontend = "build"
environment = { PY_BUILD_CMAKE_VERBOSE = "1" }
test-command = "pytest {package}/python/test"
test-extras = ["test"]
test-skip = ["*-{win32,win_arm64}", "pp*", "cp314*"]
[tool.cibuildwheel.config-settings]
--local = "scripts/ci/py-build-cmake.toml"

[tool.cibuildwheel.macos]
archs = ["arm64", "x86_64"]
environment = { PY_BUILD_CMAKE_VERBOSE = "1", MACOSX_DEPLOYMENT_TARGET = "10.15" }

[tool.cibuildwheel.windows]
archs = ["AMD64"]

[tool.cibuildwheel.pyodide]
archs = ["wasm32"]

# ---------------------------------------------------------------------------- #

[tool.pytest.ini_options]
minversion = "6.0"
testpaths = ["python/test"]

[tool.mypy]
plugins = ["numpy.typing.mypy_plugin"]
