@PACKAGE_INIT@

include(CMakeFindDependencyMacro)

set(ALPAQA_AVAILABLE_COMPONENTS "Core" "CasADi" "Dl" "Extra")
# Unless the user requested only "Dl", always require "Core"
if (NOT alpaqa_FIND_COMPONENTS STREQUAL "Dl")
    list(PREPEND alpaqa_FIND_COMPONENTS "Core")
    if (alpaqa_FIND_REQUIRED)
        set(alpaqa_FIND_REQUIRED_Core True)
    endif()
endif()

set(ALPAQA_FIND_QUIET_ARG)
if(alpaqa_FIND_QUIETLY)
    set(ALPAQA_FIND_QUIET_ARG QUIET)
endif()

foreach(COMP IN LISTS ALPAQA_AVAILABLE_COMPONENTS)
    set(alpaqa${COMP}_DIR ${CMAKE_CURRENT_LIST_DIR})
endforeach()

foreach(COMP IN LISTS alpaqa_FIND_COMPONENTS)
    if (NOT COMP IN_LIST ALPAQA_AVAILABLE_COMPONENTS)
        set(alpaqa_NOT_FOUND_MESSAGE "Invalid component: ${COMP}")
        set(alpaqa_FOUND False)
        return()
    endif()
    set(ALPAQA_FIND_REQUIRED_ARG)
    if(alpaqa_FIND_REQUIRED_${COMP})
        set(ALPAQA_FIND_REQUIRED_ARG REQUIRED)
    endif()
    find_package(alpaqa${COMP}
        ${ALPAQA_FIND_QUIET_ARG} ${ALPAQA_FIND_REQUIRED_ARG})
    if (NOT alpaqa${COMP}_FOUND)
        if (alpaqa_FIND_REQUIRED_${COMP})
            set(alpaqa_NOT_FOUND_MESSAGE "Missing required components: ${COMP} (find_package(alpaqa${COMP}) failed)")
            set(alpaqa_FOUND False)
            return()
        endif()
        set(alpaqa_${COMP}_FOUND False)
    else()
        set(alpaqa_${COMP}_FOUND True)
    endif()
endforeach()

set(ALPAQA_WITH_QUAD_PRECISION @ALPAQA_WITH_QUAD_PRECISION@ CACHE INTERNAL "")
set(ALPAQA_WITH_SINGLE_PRECISION @ALPAQA_WITH_SINGLE_PRECISION@ CACHE INTERNAL "")
set(ALPAQA_WITH_LONG_DOUBLE @ALPAQA_WITH_LONG_DOUBLE@ CACHE INTERNAL "")
set(ALPAQA_WITH_DRIVERS @ALPAQA_WITH_DRIVERS@ CACHE INTERNAL "")
set(ALPAQA_WITH_OCP @ALPAQA_WITH_OCP@ CACHE INTERNAL "")
set(ALPAQA_WITH_CXX_23 @ALPAQA_WITH_CXX_23@ CACHE INTERNAL "")

if (NOT _@PROJECT_NAME@_PRINTED AND alpaqa_Core_FOUND)
    get_target_property(ALPAQA_CONFIGS alpaqa::alpaqa IMPORTED_CONFIGURATIONS)
    message(STATUS "Found @PROJECT_NAME@ @PROJECT_VERSION@: ${CMAKE_CURRENT_LIST_DIR} (available configs: ${ALPAQA_CONFIGS}, installed components: @ALPAQA_OPTIONAL_COMPONENTS@, installed targets: @ALPAQA_INSTALL_TARGETS@)")
    set(_@PROJECT_NAME@_PRINTED On CACHE INTERNAL "")
endif()

check_required_components(alpaqa)
