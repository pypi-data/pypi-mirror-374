import casadi as cs
from _typeshed import Incomplete
from typing import Callable

SECOND_ORDER_SPEC: Incomplete

def generate_casadi_problem(f: cs.Function, g: cs.Function | None, second_order: SECOND_ORDER_SPEC = 'no', name: str = 'alpaqa_problem', sym: Callable = ...) -> cs.CodeGenerator: ...
def generate_casadi_control_problem(f: cs.Function, l: cs.Function, l_N: cs.Function, h: cs.Function = None, h_N: cs.Function = None, c: cs.Function = None, c_N: cs.Function = None, name: str = 'alpaqa_control_problem') -> cs.CodeGenerator: ...
def write_casadi_problem_data(sofile, C, D, param, l1_reg, penalty_alm_split, name): ...
def write_casadi_control_problem_data(sofile, U, D, D_N, x_init, param, penalty_alm_split: int = 0, penalty_alm_split_N=None): ...
