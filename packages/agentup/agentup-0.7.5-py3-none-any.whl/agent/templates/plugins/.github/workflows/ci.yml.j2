name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test Python {% raw %}${{ matrix.python-version }}{% endraw %}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

    - name: Install uv
      uses: astral-sh/setup-uv@38f3f104447c67c051c4a08e39b64a148898af3a # v4
      with:
        enable-cache: true
        cache-dependency-glob: |
          **/pyproject.toml
          **/uv.lock

    - name: Set up Python {% raw %}${{ matrix.python-version }}{% endraw %}
      run: |
        uv python install {% raw %}${{ matrix.python-version }}{% endraw %}
        uv python pin {% raw %}${{ matrix.python-version }}{% endraw %}

    - name: Install dependencies
      run: |
        make install-dev

    - name: Check code formatting
      run: |
        make format-check

    - name: Run linting
      run: |
        make lint

  build:
    name: Build Package
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

    - name: Install uv
      uses: astral-sh/setup-uv@38f3f104447c67c051c4a08e39b64a148898af3a # v4
      with:
        enable-cache: true

    - name: Set up Python
      run: |
        uv python install 3.11
        uv python pin 3.11

    - name: Install dependencies
      run: |
        make install

    - name: Build package
      run: |
        make build

    - name: Check package
      run: |
        make build-check

    - name: Upload build artifacts
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
      with:
        name: dist
        path: dist/
