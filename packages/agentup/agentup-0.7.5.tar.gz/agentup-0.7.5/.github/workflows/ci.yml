name: CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'src/**'
      - 'tests/**'
      - 'Makefile'
      - 'pyproject.toml'
      - 'uv.lock'
      - '.github/workflows/ci.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'src/**'
      - 'tests/**'
      - 'Makefile'
      - 'pyproject.toml'
      - 'uv.lock'
      - '.github/workflows/ci.yml' 

jobs:
  test:
    name: Test Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v4

    - name: Install uv
      uses: astral-sh/setup-uv@557e51de59eb14aaaba2ed9621916900a91d50c6 # v4
      with:
        enable-cache: true
        cache-dependency-glob: |
          **/pyproject.toml
          **/uv.lock

    - name: Set up Python ${{ matrix.python-version }}
      run: |
        uv python install ${{ matrix.python-version }}
        uv python pin ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        make install-dev

    - name: Check code formatting
      run: |
        make format-check

    - name: Run linting
      run: |
        make lint

    - name: Run unit tests with coverage
      run: |
        make test-unit-coverage

    - name: Run thirdparty tests (CrewAI integration)
      run: |
        # Tests should pass with CrewAI installed via --all-extras
        uv run pytest tests/thirdparty/ -v

    - name: Upload coverage reports
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
      with:
        name: coverage-${{ matrix.python-version }}
        path: htmlcov/

    - name: Upload coverage to GitHub
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
      if: matrix.python-version == '3.11'
      with:
        name: coverage-report
        path: |
          .coverage
          coverage.xml

  test-minimal:
    name: Test Minimal Installation (without CrewAI)
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v4

    - name: Install uv
      uses: astral-sh/setup-uv@557e51de59eb14aaaba2ed9621916900a91d50c6 # v4
      with:
        enable-cache: true
        cache-dependency-glob: |
          **/pyproject.toml
          **/uv.lock

    - name: Set up Python
      run: |
        uv python install 3.11
        uv python pin 3.11

    - name: Install minimal dependencies (without CrewAI)
      run: |
        # Install without extras to verify optional dependencies work
        uv sync --dev
        uv pip install -e .

    - name: Verify CrewAI is not installed
      run: |
        # This should fail if CrewAI is installed
        ! uv run python -c "import crewai" 2>/dev/null
        echo "✓ CrewAI is not installed (as expected for minimal installation)"

    - name: Test imports work without CrewAI
      run: |
        # Test that the integration module can be imported without CrewAI
        uv run python -c "
        import warnings
        with warnings.catch_warnings():
            warnings.simplefilter('ignore')
            try:
                from agent.integrations.crewai import AgentUpTool
                print('ERROR: AgentUpTool should not be importable without CrewAI')
                exit(1)
            except ImportError as e:
                print(f'✓ Expected ImportError: {e}')
        
        # But the module itself should import with a warning
        from agent.integrations import crewai
        print('✓ Integration module imports successfully')
        "

    - name: Run core tests without CrewAI
      run: |
        # Run core tests to ensure they don't depend on CrewAI
        uv run pytest tests/test_core/ tests/test_cli/ -v --tb=short

  build:
    name: Build Package
    runs-on: ubuntu-latest
    needs: [test, test-minimal]

    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v4

    - name: Install uv
      uses: astral-sh/setup-uv@557e51de59eb14aaaba2ed9621916900a91d50c6 # v4
      with:
        enable-cache: true

    - name: Set up Python
      run: |
        uv python install 3.11
        uv python pin 3.11

    - name: Install dependencies
      run: |
        make install

    - name: Build package
      run: |
        make build

    - name: Check package
      run: |
        make build-check

    - name: Upload build artifacts
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
      with:
        name: dist
        path: dist/
