# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .attachment_model import AttachmentModel
from .content_model import ContentModel


class SourceModel(UniversalBaseModel):
    collections: typing.Optional[typing.List[str]] = None
    id: typing.Optional[str] = None
    title: typing.Optional[str] = None
    type: typing.Optional[str] = None
    description: typing.Optional[str] = None
    note: typing.Optional[str] = None
    url: typing.Optional[str] = None
    timestamp: typing.Optional[str] = None
    content: typing.Optional[ContentModel] = None
    cortex_metadata: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = None
    tenant_metadata: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = None
    document_metadata: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = None
    meta: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = None
    attachments: typing.Optional[typing.List[AttachmentModel]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
