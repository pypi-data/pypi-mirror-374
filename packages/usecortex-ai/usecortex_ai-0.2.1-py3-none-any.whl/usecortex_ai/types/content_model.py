# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata


class ContentModel(UniversalBaseModel):
    text: typing.Optional[str] = None
    html_base_64: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="html_base64")] = None
    csv_base_64: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="csv_base64")] = None
    markdown: typing.Optional[str] = None
    files: typing.Optional[typing.List[typing.Dict[str, typing.Optional[typing.Any]]]] = None
    layout: typing.Optional[typing.List[typing.Dict[str, typing.Optional[typing.Any]]]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
