# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .extended_context import ExtendedContext


class SearchChunk(UniversalBaseModel):
    chunk_uuid: str
    source_id: str
    chunk_content: str
    source_type: typing.Optional[str] = None
    source_upload_time: typing.Optional[str] = None
    source_title: typing.Optional[str] = None
    source_last_updated_time: typing.Optional[str] = None
    source_collection: typing.Optional[typing.List[str]] = None
    layout: typing.Optional[str] = None
    source_url: typing.Optional[str] = None
    version: typing.Optional[str] = None
    relevancy_score: typing.Optional[float] = None
    cortex_metadata: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = None
    document_metadata: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = None
    tenant_metadata: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = None
    extra_context: typing.Optional[ExtendedContext] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
