[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "hyperion-opt"
version = "0.1.0"
description = "Event-driven agentic hyperparameter optimization framework"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [{name = "Joshua Yin"}]
keywords = ["hyperparameter-optimization", "machine-learning", "automl", "bayesian-optimization", "grid-search", "random-search", "beam-search", "population-based-training", "event-driven", "agentic"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]

dependencies = [
    "pydantic>=2.11.0",
    "sqlalchemy>=2.0.0",
    "aiosqlite>=0.21.0",
    "aiofiles>=24.1.0",
    "click>=8.2.0",
    "pyyaml>=6.0.2",
    "cloudpickle>=3.1.0",
    "nest-asyncio>=1.6.0",
]

[project.urls]
Homepage = "https://github.com/Subjective/hyperion"
Repository = "https://github.com/Subjective/hyperion.git"
Issues = "https://github.com/Subjective/hyperion/issues"
Documentation = "https://github.com/Subjective/hyperion/tree/main/docs"

[project.optional-dependencies]
dev = [
    "pytest>=8.4.0",
    "pytest-asyncio>=1.1.0",
    "pytest-cov>=6.2.0",
    "ruff>=0.8.0",
    "pyright>=1.1.400",
    "pre-commit>=4.3.0",
    "fastapi>=0.116.0",
    "uvicorn>=0.35.0",
    "websockets>=15.0.0",
    "build>=1.3.0",
    "twine>=6.2.0",
]

# Optional extras by feature
viz = [
    "matplotlib>=3.10.6",
]
ml = [
    "numpy>=2.3.2",
    "scikit-learn>=1.7.1",
    "scipy>=1.14.0",
    "torch>=2.8.0",
    "torchvision>=0.23.0",
]

[tool.setuptools.packages.find]
where = ["src"]

[tool.pyright]
pythonVersion = "3.11"
typeCheckingMode = "basic"
include = ["src", "tests"]
strict = ["src"]
venvPath = "."
venv = ".venv"

[tool.ruff]
src = ["src"]

[tool.ruff.lint]
select = ["E", "F", "UP", "B", "SIM", "I"]

[tool.ruff.lint.pycodestyle]
max-line-length = 120

[tool.ruff.lint.pydoclint]
ignore-one-line-docstrings = true

[tool.ruff.format]
# Use default Black-compatible formatting
