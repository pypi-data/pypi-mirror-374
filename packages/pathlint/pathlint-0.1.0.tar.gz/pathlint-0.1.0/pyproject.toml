[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "pathlint"
dynamic = ["version"]
description = "Fast linter to detect os.path usage and encourage pathlib adoption"
readme = "README.md"
license = {text = "MIT"}
authors = [{name = "Peter Szemraj", email = "peterszemraj+dev@gmail.com"}]
requires-python = ">=3.8"
keywords = ["linter", "pathlib", "os.path", "code-quality", "static-analysis", "ast", "python-linter"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Quality Assurance",
]

[project.scripts]
pathlint = "pathlint.linter:main"

[project.urls]
Repository = "https://github.com/pszemraj/pathlint"
Issues = "https://github.com/pszemraj/pathlint/issues"
Changelog = "https://github.com/pszemraj/pathlint/releases"
Documentation = "https://github.com/pszemraj/pathlint#readme"

[project.optional-dependencies]
test = ["pytest>=7.0", "pytest-cov>=4.0"]
dev = ["ruff>=0.1.0", "mypy>=1.0"]

[tool.ruff]
target-version = "py38"
line-length = 100

[tool.ruff.lint]
select = ["E", "F", "W", "I", "B", "UP", "RUF", "SIM"]
ignore = ["E501"]

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "--verbose --cov=pathlint"

[tool.coverage.run]
source = ["pathlint"]
branch = true

[tool.coverage.report]
exclude_lines = ["pragma: no cover", "def __repr__", "raise NotImplementedError"]

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "src/pathlint/_version.py"
