name: Build and Publish

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build_wheels_linux_sse2:
    name: Build wheels on Linux (SSE2)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-3.x-cibuildwheel
          restore-keys: |
            ${{ runner.os }}-pip-3.x-
      - name: Install cibuildwheel
        run: |
          python -m pip install --upgrade pip
          pip install cibuildwheel
      - name: Build wheels
        env:
          CIBW_SKIP: "cp38-* cp39-* *-musllinux*"
          CIBW_ENVIRONMENT: 'CXXFLAGS="-O3 -msse2"'
        run: cibuildwheel --output-dir dist
      - uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-sse2
          path: dist/*.whl

  build_wheels_linux_avx2:
    name: Build wheels on Linux (AVX2)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-3.x-cibuildwheel
          restore-keys: |
            ${{ runner.os }}-pip-3.x-
      - name: Install cibuildwheel
        run: |
          python -m pip install --upgrade pip
          pip install cibuildwheel
      - name: Build wheels
        env:
          CIBW_SKIP: "cp38-* cp39-* *-musllinux*"
          CIBW_MANYLINUX_X86_64_IMAGE: "manylinux_2_28"
          CIBW_ENVIRONMENT: 'CXXFLAGS="-O3 -mavx2"'
        run: cibuildwheel --output-dir dist
      - uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-avx2
          path: dist/*.whl

  build_wheels_linux_aarch64:
    name: Build wheels on Linux (aarch64)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Install cibuildwheel
        run: |
          python -m pip install --upgrade pip
          pip install cibuildwheel
      - name: Build wheels
        env:
          CIBW_ARCHS_LINUX: aarch64
          CIBW_SKIP: "cp38-* cp39-* *-musllinux*"
          CIBW_MANYLINUX_AARCH64_IMAGE: "manylinux2014"
          CIBW_ENVIRONMENT: 'CXXFLAGS="-O3"'
        run: cibuildwheel --output-dir dist
      - uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-aarch64
          path: dist/*.whl

  build_wheels_macos_x86_64:
    name: Build wheels on macOS (x86_64)
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/Library/Caches/pip
          key: ${{ runner.os }}-pip-3.x-cibuildwheel
          restore-keys: |
            ${{ runner.os }}-pip-3.x-
      - name: Install cibuildwheel
        run: |
          python -m pip install --upgrade pip
          pip install cibuildwheel
      - name: Build wheels
        env:
          CIBW_ARCHS: "x86_64"
          CIBW_SKIP: "cp38-* cp39-*"
          CIBW_ENVIRONMENT: 'CXXFLAGS="-O3 -msse2"'
        run: cibuildwheel --output-dir dist
      - uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-x86_64
          path: dist/*.whl

  build_wheels_macos_arm64:
    name: Build wheels on macOS (arm64)
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/Library/Caches/pip
          key: ${{ runner.os }}-pip-3.x-cibuildwheel
          restore-keys: |
            ${{ runner.os }}-pip-3.x-
      - name: Install cibuildwheel
        run: |
          python -m pip install --upgrade pip
          pip install cibuildwheel
      - name: Build wheels
        env:
          CIBW_ARCHS: "arm64"
          CIBW_SKIP: "cp38-* cp39-*"
          CIBW_ENVIRONMENT: 'CXXFLAGS="-O3"'
        run: cibuildwheel --output-dir dist
      - uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-arm64
          path: dist/*.whl

  build_wheels_windows:
    name: Build wheels on Windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-pip-3.x-cibuildwheel
          restore-keys: |
            ${{ runner.os }}-pip-3.x-
      - name: Install cibuildwheel
        run: |
          python -m pip install --upgrade pip
          pip install cibuildwheel
      - name: Build wheels
        env:
          CIBW_SKIP: "cp38-* cp39-*"
          CIBW_ENVIRONMENT: 'CXXFLAGS="/O2"'
        run: cibuildwheel --output-dir dist
      - uses: actions/upload-artifact@v4
        with:
          name: wheels-windows
          path: dist/*.whl

  build_sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-3.x-build
          restore-keys: |
            ${{ runner.os }}-pip-3.x-
      - name: Build sdist
        run: |
          python -m pip install --upgrade build
          python -m build --sdist --outdir dist
      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz

  publish:
    needs: [build_wheels_linux_sse2, build_wheels_linux_avx2, build_wheels_linux_aarch64, build_wheels_macos_x86_64, build_wheels_macos_arm64, build_wheels_windows, build_sdist]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/prefixtrie
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          pattern: '*'
          path: dist
          merge-multiple: true
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist
          skip-existing: true
