# This file was auto-generated by Fern from our API Definition.

# isort: skip_file

import typing
from importlib import import_module

if typing.TYPE_CHECKING:
    from .annotations import Annotations
    from .annotations_audience_item import AnnotationsAudienceItem
    from .audio_content import AudioContent
    from .blob_resource_contents import BlobResourceContents
    from .button import Button
    from .call_tool_result import CallToolResult
    from .call_tool_result_content_item import (
        CallToolResultContentItem,
        CallToolResultContentItem_Audio,
        CallToolResultContentItem_Image,
        CallToolResultContentItem_Resource,
        CallToolResultContentItem_ResourceLink,
        CallToolResultContentItem_Text,
    )
    from .click_action import ClickAction
    from .double_click_action import DoubleClickAction
    from .drag_to_action import DragToAction
    from .embedded_resource import EmbeddedResource
    from .hotkey_action import HotkeyAction
    from .http_validation_error import HttpValidationError
    from .image_content import ImageContent
    from .key_down_action import KeyDownAction
    from .key_up_action import KeyUpAction
    from .list_tools_result import ListToolsResult
    from .mouse_down_action import MouseDownAction
    from .mouse_up_action import MouseUpAction
    from .move_to_action import MoveToAction
    from .ping_body import PingBody
    from .press_action import PressAction
    from .resolution import Resolution
    from .resource import Resource
    from .resource_link import ResourceLink
    from .response import Response
    from .response_call_tool_result import ResponseCallToolResult
    from .response_list_str import ResponseListStr
    from .response_list_tools_result import ResponseListToolsResult
    from .right_click_action import RightClickAction
    from .scroll_action import ScrollAction
    from .text_content import TextContent
    from .text_resource_contents import TextResourceContents
    from .tool import Tool
    from .tool_annotations import ToolAnnotations
    from .typing_action import TypingAction
    from .validation_error import ValidationError
    from .validation_error_loc_item import ValidationErrorLocItem
_dynamic_imports: typing.Dict[str, str] = {
    "Annotations": ".annotations",
    "AnnotationsAudienceItem": ".annotations_audience_item",
    "AudioContent": ".audio_content",
    "BlobResourceContents": ".blob_resource_contents",
    "Button": ".button",
    "CallToolResult": ".call_tool_result",
    "CallToolResultContentItem": ".call_tool_result_content_item",
    "CallToolResultContentItem_Audio": ".call_tool_result_content_item",
    "CallToolResultContentItem_Image": ".call_tool_result_content_item",
    "CallToolResultContentItem_Resource": ".call_tool_result_content_item",
    "CallToolResultContentItem_ResourceLink": ".call_tool_result_content_item",
    "CallToolResultContentItem_Text": ".call_tool_result_content_item",
    "ClickAction": ".click_action",
    "DoubleClickAction": ".double_click_action",
    "DragToAction": ".drag_to_action",
    "EmbeddedResource": ".embedded_resource",
    "HotkeyAction": ".hotkey_action",
    "HttpValidationError": ".http_validation_error",
    "ImageContent": ".image_content",
    "KeyDownAction": ".key_down_action",
    "KeyUpAction": ".key_up_action",
    "ListToolsResult": ".list_tools_result",
    "MouseDownAction": ".mouse_down_action",
    "MouseUpAction": ".mouse_up_action",
    "MoveToAction": ".move_to_action",
    "PingBody": ".ping_body",
    "PressAction": ".press_action",
    "Resolution": ".resolution",
    "Resource": ".resource",
    "ResourceLink": ".resource_link",
    "Response": ".response",
    "ResponseCallToolResult": ".response_call_tool_result",
    "ResponseListStr": ".response_list_str",
    "ResponseListToolsResult": ".response_list_tools_result",
    "RightClickAction": ".right_click_action",
    "ScrollAction": ".scroll_action",
    "TextContent": ".text_content",
    "TextResourceContents": ".text_resource_contents",
    "Tool": ".tool",
    "ToolAnnotations": ".tool_annotations",
    "TypingAction": ".typing_action",
    "ValidationError": ".validation_error",
    "ValidationErrorLocItem": ".validation_error_loc_item",
}


def __getattr__(attr_name: str) -> typing.Any:
    module_name = _dynamic_imports.get(attr_name)
    if module_name is None:
        raise AttributeError(f"No {attr_name} found in _dynamic_imports for module name -> {__name__}")
    try:
        module = import_module(module_name, __package__)
        result = getattr(module, attr_name)
        return result
    except ImportError as e:
        raise ImportError(f"Failed to import {attr_name} from {module_name}: {e}") from e
    except AttributeError as e:
        raise AttributeError(f"Failed to get {attr_name} from {module_name}: {e}") from e


def __dir__():
    lazy_attrs = list(_dynamic_imports.keys())
    return sorted(lazy_attrs)


__all__ = [
    "Annotations",
    "AnnotationsAudienceItem",
    "AudioContent",
    "BlobResourceContents",
    "Button",
    "CallToolResult",
    "CallToolResultContentItem",
    "CallToolResultContentItem_Audio",
    "CallToolResultContentItem_Image",
    "CallToolResultContentItem_Resource",
    "CallToolResultContentItem_ResourceLink",
    "CallToolResultContentItem_Text",
    "ClickAction",
    "DoubleClickAction",
    "DragToAction",
    "EmbeddedResource",
    "HotkeyAction",
    "HttpValidationError",
    "ImageContent",
    "KeyDownAction",
    "KeyUpAction",
    "ListToolsResult",
    "MouseDownAction",
    "MouseUpAction",
    "MoveToAction",
    "PingBody",
    "PressAction",
    "Resolution",
    "Resource",
    "ResourceLink",
    "Response",
    "ResponseCallToolResult",
    "ResponseListStr",
    "ResponseListToolsResult",
    "RightClickAction",
    "ScrollAction",
    "TextContent",
    "TextResourceContents",
    "Tool",
    "ToolAnnotations",
    "TypingAction",
    "ValidationError",
    "ValidationErrorLocItem",
]
