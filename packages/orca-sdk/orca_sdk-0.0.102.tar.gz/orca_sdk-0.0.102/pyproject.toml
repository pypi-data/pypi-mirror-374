[tool.poetry]
name = "orca_sdk"
version = "0.0.102" # Will be set by CI before building the wheel from the git tag. Do not set manually.
description = "SDK for interacting with Orca Services"
authors = ["Orca DB Inc. <dev-rel@orcadb.ai>"]
license = "Apache-2.0"
readme = "README.md"
packages = [{ include = "orca_sdk" }]

[tool.poetry.dependencies]
python = "^3.11"
httpx = ">=0.20.0,<0.29.0"
datasets = "^3.1.0"
pandas = "^2.2.3"
pyarrow = "^18.0.0"
torch = "^2.5.1"
gradio = "5.13.0"
python-dotenv = "^1.1.0"
scikit-learn = "^1.6.1"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
black = "^25.1.0"
isort = "^6.0.0"
pytest = "^8.3.3"
pytest-asyncio = "^0.25.3"
pytest-timeout = "^2.3.1"
pytest-cov = "^6.0.0"
poethepoet = "^0.31.1"
pyright = "^1.1.399"
datamodel-code-generator = "^0.32.0"
ipykernel = "^6.29.5"

# TODO: Use this once poetry 2.0.0 is released https://github.com/python-poetry/poetry/issues/9448
# [tool.poetry.requires-plugins]
# poethepoet = { extras = ["poetry-plugin"], version = "^0.31.0" }


[tool.poe]
poetry_command = ""

[tool.poe.tasks]
test = "pytest"
typecheck = "pyright"
codegen = "python -m scripts.codegen"
lighthouse = { shell = "cd ../lighthouse && poetry run poe dev" }

[tool.pytest.ini_options]
log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)s] %(message)s"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
addopts = "--color=yes -s"
filterwarnings = ["ignore::DeprecationWarning"]
asyncio_default_fixture_loop_scope = "session"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
target-version = ['py312']

[tool.isort]
profile = "black"
known_first_party = ["orca_sdk"]

[tool.pyright]
include = ["./orca_sdk/**", "./scripts/**"]

