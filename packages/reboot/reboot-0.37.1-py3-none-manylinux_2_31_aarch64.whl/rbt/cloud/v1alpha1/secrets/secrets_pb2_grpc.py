# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from rbt.cloud.v1alpha1.secrets import secrets_pb2 as rbt_dot_cloud_dot_v1alpha1_dot_secrets_dot_secrets__pb2


class SecretMethodsStub(object):
    """NOTE: This service has no state, but is partitioned by an ID like:
    `org/space/secret`
    ... both to avoid singletons, and to leave open the possibility of storing
    state in the future.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Write = channel.unary_unary(
                '/rbt.cloud.v1alpha1.secrets.SecretMethods/Write',
                request_serializer=rbt_dot_cloud_dot_v1alpha1_dot_secrets_dot_secrets__pb2.WriteRequest.SerializeToString,
                response_deserializer=rbt_dot_cloud_dot_v1alpha1_dot_secrets_dot_secrets__pb2.WriteResponse.FromString,
                )
        self.Read = channel.unary_unary(
                '/rbt.cloud.v1alpha1.secrets.SecretMethods/Read',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=rbt_dot_cloud_dot_v1alpha1_dot_secrets_dot_secrets__pb2.ReadResponse.FromString,
                )
        self.Delete = channel.unary_unary(
                '/rbt.cloud.v1alpha1.secrets.SecretMethods/Delete',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=rbt_dot_cloud_dot_v1alpha1_dot_secrets_dot_secrets__pb2.DeleteResponse.FromString,
                )


class SecretMethodsServicer(object):
    """NOTE: This service has no state, but is partitioned by an ID like:
    `org/space/secret`
    ... both to avoid singletons, and to leave open the possibility of storing
    state in the future.
    """

    def Write(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Read(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SecretMethodsServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Write': grpc.unary_unary_rpc_method_handler(
                    servicer.Write,
                    request_deserializer=rbt_dot_cloud_dot_v1alpha1_dot_secrets_dot_secrets__pb2.WriteRequest.FromString,
                    response_serializer=rbt_dot_cloud_dot_v1alpha1_dot_secrets_dot_secrets__pb2.WriteResponse.SerializeToString,
            ),
            'Read': grpc.unary_unary_rpc_method_handler(
                    servicer.Read,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=rbt_dot_cloud_dot_v1alpha1_dot_secrets_dot_secrets__pb2.ReadResponse.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=rbt_dot_cloud_dot_v1alpha1_dot_secrets_dot_secrets__pb2.DeleteResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'rbt.cloud.v1alpha1.secrets.SecretMethods', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SecretMethods(object):
    """NOTE: This service has no state, but is partitioned by an ID like:
    `org/space/secret`
    ... both to avoid singletons, and to leave open the possibility of storing
    state in the future.
    """

    @staticmethod
    def Write(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rbt.cloud.v1alpha1.secrets.SecretMethods/Write',
            rbt_dot_cloud_dot_v1alpha1_dot_secrets_dot_secrets__pb2.WriteRequest.SerializeToString,
            rbt_dot_cloud_dot_v1alpha1_dot_secrets_dot_secrets__pb2.WriteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Read(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rbt.cloud.v1alpha1.secrets.SecretMethods/Read',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            rbt_dot_cloud_dot_v1alpha1_dot_secrets_dot_secrets__pb2.ReadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rbt.cloud.v1alpha1.secrets.SecretMethods/Delete',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            rbt_dot_cloud_dot_v1alpha1_dot_secrets_dot_secrets__pb2.DeleteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
