stages:
  - test
  - docs
  - release

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  UV_CACHE_DIR: "$CI_PROJECT_DIR/.cache/uv"
  PYIMAGE: py313

.rules_mrs_and_protected:
  - if: $CI_PIPELINE_SOURCE == "schedule"
    when: never
  - if: $CI_COMMIT_BRANCH && $CI_COMMIT_REF_PROTECTED == "true"
  - if: $CI_COMMIT_TAG && $CI_COMMIT_REF_PROTECTED == "true"
  - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'

.rules_only_mrs:
  - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'

.rules_only_master:
  - if: $CI_PIPELINE_SOURCE == "schedule"
    when: never
  - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_COMMIT_REF_PROTECTED == "true"

.script_build_docs:
  - make docs

.dev_dependency_job: &dev_dependency_job
  image: "registry.gitlab.com/thelabnyc/python:${PYIMAGE}"
  before_script:
    # Install dependencies
    - uv sync --all-extras
  cache:
    key: devdependencies-${PYIMAGE}
    paths:
      - .cache/pip/
      - .cache/poetry/
      - .venv/

include:
  - component: gitlab.com/thelabnyc/thelab-ci-components/precommit@0.4.0
    rules:
      - if: $CI_PIPELINE_SOURCE == "schedule"
        when: never
      - if: $CI_COMMIT_BRANCH && $CI_COMMIT_REF_PROTECTED == "true"
      - if: $CI_COMMIT_TAG && $CI_COMMIT_REF_PROTECTED == "true"
      - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  - component: gitlab.com/thelabnyc/thelab-ci-components/publish-gitlab-release@0.4.0
  - component: gitlab.com/thelabnyc/thelab-ci-components/publish-to-pypi@0.4.0


test:lib:
  <<: *dev_dependency_job
  rules:
    - !reference [.rules_mrs_and_protected]
  stage: test
  needs: []
  parallel:
    matrix:
      - PYIMAGE: py313
        TOX_SKIP_ENV: "^(?!py313)"
  script:
    - uvx tox
  coverage: '/^TOTAL.+?(\d+\%)$/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

test:docs:
  <<: *dev_dependency_job
  rules:
    - !reference [.rules_only_mrs]
  stage: test
  needs: []
  script:
    - !reference [.script_build_docs]

pages:
  <<: *dev_dependency_job
  rules:
    - !reference [.rules_only_master]
  stage: docs
  needs:
    - test:lib
  script:
    - !reference [.script_build_docs]
  artifacts:
    paths:
      - public
