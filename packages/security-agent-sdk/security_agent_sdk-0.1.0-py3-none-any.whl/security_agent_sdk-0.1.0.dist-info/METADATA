Metadata-Version: 2.4
Name: security-agent-sdk
Version: 0.1.0
Summary: Python SDK for Security Agent specifications (models and JSON Schemas)
Project-URL: Homepage, https://github.com/Logarithm-Labs/security-agent-sdk
Project-URL: Documentation, https://github.com/Logarithm-Labs/security-agent-sdk#readme
Project-URL: Repository, https://github.com/Logarithm-Labs/security-agent-sdk
Project-URL: Issues, https://github.com/Logarithm-Labs/security-agent-sdk/issues
Author-email: FullMetalHodler <fullmetalhodler@logarithm.fi>
License: MIT
License-File: LICENSE
Keywords: audit,blockchain,jsonschema,pydantic,sdk,security
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Topic :: Security
Classifier: Typing :: Typed
Requires-Python: >=3.10
Requires-Dist: jsonschema>=4.0.0
Requires-Dist: pydantic>=2.5.0
Description-Content-Type: text/markdown

# Security Agent SDK

Python SDK that defines data models and JSON Schemas for interoperability between a crypto agent and auditor agents.

## Installation

```bash
pip install security_agent_sdk
```

or with Poetry:

```bash
poetry add security_agent_sdk
```

## Quick start

```python
from security_agent_sdk.models.input import RequirementScheme
from security_agent_sdk.models.output import AuditSummary
from security_agent_sdk.validation import validate_input_data, validate_output_data, schema_path

# Validate input data (JSON object)
validate_input_data(data, schema_path("input/v1/RequirementScheme.json"))
req = RequirementScheme(**data)

# Validate output data
validate_output_data(result, schema_path("output/v1/AuditResult.json"))
summary = AuditSummary(**result)
```

## License

MIT
