[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pydatamax"
version = "0.2.0"
description = "Advanced Data Crawling and Processing Framework"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "DataMax Team", email = "cy.kron@foxmail.com"},
]
maintainers = [
    {name = "DataMax Team", email = "cy.kron@foxmail.com"},
]
keywords = [
    "crawler", "scraping", "data-processing", "arxiv", "web-scraping",
    "data-extraction", "parsing", "async", "cli", "framework",
    "academic-papers", "research", "automation", "data-collection",
    "file-conversion", "document-processing"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Information Technology",
    "Topic :: Internet :: WWW/HTTP :: Indexing/Search",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: General",
    "Topic :: Utilities",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3 :: Only",
    "Operating System :: OS Independent",
    "Operating System :: POSIX",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: MacOS",
    "Environment :: Console",
    "Environment :: Web Environment",
    "Framework :: AsyncIO",
    "Natural Language :: English",
    "Natural Language :: Chinese (Simplified)",
]
dependencies = [
    "oss2>=2.19.1,<3.0.0",
    "aliyun-python-sdk-core>=2.16.0,<3.0.0",
    "aliyun-python-sdk-kms>=2.16.5,<3.0.0",
    "crcmod>=1.7,<2.0.0",
    "langdetect>=1.0.9,<2.0.0",
    "loguru>=0.7.3,<1.0.0",
    "python-docx>=1.1.2,<2.0.0",
    "python-dotenv>=1.1.0,<2.0.0",
    "pymupdf>=1.24.14,<2.0.0",
    "pypdf>=5.5.0,<6.0.0",
    "openpyxl>=3.1.5,<4.0.0",
    "pandas>=2.2.3,<3.0.0",
    "numpy>=2.2.6,<3.0.0",
    "requests>=2.32.3,<3.0.0",
    "tqdm>=4.67.1,<5.0.0",
    "pydantic>=2.10.6,<3.0.0",
    "pydantic-settings>=2.9.1,<3.0.0",
    "python-magic>=0.4.27,<1.0.0",
    "PyYAML>=6.0.2,<7.0.0",
    "Pillow>=11.2.1,<12.0.0",
    "packaging>=24.2,<25.0",
    "beautifulsoup4>=4.13.4,<5.0.0",
    "minio>=7.2.15,<8.0.0",
    "openai>=1.82.0,<2.0.0",
    "jionlp>=1.5.23,<2.0.0",
    "chardet>=5.2.0,<6.0.0",
    "python-pptx>=1.0.2,<2.0.0",
    "tiktoken>=0.9.0,<1.0.0",
    "markitdown>=0.1.1,<1.0.0",
    "xlrd>=2.0.1,<3.0.0",
    "tabulate>=0.9.0,<1.0.0",
    "unstructured>=0.17.2,<1.0.0",
    "markdown>=3.8,<4.0.0",
    "langchain>=0.3.0,<1.0.0",
    "langchain-community>=0.3.0,<1.0.0",
    "langchain-text-splitters>=0.3.0,<1.0.0",
    "ebooklib==0.19",
    "setuptools",
    "aiohttp>=3.8.0",
    "click>=8.0.0",
    "lxml>=4.9.0",
    "python-dateutil>=2.8.0",
    "typing-extensions>=4.0.0",
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-timeout>=2.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-timeout>=2.1.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=2.20.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-timeout>=2.1.0",
    "aioresponses>=0.7.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "myst-parser>=0.18.0",
    "sphinx-autodoc-typehints>=1.19.0",
]
all = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-timeout>=2.1.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=2.20.0",
    "aioresponses>=0.7.0",
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "myst-parser>=0.18.0",
    "sphinx-autodoc-typehints>=1.19.0",
]

[project.scripts]
pydatamax = "datamax.cli.main:main"
datamax = "datamax.cli.main:main"

[project.urls]
Homepage = "https://github.com/Hi-Dolphin/datamax"
Documentation = "https://github.com/Hi-Dolphin/datamax/docs"
Repository = "https://github.com/Hi-Dolphin/datamax"
"Bug Reports" = "https://github.com/Hi-Dolphin/datamax/issues"
Source = "https://github.com/Hi-Dolphin/datamax"

[tool.setuptools]
packages = ["datamax"]
include-package-data = true

[tool.setuptools.package-data]
"*" = ["py.typed", "*.json", "*.yaml", "*.yml"]

[tool.setuptools.exclude-package-data]
"*" = ["tests", "tests.*", "*.pyc", "__pycache__"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
)
'''

# isort configuration
[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

# MyPy configuration
[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "aiohttp.*",
    "beautifulsoup4.*",
    "lxml.*",
    "requests.*",
    "click.*",
    "pydantic.*",
]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "network: marks tests that require network access",
    "unit: marks tests as unit tests",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]
asyncio_mode = "auto"
timeout = 300

# Coverage configuration
[tool.coverage.run]
source = ["datamax"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
    "*/venv/*",
    "*/virtualenv/*",
    "*/.tox/*",
    "*/site-packages/*",
]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
ignore_errors = true
show_missing = true
skip_covered = false

[tool.coverage.html]
directory = "htmlcov"

# Flake8 configuration (in setup.cfg since flake8 doesn't support pyproject.toml yet)
# See setup.cfg for flake8 configuration
