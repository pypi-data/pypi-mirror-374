# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = ['InventoryObjectDataLabelLinkArgs', 'InventoryObjectDataLabelLink']

@pulumi.input_type
class InventoryObjectDataLabelLinkArgs:
    def __init__(__self__, *,
                 data_label: pulumi.Input[_builtins.str],
                 locked: pulumi.Input[_builtins.bool],
                 path: pulumi.Input[_builtins.str],
                 resource_id: pulumi.Input[_builtins.str]):
        """
        The set of arguments for constructing a InventoryObjectDataLabelLink resource.
        :param pulumi.Input[_builtins.str] data_label: Data label to link to the inventory object.
        :param pulumi.Input[_builtins.bool] locked: Whether the inventory object is locked.
        :param pulumi.Input[_builtins.str] path: Path of the inventory object.
        :param pulumi.Input[_builtins.str] resource_id: Resource ID to which the inventory object belongs.
        """
        pulumi.set(__self__, "data_label", data_label)
        pulumi.set(__self__, "locked", locked)
        pulumi.set(__self__, "path", path)
        pulumi.set(__self__, "resource_id", resource_id)

    @_builtins.property
    @pulumi.getter(name="dataLabel")
    def data_label(self) -> pulumi.Input[_builtins.str]:
        """
        Data label to link to the inventory object.
        """
        return pulumi.get(self, "data_label")

    @data_label.setter
    def data_label(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "data_label", value)

    @_builtins.property
    @pulumi.getter
    def locked(self) -> pulumi.Input[_builtins.bool]:
        """
        Whether the inventory object is locked.
        """
        return pulumi.get(self, "locked")

    @locked.setter
    def locked(self, value: pulumi.Input[_builtins.bool]):
        pulumi.set(self, "locked", value)

    @_builtins.property
    @pulumi.getter
    def path(self) -> pulumi.Input[_builtins.str]:
        """
        Path of the inventory object.
        """
        return pulumi.get(self, "path")

    @path.setter
    def path(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "path", value)

    @_builtins.property
    @pulumi.getter(name="resourceId")
    def resource_id(self) -> pulumi.Input[_builtins.str]:
        """
        Resource ID to which the inventory object belongs.
        """
        return pulumi.get(self, "resource_id")

    @resource_id.setter
    def resource_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "resource_id", value)


@pulumi.input_type
class _InventoryObjectDataLabelLinkState:
    def __init__(__self__, *,
                 data_label: Optional[pulumi.Input[_builtins.str]] = None,
                 locked: Optional[pulumi.Input[_builtins.bool]] = None,
                 path: Optional[pulumi.Input[_builtins.str]] = None,
                 resource_id: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering InventoryObjectDataLabelLink resources.
        :param pulumi.Input[_builtins.str] data_label: Data label to link to the inventory object.
        :param pulumi.Input[_builtins.bool] locked: Whether the inventory object is locked.
        :param pulumi.Input[_builtins.str] path: Path of the inventory object.
        :param pulumi.Input[_builtins.str] resource_id: Resource ID to which the inventory object belongs.
        """
        if data_label is not None:
            pulumi.set(__self__, "data_label", data_label)
        if locked is not None:
            pulumi.set(__self__, "locked", locked)
        if path is not None:
            pulumi.set(__self__, "path", path)
        if resource_id is not None:
            pulumi.set(__self__, "resource_id", resource_id)

    @_builtins.property
    @pulumi.getter(name="dataLabel")
    def data_label(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Data label to link to the inventory object.
        """
        return pulumi.get(self, "data_label")

    @data_label.setter
    def data_label(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "data_label", value)

    @_builtins.property
    @pulumi.getter
    def locked(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Whether the inventory object is locked.
        """
        return pulumi.get(self, "locked")

    @locked.setter
    def locked(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "locked", value)

    @_builtins.property
    @pulumi.getter
    def path(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Path of the inventory object.
        """
        return pulumi.get(self, "path")

    @path.setter
    def path(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "path", value)

    @_builtins.property
    @pulumi.getter(name="resourceId")
    def resource_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Resource ID to which the inventory object belongs.
        """
        return pulumi.get(self, "resource_id")

    @resource_id.setter
    def resource_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "resource_id", value)


@pulumi.type_token("formal:index/inventoryObjectDataLabelLink:InventoryObjectDataLabelLink")
class InventoryObjectDataLabelLink(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 data_label: Optional[pulumi.Input[_builtins.str]] = None,
                 locked: Optional[pulumi.Input[_builtins.bool]] = None,
                 path: Optional[pulumi.Input[_builtins.str]] = None,
                 resource_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Registering a Data Label with Formal.

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] data_label: Data label to link to the inventory object.
        :param pulumi.Input[_builtins.bool] locked: Whether the inventory object is locked.
        :param pulumi.Input[_builtins.str] path: Path of the inventory object.
        :param pulumi.Input[_builtins.str] resource_id: Resource ID to which the inventory object belongs.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: InventoryObjectDataLabelLinkArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Registering a Data Label with Formal.

        :param str resource_name: The name of the resource.
        :param InventoryObjectDataLabelLinkArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(InventoryObjectDataLabelLinkArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 data_label: Optional[pulumi.Input[_builtins.str]] = None,
                 locked: Optional[pulumi.Input[_builtins.bool]] = None,
                 path: Optional[pulumi.Input[_builtins.str]] = None,
                 resource_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = InventoryObjectDataLabelLinkArgs.__new__(InventoryObjectDataLabelLinkArgs)

            if data_label is None and not opts.urn:
                raise TypeError("Missing required property 'data_label'")
            __props__.__dict__["data_label"] = data_label
            if locked is None and not opts.urn:
                raise TypeError("Missing required property 'locked'")
            __props__.__dict__["locked"] = locked
            if path is None and not opts.urn:
                raise TypeError("Missing required property 'path'")
            __props__.__dict__["path"] = path
            if resource_id is None and not opts.urn:
                raise TypeError("Missing required property 'resource_id'")
            __props__.__dict__["resource_id"] = resource_id
        super(InventoryObjectDataLabelLink, __self__).__init__(
            'formal:index/inventoryObjectDataLabelLink:InventoryObjectDataLabelLink',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            data_label: Optional[pulumi.Input[_builtins.str]] = None,
            locked: Optional[pulumi.Input[_builtins.bool]] = None,
            path: Optional[pulumi.Input[_builtins.str]] = None,
            resource_id: Optional[pulumi.Input[_builtins.str]] = None) -> 'InventoryObjectDataLabelLink':
        """
        Get an existing InventoryObjectDataLabelLink resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] data_label: Data label to link to the inventory object.
        :param pulumi.Input[_builtins.bool] locked: Whether the inventory object is locked.
        :param pulumi.Input[_builtins.str] path: Path of the inventory object.
        :param pulumi.Input[_builtins.str] resource_id: Resource ID to which the inventory object belongs.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _InventoryObjectDataLabelLinkState.__new__(_InventoryObjectDataLabelLinkState)

        __props__.__dict__["data_label"] = data_label
        __props__.__dict__["locked"] = locked
        __props__.__dict__["path"] = path
        __props__.__dict__["resource_id"] = resource_id
        return InventoryObjectDataLabelLink(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="dataLabel")
    def data_label(self) -> pulumi.Output[_builtins.str]:
        """
        Data label to link to the inventory object.
        """
        return pulumi.get(self, "data_label")

    @_builtins.property
    @pulumi.getter
    def locked(self) -> pulumi.Output[_builtins.bool]:
        """
        Whether the inventory object is locked.
        """
        return pulumi.get(self, "locked")

    @_builtins.property
    @pulumi.getter
    def path(self) -> pulumi.Output[_builtins.str]:
        """
        Path of the inventory object.
        """
        return pulumi.get(self, "path")

    @_builtins.property
    @pulumi.getter(name="resourceId")
    def resource_id(self) -> pulumi.Output[_builtins.str]:
        """
        Resource ID to which the inventory object belongs.
        """
        return pulumi.get(self, "resource_id")

