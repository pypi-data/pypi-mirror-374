# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = ['TrackerArgs', 'Tracker']

@pulumi.input_type
class TrackerArgs:
    def __init__(__self__, *,
                 path: pulumi.Input[_builtins.str],
                 resource_id: pulumi.Input[_builtins.str],
                 allow_clear_text_value: Optional[pulumi.Input[_builtins.bool]] = None,
                 termination_protection: Optional[pulumi.Input[_builtins.bool]] = None):
        """
        The set of arguments for constructing a Tracker resource.
        :param pulumi.Input[_builtins.str] path: Path associated with this tracker.
        :param pulumi.Input[_builtins.str] resource_id: Tracker linked to the following resource id.
        :param pulumi.Input[_builtins.bool] allow_clear_text_value: If set to true, this Tracker allow clear text value.
        :param pulumi.Input[_builtins.bool] termination_protection: If set to true, this Tracker cannot be deleted.
        """
        pulumi.set(__self__, "path", path)
        pulumi.set(__self__, "resource_id", resource_id)
        if allow_clear_text_value is not None:
            pulumi.set(__self__, "allow_clear_text_value", allow_clear_text_value)
        if termination_protection is not None:
            pulumi.set(__self__, "termination_protection", termination_protection)

    @_builtins.property
    @pulumi.getter
    def path(self) -> pulumi.Input[_builtins.str]:
        """
        Path associated with this tracker.
        """
        return pulumi.get(self, "path")

    @path.setter
    def path(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "path", value)

    @_builtins.property
    @pulumi.getter(name="resourceId")
    def resource_id(self) -> pulumi.Input[_builtins.str]:
        """
        Tracker linked to the following resource id.
        """
        return pulumi.get(self, "resource_id")

    @resource_id.setter
    def resource_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "resource_id", value)

    @_builtins.property
    @pulumi.getter(name="allowClearTextValue")
    def allow_clear_text_value(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        If set to true, this Tracker allow clear text value.
        """
        return pulumi.get(self, "allow_clear_text_value")

    @allow_clear_text_value.setter
    def allow_clear_text_value(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "allow_clear_text_value", value)

    @_builtins.property
    @pulumi.getter(name="terminationProtection")
    def termination_protection(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        If set to true, this Tracker cannot be deleted.
        """
        return pulumi.get(self, "termination_protection")

    @termination_protection.setter
    def termination_protection(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "termination_protection", value)


@pulumi.input_type
class _TrackerState:
    def __init__(__self__, *,
                 allow_clear_text_value: Optional[pulumi.Input[_builtins.bool]] = None,
                 created_at: Optional[pulumi.Input[_builtins.str]] = None,
                 path: Optional[pulumi.Input[_builtins.str]] = None,
                 resource_id: Optional[pulumi.Input[_builtins.str]] = None,
                 termination_protection: Optional[pulumi.Input[_builtins.bool]] = None,
                 updated_at: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering Tracker resources.
        :param pulumi.Input[_builtins.bool] allow_clear_text_value: If set to true, this Tracker allow clear text value.
        :param pulumi.Input[_builtins.str] created_at: When the policy was created.
        :param pulumi.Input[_builtins.str] path: Path associated with this tracker.
        :param pulumi.Input[_builtins.str] resource_id: Tracker linked to the following resource id.
        :param pulumi.Input[_builtins.bool] termination_protection: If set to true, this Tracker cannot be deleted.
        :param pulumi.Input[_builtins.str] updated_at: Last update time.
        """
        if allow_clear_text_value is not None:
            pulumi.set(__self__, "allow_clear_text_value", allow_clear_text_value)
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if path is not None:
            pulumi.set(__self__, "path", path)
        if resource_id is not None:
            pulumi.set(__self__, "resource_id", resource_id)
        if termination_protection is not None:
            pulumi.set(__self__, "termination_protection", termination_protection)
        if updated_at is not None:
            pulumi.set(__self__, "updated_at", updated_at)

    @_builtins.property
    @pulumi.getter(name="allowClearTextValue")
    def allow_clear_text_value(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        If set to true, this Tracker allow clear text value.
        """
        return pulumi.get(self, "allow_clear_text_value")

    @allow_clear_text_value.setter
    def allow_clear_text_value(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "allow_clear_text_value", value)

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        When the policy was created.
        """
        return pulumi.get(self, "created_at")

    @created_at.setter
    def created_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "created_at", value)

    @_builtins.property
    @pulumi.getter
    def path(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Path associated with this tracker.
        """
        return pulumi.get(self, "path")

    @path.setter
    def path(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "path", value)

    @_builtins.property
    @pulumi.getter(name="resourceId")
    def resource_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Tracker linked to the following resource id.
        """
        return pulumi.get(self, "resource_id")

    @resource_id.setter
    def resource_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "resource_id", value)

    @_builtins.property
    @pulumi.getter(name="terminationProtection")
    def termination_protection(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        If set to true, this Tracker cannot be deleted.
        """
        return pulumi.get(self, "termination_protection")

    @termination_protection.setter
    def termination_protection(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "termination_protection", value)

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Last update time.
        """
        return pulumi.get(self, "updated_at")

    @updated_at.setter
    def updated_at(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "updated_at", value)


@pulumi.type_token("formal:index/tracker:Tracker")
class Tracker(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 allow_clear_text_value: Optional[pulumi.Input[_builtins.bool]] = None,
                 path: Optional[pulumi.Input[_builtins.str]] = None,
                 resource_id: Optional[pulumi.Input[_builtins.str]] = None,
                 termination_protection: Optional[pulumi.Input[_builtins.bool]] = None,
                 __props__=None):
        """
        Creating a Tracker in Formal.

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.bool] allow_clear_text_value: If set to true, this Tracker allow clear text value.
        :param pulumi.Input[_builtins.str] path: Path associated with this tracker.
        :param pulumi.Input[_builtins.str] resource_id: Tracker linked to the following resource id.
        :param pulumi.Input[_builtins.bool] termination_protection: If set to true, this Tracker cannot be deleted.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: TrackerArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Creating a Tracker in Formal.

        :param str resource_name: The name of the resource.
        :param TrackerArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(TrackerArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 allow_clear_text_value: Optional[pulumi.Input[_builtins.bool]] = None,
                 path: Optional[pulumi.Input[_builtins.str]] = None,
                 resource_id: Optional[pulumi.Input[_builtins.str]] = None,
                 termination_protection: Optional[pulumi.Input[_builtins.bool]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = TrackerArgs.__new__(TrackerArgs)

            __props__.__dict__["allow_clear_text_value"] = allow_clear_text_value
            if path is None and not opts.urn:
                raise TypeError("Missing required property 'path'")
            __props__.__dict__["path"] = path
            if resource_id is None and not opts.urn:
                raise TypeError("Missing required property 'resource_id'")
            __props__.__dict__["resource_id"] = resource_id
            __props__.__dict__["termination_protection"] = termination_protection
            __props__.__dict__["created_at"] = None
            __props__.__dict__["updated_at"] = None
        super(Tracker, __self__).__init__(
            'formal:index/tracker:Tracker',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            allow_clear_text_value: Optional[pulumi.Input[_builtins.bool]] = None,
            created_at: Optional[pulumi.Input[_builtins.str]] = None,
            path: Optional[pulumi.Input[_builtins.str]] = None,
            resource_id: Optional[pulumi.Input[_builtins.str]] = None,
            termination_protection: Optional[pulumi.Input[_builtins.bool]] = None,
            updated_at: Optional[pulumi.Input[_builtins.str]] = None) -> 'Tracker':
        """
        Get an existing Tracker resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.bool] allow_clear_text_value: If set to true, this Tracker allow clear text value.
        :param pulumi.Input[_builtins.str] created_at: When the policy was created.
        :param pulumi.Input[_builtins.str] path: Path associated with this tracker.
        :param pulumi.Input[_builtins.str] resource_id: Tracker linked to the following resource id.
        :param pulumi.Input[_builtins.bool] termination_protection: If set to true, this Tracker cannot be deleted.
        :param pulumi.Input[_builtins.str] updated_at: Last update time.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _TrackerState.__new__(_TrackerState)

        __props__.__dict__["allow_clear_text_value"] = allow_clear_text_value
        __props__.__dict__["created_at"] = created_at
        __props__.__dict__["path"] = path
        __props__.__dict__["resource_id"] = resource_id
        __props__.__dict__["termination_protection"] = termination_protection
        __props__.__dict__["updated_at"] = updated_at
        return Tracker(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="allowClearTextValue")
    def allow_clear_text_value(self) -> pulumi.Output[Optional[_builtins.bool]]:
        """
        If set to true, this Tracker allow clear text value.
        """
        return pulumi.get(self, "allow_clear_text_value")

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[_builtins.str]:
        """
        When the policy was created.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter
    def path(self) -> pulumi.Output[_builtins.str]:
        """
        Path associated with this tracker.
        """
        return pulumi.get(self, "path")

    @_builtins.property
    @pulumi.getter(name="resourceId")
    def resource_id(self) -> pulumi.Output[_builtins.str]:
        """
        Tracker linked to the following resource id.
        """
        return pulumi.get(self, "resource_id")

    @_builtins.property
    @pulumi.getter(name="terminationProtection")
    def termination_protection(self) -> pulumi.Output[Optional[_builtins.bool]]:
        """
        If set to true, this Tracker cannot be deleted.
        """
        return pulumi.get(self, "termination_protection")

    @_builtins.property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> pulumi.Output[_builtins.str]:
        """
        Last update time.
        """
        return pulumi.get(self, "updated_at")

