"use strict";(self.webpackChunk_jupytergis_jupytergis_qgis=self.webpackChunk_jupytergis_jupytergis_qgis||[]).push([[4],{4:(e,t,o)=>{o.r(t),o.d(t,{default:()=>I});var r,n=o(903),a=o(110),i=o(235),s=o(88),l=o(436),d=o(391),c=o(428),g=o(397),m=o(43),y=o(10),p=o(830),u=o(256);class h{constructor(e){this.collaborative=void 0===document.querySelectorAll("[data-jupyter-lite-root]")[0],this._disposed=!1,this._annotationModel=e.annotationModel}get name(){throw"Not implemented"}get contentType(){throw"Not implemented"}get fileFormat(){return"base64"}get isDisposed(){return this._disposed}dispose(){this._disposed=!0}preferredLanguage(e){return""}createNew(e){return new s.JupyterGISModel({sharedModel:e.sharedModel,languagePreference:e.languagePreference,annotationModel:this._annotationModel,settingRegistry:this._settingRegistry})}}class G extends h{get name(){return"jupytergis-qgzmodel"}get contentType(){return"QGZ"}}class S extends h{get name(){return"jupytergis-qgsmodel"}get contentType(){return"QGS"}}!function(e){e.exportQgis="jupytergis:export"}(r||(r={}));const I=[{id:"@jupytergis/jupytergis-qgis:qgisplugin",requires:[s.IJupyterGISDocTracker,l.IThemeManager,n.ICollaborativeDrive,s.IJGISExternalCommandRegistryToken,c.ConsolePanel.IContentFactory,d.IEditorServices,m.IRenderMimeRegistry,c.IConsoleTracker,s.IAnnotationToken,y.ISettingRegistry,s.IJGISFormSchemaRegistryToken,p.IStateDB],optional:[l.ICommandPalette],autoStart:!0,activate:async(e,t,o,n,d,c,m,y,p,h,I,f,w,Q)=>{const T=await(0,a.requestAPI)("jupytergis_qgis/backend-check",{method:"POST",body:JSON.stringify({})}),{installed:x}=T,j=()=>(x||(0,l.showErrorMessage)("QGIS is not installed","QGIS is required to open QGIS files"),x),M=new i.JupyterGISDocumentWidgetFactory({name:"JupyterGIS QGS Factory",modelName:"jupytergis-qgsmodel",fileTypes:["QGS"],defaultFor:["QGS"],tracker:t,commands:e.commands,externalCommandRegistry:d,backendCheck:j,manager:e.serviceManager,contentFactory:c,rendermime:y,mimeTypeService:m.mimeTypeService,consoleTracker:p,formSchemaRegistry:f,state:w,annotationModel:h}),v=new i.JupyterGISDocumentWidgetFactory({name:"JupyterGIS QGZ Factory",modelName:"jupytergis-qgzmodel",fileTypes:["QGZ"],defaultFor:["QGZ"],tracker:t,commands:e.commands,externalCommandRegistry:d,backendCheck:j,manager:e.serviceManager,contentFactory:c,rendermime:y,mimeTypeService:m.mimeTypeService,consoleTracker:p,formSchemaRegistry:f,state:w,annotationModel:h});e.docRegistry.addWidgetFactory(M),e.docRegistry.addWidgetFactory(v),e.docRegistry.addModelFactory(new S({annotationModel:h,settingRegistry:I})),e.docRegistry.addModelFactory(new G({annotationModel:h,settingRegistry:I})),e.docRegistry.addFileType({name:"QGS",displayName:"QGS",mimeTypes:["application/octet-stream"],extensions:[".qgs",".QGS"],fileFormat:"base64",contentType:"QGS",icon:a.logoMiniIcon}),e.docRegistry.addFileType({name:"QGZ",displayName:"QGZ",mimeTypes:["application/octet-stream"],extensions:[".qgz",".QGZ"],fileFormat:"base64",contentType:"QGZ",icon:a.logoMiniIconQGZ});const F=()=>new s.JupyterGISDoc;n.sharedModelFactory.registerDocumentFactory("QGS",F),n.sharedModelFactory.registerDocumentFactory("QGZ",F);const b=(r,n)=>{n.title.icon=a.logoMiniIconQGZ,n.context.pathChanged.connect(()=>{t.save(n)}),o.themeChanged.connect((e,t)=>n.model.themeChanged.emit(t)),t.add(n),e.shell.activateById("jupytergis::leftControlPanel"),e.shell.activateById("jupytergis::rightControlPanel")};M.widgetCreated.connect(b),v.widgetCreated.connect(b),x&&(e.commands.addCommand(r.exportQgis,{label:"Export To QGZ",isEnabled:()=>!!t.currentWidget&&t.currentWidget.model.sharedModel.editable,execute:async e=>{var o,r;const i=".jGIS",s=".qgz",d=null===(o=t.currentWidget)||void 0===o?void 0:o.model.sharedModel;if(!d)return;const c=t.currentWidget.model.filePath;let m=null!==(r=e.filepath)&&void 0!==r?r:null;if(m||(m=(await l.InputDialog.getText({label:"File name",placeholder:g.PathExt.basename(c,i),title:"Export the project to QGZ file"})).value),null===m)return;m?m.endsWith(s)||(m=`${m}${s}`):m=`${g.PathExt.basename(c,i)}${s}`;let y=g.PathExt.dirname(c);y.includes(":")&&(y=y.split(":")[1]);const p=g.PathExt.join(y,m),h={layers:d.layers,sources:d.sources,layerTree:d.layerTree.slice().reverse(),options:d.options};let G=!0;if(await n.get(p,{content:!1}).catch(()=>{G=!1}),G&&!(await(0,l.showDialog)({title:"Export the project to QGZ file",body:`The file ${m} already exists.\nDo you want to overwrite it ?`})).button.accept)return;const S=await(0,a.requestAPI)("jupytergis_qgis/export",{method:"POST",body:JSON.stringify({path:p,virtual_file:h})});if(S.exported){if(S.logs.warnings.length){const e=document.createElement("pre");e.textContent=`${m} has been exported with warnings\n  - ${S.logs.warnings.join("\n  - ")}`;const t=new u.Widget({node:e});await(0,l.showDialog)({title:"Export the project to QGZ file",body:t,buttons:[l.Dialog.okButton()]})}}else(0,l.showErrorMessage)("Export the project to QGZ file",S.logs.errors.length?S.logs.errors.join("\n"):"Unknown error")}}),Q&&Q.addItem({command:r.exportQgis,category:"JupyterGIS"})),console.log("@jupytergis/jupytergis-qgis:qgisplugin is activated!")}}]}}]);