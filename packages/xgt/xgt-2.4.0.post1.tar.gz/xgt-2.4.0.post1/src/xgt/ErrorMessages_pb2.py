# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: ErrorMessages.proto
# Protobuf Python Version: 6.30.0
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    30,
    0,
    '',
    'ErrorMessages.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x13\x45rrorMessages.proto\x12\x08xgtproto\"O\n\x05\x45rror\x12%\n\x04\x63ode\x18\x01 \x01(\x0e\x32\x17.xgtproto.ErrorCodeEnum\x12\x0f\n\x07message\x18\x02 \x01(\t\x12\x0e\n\x06\x64\x65tail\x18\x03 \x01(\t*\xb6\x02\n\rErrorCodeEnum\x12\x0c\n\x08NO_ERROR\x10\x00\x12\x11\n\rGENERIC_ERROR\x10\x01\x12\x13\n\x0fNOT_IMPLEMENTED\x10\x02\x12\x12\n\x0eINTERNAL_ERROR\x10\x03\x12\x0c\n\x08IO_ERROR\x10\x04\x12\x17\n\x13SERVER_MEMORY_ERROR\x10\x05\x12\x14\n\x10\x43ONNECTION_ERROR\x10\x06\x12\x10\n\x0cSYNTAX_ERROR\x10\x07\x12\x0e\n\nTYPE_ERROR\x10\x08\x12\x0f\n\x0bVALUE_ERROR\x10\t\x12\x0e\n\nNAME_ERROR\x10\n\x12\x14\n\x10\x41RITHMETIC_ERROR\x10\x0b\x12\x1a\n\x16\x46RAME_DEPENDENCY_ERROR\x10\x0c\x12\x15\n\x11TRANSACTION_ERROR\x10\r\x12\x12\n\x0eSECURITY_ERROR\x10\x0e\x62\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'ErrorMessages_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['_ERRORCODEENUM']._serialized_start=115
  _globals['_ERRORCODEENUM']._serialized_end=425
  _globals['_ERROR']._serialized_start=33
  _globals['_ERROR']._serialized_end=112
# @@protoc_insertion_point(module_scope)
