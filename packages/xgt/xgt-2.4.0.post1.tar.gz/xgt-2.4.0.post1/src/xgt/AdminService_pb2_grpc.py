# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import AdminService_pb2 as AdminService__pb2


class AdminServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ChangeErrorCount = channel.unary_unary(
                '/xgtproto.AdminService/ChangeErrorCount',
                request_serializer=AdminService__pb2.ChangeErrorCountRequest.SerializeToString,
                response_deserializer=AdminService__pb2.ChangeErrorCountResponse.FromString,
                _registered_method=True)
        self.FreeUserMemorySize = channel.unary_unary(
                '/xgtproto.AdminService/FreeUserMemorySize',
                request_serializer=AdminService__pb2.FreeUserMemorySizeRequest.SerializeToString,
                response_deserializer=AdminService__pb2.FreeUserMemorySizeResponse.FromString,
                _registered_method=True)
        self.MaxUserMemorySize = channel.unary_unary(
                '/xgtproto.AdminService/MaxUserMemorySize',
                request_serializer=AdminService__pb2.MaxUserMemorySizeRequest.SerializeToString,
                response_deserializer=AdminService__pb2.MaxUserMemorySizeResponse.FromString,
                _registered_method=True)
        self.Shutdown = channel.unary_unary(
                '/xgtproto.AdminService/Shutdown',
                request_serializer=AdminService__pb2.ShutdownRequest.SerializeToString,
                response_deserializer=AdminService__pb2.ShutdownResponse.FromString,
                _registered_method=True)
        self.Version = channel.unary_unary(
                '/xgtproto.AdminService/Version',
                request_serializer=AdminService__pb2.VersionRequest.SerializeToString,
                response_deserializer=AdminService__pb2.VersionResponse.FromString,
                _registered_method=True)
        self.ProtocolVersion = channel.unary_unary(
                '/xgtproto.AdminService/ProtocolVersion',
                request_serializer=AdminService__pb2.ProtocolVersionRequest.SerializeToString,
                response_deserializer=AdminService__pb2.ProtocolVersionResponse.FromString,
                _registered_method=True)
        self.Authenticate = channel.unary_unary(
                '/xgtproto.AdminService/Authenticate',
                request_serializer=AdminService__pb2.AuthenticateRequest.SerializeToString,
                response_deserializer=AdminService__pb2.AuthenticateResponse.FromString,
                _registered_method=True)
        self.PKIAuthenticate = channel.unary_unary(
                '/xgtproto.AdminService/PKIAuthenticate',
                request_serializer=AdminService__pb2.AuthenticateRequest.SerializeToString,
                response_deserializer=AdminService__pb2.AuthenticateResponse.FromString,
                _registered_method=True)
        self.ProxyPKIAuthenticate = channel.unary_unary(
                '/xgtproto.AdminService/ProxyPKIAuthenticate',
                request_serializer=AdminService__pb2.AuthenticateRequest.SerializeToString,
                response_deserializer=AdminService__pb2.AuthenticateResponse.FromString,
                _registered_method=True)
        self.TrustedProxyAuthenticate = channel.unary_unary(
                '/xgtproto.AdminService/TrustedProxyAuthenticate',
                request_serializer=AdminService__pb2.AuthenticateRequest.SerializeToString,
                response_deserializer=AdminService__pb2.AuthenticateResponse.FromString,
                _registered_method=True)
        self.KerberosAuthenticate = channel.unary_unary(
                '/xgtproto.AdminService/KerberosAuthenticate',
                request_serializer=AdminService__pb2.KerberosAuthenticateRequest.SerializeToString,
                response_deserializer=AdminService__pb2.KerberosAuthenticateResponse.FromString,
                _registered_method=True)
        self.CloseSession = channel.unary_unary(
                '/xgtproto.AdminService/CloseSession',
                request_serializer=AdminService__pb2.CloseSessionRequest.SerializeToString,
                response_deserializer=AdminService__pb2.CloseSessionResponse.FromString,
                _registered_method=True)
        self.KeepAliveSession = channel.unary_unary(
                '/xgtproto.AdminService/KeepAliveSession',
                request_serializer=AdminService__pb2.KeepAliveSessionRequest.SerializeToString,
                response_deserializer=AdminService__pb2.KeepAliveSessionResponse.FromString,
                _registered_method=True)
        self.GetConfig = channel.unary_unary(
                '/xgtproto.AdminService/GetConfig',
                request_serializer=AdminService__pb2.GetConfigRequest.SerializeToString,
                response_deserializer=AdminService__pb2.GetConfigResponse.FromString,
                _registered_method=True)
        self.SetConfig = channel.unary_unary(
                '/xgtproto.AdminService/SetConfig',
                request_serializer=AdminService__pb2.SetConfigRequest.SerializeToString,
                response_deserializer=AdminService__pb2.SetConfigResponse.FromString,
                _registered_method=True)
        self.SetDefaultNamespace = channel.unary_unary(
                '/xgtproto.AdminService/SetDefaultNamespace',
                request_serializer=AdminService__pb2.SetDefaultNamespaceRequest.SerializeToString,
                response_deserializer=AdminService__pb2.SetDefaultNamespaceResponse.FromString,
                _registered_method=True)
        self.GetDefaultNamespace = channel.unary_unary(
                '/xgtproto.AdminService/GetDefaultNamespace',
                request_serializer=AdminService__pb2.GetDefaultNamespaceRequest.SerializeToString,
                response_deserializer=AdminService__pb2.GetDefaultNamespaceResponse.FromString,
                _registered_method=True)
        self.SetDefaultGraph = channel.unary_unary(
                '/xgtproto.AdminService/SetDefaultGraph',
                request_serializer=AdminService__pb2.SetDefaultGraphRequest.SerializeToString,
                response_deserializer=AdminService__pb2.SetDefaultGraphResponse.FromString,
                _registered_method=True)
        self.GetDefaultGraph = channel.unary_unary(
                '/xgtproto.AdminService/GetDefaultGraph',
                request_serializer=AdminService__pb2.GetDefaultGraphRequest.SerializeToString,
                response_deserializer=AdminService__pb2.GetDefaultGraphResponse.FromString,
                _registered_method=True)
        self.IsAdmin = channel.unary_unary(
                '/xgtproto.AdminService/IsAdmin',
                request_serializer=AdminService__pb2.IsAdminRequest.SerializeToString,
                response_deserializer=AdminService__pb2.IsAdminResponse.FromString,
                _registered_method=True)


class AdminServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ChangeErrorCount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FreeUserMemorySize(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MaxUserMemorySize(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Shutdown(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Version(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ProtocolVersion(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Authenticate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PKIAuthenticate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ProxyPKIAuthenticate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TrustedProxyAuthenticate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def KerberosAuthenticate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CloseSession(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def KeepAliveSession(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetDefaultNamespace(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDefaultNamespace(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetDefaultGraph(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDefaultGraph(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def IsAdmin(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AdminServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ChangeErrorCount': grpc.unary_unary_rpc_method_handler(
                    servicer.ChangeErrorCount,
                    request_deserializer=AdminService__pb2.ChangeErrorCountRequest.FromString,
                    response_serializer=AdminService__pb2.ChangeErrorCountResponse.SerializeToString,
            ),
            'FreeUserMemorySize': grpc.unary_unary_rpc_method_handler(
                    servicer.FreeUserMemorySize,
                    request_deserializer=AdminService__pb2.FreeUserMemorySizeRequest.FromString,
                    response_serializer=AdminService__pb2.FreeUserMemorySizeResponse.SerializeToString,
            ),
            'MaxUserMemorySize': grpc.unary_unary_rpc_method_handler(
                    servicer.MaxUserMemorySize,
                    request_deserializer=AdminService__pb2.MaxUserMemorySizeRequest.FromString,
                    response_serializer=AdminService__pb2.MaxUserMemorySizeResponse.SerializeToString,
            ),
            'Shutdown': grpc.unary_unary_rpc_method_handler(
                    servicer.Shutdown,
                    request_deserializer=AdminService__pb2.ShutdownRequest.FromString,
                    response_serializer=AdminService__pb2.ShutdownResponse.SerializeToString,
            ),
            'Version': grpc.unary_unary_rpc_method_handler(
                    servicer.Version,
                    request_deserializer=AdminService__pb2.VersionRequest.FromString,
                    response_serializer=AdminService__pb2.VersionResponse.SerializeToString,
            ),
            'ProtocolVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.ProtocolVersion,
                    request_deserializer=AdminService__pb2.ProtocolVersionRequest.FromString,
                    response_serializer=AdminService__pb2.ProtocolVersionResponse.SerializeToString,
            ),
            'Authenticate': grpc.unary_unary_rpc_method_handler(
                    servicer.Authenticate,
                    request_deserializer=AdminService__pb2.AuthenticateRequest.FromString,
                    response_serializer=AdminService__pb2.AuthenticateResponse.SerializeToString,
            ),
            'PKIAuthenticate': grpc.unary_unary_rpc_method_handler(
                    servicer.PKIAuthenticate,
                    request_deserializer=AdminService__pb2.AuthenticateRequest.FromString,
                    response_serializer=AdminService__pb2.AuthenticateResponse.SerializeToString,
            ),
            'ProxyPKIAuthenticate': grpc.unary_unary_rpc_method_handler(
                    servicer.ProxyPKIAuthenticate,
                    request_deserializer=AdminService__pb2.AuthenticateRequest.FromString,
                    response_serializer=AdminService__pb2.AuthenticateResponse.SerializeToString,
            ),
            'TrustedProxyAuthenticate': grpc.unary_unary_rpc_method_handler(
                    servicer.TrustedProxyAuthenticate,
                    request_deserializer=AdminService__pb2.AuthenticateRequest.FromString,
                    response_serializer=AdminService__pb2.AuthenticateResponse.SerializeToString,
            ),
            'KerberosAuthenticate': grpc.unary_unary_rpc_method_handler(
                    servicer.KerberosAuthenticate,
                    request_deserializer=AdminService__pb2.KerberosAuthenticateRequest.FromString,
                    response_serializer=AdminService__pb2.KerberosAuthenticateResponse.SerializeToString,
            ),
            'CloseSession': grpc.unary_unary_rpc_method_handler(
                    servicer.CloseSession,
                    request_deserializer=AdminService__pb2.CloseSessionRequest.FromString,
                    response_serializer=AdminService__pb2.CloseSessionResponse.SerializeToString,
            ),
            'KeepAliveSession': grpc.unary_unary_rpc_method_handler(
                    servicer.KeepAliveSession,
                    request_deserializer=AdminService__pb2.KeepAliveSessionRequest.FromString,
                    response_serializer=AdminService__pb2.KeepAliveSessionResponse.SerializeToString,
            ),
            'GetConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.GetConfig,
                    request_deserializer=AdminService__pb2.GetConfigRequest.FromString,
                    response_serializer=AdminService__pb2.GetConfigResponse.SerializeToString,
            ),
            'SetConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.SetConfig,
                    request_deserializer=AdminService__pb2.SetConfigRequest.FromString,
                    response_serializer=AdminService__pb2.SetConfigResponse.SerializeToString,
            ),
            'SetDefaultNamespace': grpc.unary_unary_rpc_method_handler(
                    servicer.SetDefaultNamespace,
                    request_deserializer=AdminService__pb2.SetDefaultNamespaceRequest.FromString,
                    response_serializer=AdminService__pb2.SetDefaultNamespaceResponse.SerializeToString,
            ),
            'GetDefaultNamespace': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDefaultNamespace,
                    request_deserializer=AdminService__pb2.GetDefaultNamespaceRequest.FromString,
                    response_serializer=AdminService__pb2.GetDefaultNamespaceResponse.SerializeToString,
            ),
            'SetDefaultGraph': grpc.unary_unary_rpc_method_handler(
                    servicer.SetDefaultGraph,
                    request_deserializer=AdminService__pb2.SetDefaultGraphRequest.FromString,
                    response_serializer=AdminService__pb2.SetDefaultGraphResponse.SerializeToString,
            ),
            'GetDefaultGraph': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDefaultGraph,
                    request_deserializer=AdminService__pb2.GetDefaultGraphRequest.FromString,
                    response_serializer=AdminService__pb2.GetDefaultGraphResponse.SerializeToString,
            ),
            'IsAdmin': grpc.unary_unary_rpc_method_handler(
                    servicer.IsAdmin,
                    request_deserializer=AdminService__pb2.IsAdminRequest.FromString,
                    response_serializer=AdminService__pb2.IsAdminResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'xgtproto.AdminService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('xgtproto.AdminService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class AdminService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ChangeErrorCount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/xgtproto.AdminService/ChangeErrorCount',
            AdminService__pb2.ChangeErrorCountRequest.SerializeToString,
            AdminService__pb2.ChangeErrorCountResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FreeUserMemorySize(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/xgtproto.AdminService/FreeUserMemorySize',
            AdminService__pb2.FreeUserMemorySizeRequest.SerializeToString,
            AdminService__pb2.FreeUserMemorySizeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def MaxUserMemorySize(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/xgtproto.AdminService/MaxUserMemorySize',
            AdminService__pb2.MaxUserMemorySizeRequest.SerializeToString,
            AdminService__pb2.MaxUserMemorySizeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Shutdown(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/xgtproto.AdminService/Shutdown',
            AdminService__pb2.ShutdownRequest.SerializeToString,
            AdminService__pb2.ShutdownResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Version(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/xgtproto.AdminService/Version',
            AdminService__pb2.VersionRequest.SerializeToString,
            AdminService__pb2.VersionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ProtocolVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/xgtproto.AdminService/ProtocolVersion',
            AdminService__pb2.ProtocolVersionRequest.SerializeToString,
            AdminService__pb2.ProtocolVersionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Authenticate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/xgtproto.AdminService/Authenticate',
            AdminService__pb2.AuthenticateRequest.SerializeToString,
            AdminService__pb2.AuthenticateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PKIAuthenticate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/xgtproto.AdminService/PKIAuthenticate',
            AdminService__pb2.AuthenticateRequest.SerializeToString,
            AdminService__pb2.AuthenticateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ProxyPKIAuthenticate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/xgtproto.AdminService/ProxyPKIAuthenticate',
            AdminService__pb2.AuthenticateRequest.SerializeToString,
            AdminService__pb2.AuthenticateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def TrustedProxyAuthenticate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/xgtproto.AdminService/TrustedProxyAuthenticate',
            AdminService__pb2.AuthenticateRequest.SerializeToString,
            AdminService__pb2.AuthenticateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def KerberosAuthenticate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/xgtproto.AdminService/KerberosAuthenticate',
            AdminService__pb2.KerberosAuthenticateRequest.SerializeToString,
            AdminService__pb2.KerberosAuthenticateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CloseSession(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/xgtproto.AdminService/CloseSession',
            AdminService__pb2.CloseSessionRequest.SerializeToString,
            AdminService__pb2.CloseSessionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def KeepAliveSession(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/xgtproto.AdminService/KeepAliveSession',
            AdminService__pb2.KeepAliveSessionRequest.SerializeToString,
            AdminService__pb2.KeepAliveSessionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/xgtproto.AdminService/GetConfig',
            AdminService__pb2.GetConfigRequest.SerializeToString,
            AdminService__pb2.GetConfigResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/xgtproto.AdminService/SetConfig',
            AdminService__pb2.SetConfigRequest.SerializeToString,
            AdminService__pb2.SetConfigResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetDefaultNamespace(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/xgtproto.AdminService/SetDefaultNamespace',
            AdminService__pb2.SetDefaultNamespaceRequest.SerializeToString,
            AdminService__pb2.SetDefaultNamespaceResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetDefaultNamespace(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/xgtproto.AdminService/GetDefaultNamespace',
            AdminService__pb2.GetDefaultNamespaceRequest.SerializeToString,
            AdminService__pb2.GetDefaultNamespaceResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetDefaultGraph(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/xgtproto.AdminService/SetDefaultGraph',
            AdminService__pb2.SetDefaultGraphRequest.SerializeToString,
            AdminService__pb2.SetDefaultGraphResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetDefaultGraph(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/xgtproto.AdminService/GetDefaultGraph',
            AdminService__pb2.GetDefaultGraphRequest.SerializeToString,
            AdminService__pb2.GetDefaultGraphResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def IsAdmin(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/xgtproto.AdminService/IsAdmin',
            AdminService__pb2.IsAdminRequest.SerializeToString,
            AdminService__pb2.IsAdminResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
