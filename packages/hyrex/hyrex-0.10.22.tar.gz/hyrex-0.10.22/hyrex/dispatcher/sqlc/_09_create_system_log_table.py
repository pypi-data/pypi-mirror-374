# Code generated by sqlc. DO NOT EDIT.
# versions:
#   sqlc v1.29.0
# source: _09_create_system_log_table.sql
import dataclasses

import sqlalchemy
import sqlalchemy.ext.asyncio

from . import models


CREATE_SYSTEM_LOG_TABLE = """-- name: create_system_log_table \\:exec
CREATE TABLE IF NOT EXISTS hyrex_system_logs
(
    id         UUID    NOT NULL PRIMARY KEY,
    timestamp  TIMESTAMP WITH TIME ZONE,
    event_name VARCHAR NOT NULL,
    event_body JSON    NOT NULL
)
"""


@dataclasses.dataclass()
class CreateSystemLogTableParams:

    pass

class Querier:
    def __init__(self, conn: sqlalchemy.engine.Connection):
        self._conn = conn

    def create_system_log_table(self, arg: CreateSystemLogTableParams) -> None:
        self._conn.execute(sqlalchemy.text(CREATE_SYSTEM_LOG_TABLE))


class AsyncQuerier:
    def __init__(self, conn: sqlalchemy.ext.asyncio.AsyncConnection):
        self._conn = conn

    async def create_system_log_table(self, arg: CreateSystemLogTableParams) -> None:
        await self._conn.execute(sqlalchemy.text(CREATE_SYSTEM_LOG_TABLE))
