# Code generated by sqlc. DO NOT EDIT.
# versions:
#   sqlc v1.29.0
# source: _06_create_hyrex_stats_task_status_counts_table_indexes.sql
import dataclasses

import sqlalchemy
import sqlalchemy.ext.asyncio

from . import models


CREATE_STATS_TASK_STATUS_COUNTS_TABLE_INDEXES = """-- name: create_stats_task_status_counts_table_indexes \\:exec
CREATE INDEX IF NOT EXISTS idx_hstsc_timepoint
    ON hyrex_stats_task_status_counts(timepoint)
"""


@dataclasses.dataclass()
class CreateStatsTaskStatusCountsTableIndexesParams:

    pass

class Querier:
    def __init__(self, conn: sqlalchemy.engine.Connection):
        self._conn = conn

    def create_stats_task_status_counts_table_indexes(self, arg: CreateStatsTaskStatusCountsTableIndexesParams) -> None:
        self._conn.execute(sqlalchemy.text(CREATE_STATS_TASK_STATUS_COUNTS_TABLE_INDEXES))


class AsyncQuerier:
    def __init__(self, conn: sqlalchemy.ext.asyncio.AsyncConnection):
        self._conn = conn

    async def create_stats_task_status_counts_table_indexes(self, arg: CreateStatsTaskStatusCountsTableIndexesParams) -> None:
        await self._conn.execute(sqlalchemy.text(CREATE_STATS_TASK_STATUS_COUNTS_TABLE_INDEXES))
