# Code generated by sqlc. DO NOT EDIT.
# versions:
#   sqlc v1.29.0
# source: create_hype_command_type_enum.sql
import dataclasses

import sqlalchemy
import sqlalchemy.ext.asyncio

from . import models


CREATE_HYPE_COMMAND_TYPE_ENUM = """-- name: create_hype_command_type_enum \\:exec
DO $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'hype_command_type') THEN
        CREATE TYPE hype_command_type AS ENUM ('TASK', 'WORKFLOW');
    END IF;
END
$$
"""


@dataclasses.dataclass()
class CreateHypeCommandTypeEnumParams:

    pass

class Querier:
    def __init__(self, conn: sqlalchemy.engine.Connection):
        self._conn = conn

    def create_hype_command_type_enum(self, arg: CreateHypeCommandTypeEnumParams) -> None:
        self._conn.execute(sqlalchemy.text(CREATE_HYPE_COMMAND_TYPE_ENUM))


class AsyncQuerier:
    def __init__(self, conn: sqlalchemy.ext.asyncio.AsyncConnection):
        self._conn = conn

    async def create_hype_command_type_enum(self, arg: CreateHypeCommandTypeEnumParams) -> None:
        await self._conn.execute(sqlalchemy.text(CREATE_HYPE_COMMAND_TYPE_ENUM))
