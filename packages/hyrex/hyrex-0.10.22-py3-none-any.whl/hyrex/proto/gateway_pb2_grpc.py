# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from . import requests_pb2 as requests__pb2

GRPC_GENERATED_VERSION = '1.71.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in gateway_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class GatewayServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.TestConnection = channel.unary_unary(
                '/hyrex.performanceserver.GatewayService/TestConnection',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.WriteLogs = channel.unary_unary(
                '/hyrex.performanceserver.GatewayService/WriteLogs',
                request_serializer=requests__pb2.WriteLogsRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.Enqueue = channel.unary_unary(
                '/hyrex.performanceserver.GatewayService/Enqueue',
                request_serializer=requests__pb2.EnqueueRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.Dequeue = channel.unary_unary(
                '/hyrex.performanceserver.GatewayService/Dequeue',
                request_serializer=requests__pb2.DequeueRequest.SerializeToString,
                response_deserializer=requests__pb2.DequeueResponse.FromString,
                _registered_method=True)
        self.GetQueues = channel.unary_unary(
                '/hyrex.performanceserver.GatewayService/GetQueues',
                request_serializer=requests__pb2.GetQueuesRequest.SerializeToString,
                response_deserializer=requests__pb2.GetQueuesResponse.FromString,
                _registered_method=True)
        self.GetTaskRunStatus = channel.unary_unary(
                '/hyrex.performanceserver.GatewayService/GetTaskRunStatus',
                request_serializer=requests__pb2.GetTaskRunStatusRequest.SerializeToString,
                response_deserializer=requests__pb2.GetTaskRunStatusResponse.FromString,
                _registered_method=True)
        self.MarkSuccess = channel.unary_unary(
                '/hyrex.performanceserver.GatewayService/MarkSuccess',
                request_serializer=requests__pb2.MarkSuccessRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.MarkFailed = channel.unary_unary(
                '/hyrex.performanceserver.GatewayService/MarkFailed',
                request_serializer=requests__pb2.MarkFailedRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.GetTaskRun = channel.unary_unary(
                '/hyrex.performanceserver.GatewayService/GetTaskRun',
                request_serializer=requests__pb2.GetTaskRunRequest.SerializeToString,
                response_deserializer=requests__pb2.GetTaskRunResponse.FromString,
                _registered_method=True)
        self.GetDurableTaskRuns = channel.unary_unary(
                '/hyrex.performanceserver.GatewayService/GetDurableTaskRuns',
                request_serializer=requests__pb2.GetDurableTaskRunsRequest.SerializeToString,
                response_deserializer=requests__pb2.GetDurableTaskRunsResponse.FromString,
                _registered_method=True)
        self.RetryTaskRun = channel.unary_unary(
                '/hyrex.performanceserver.GatewayService/RetryTaskRun',
                request_serializer=requests__pb2.RetryTaskRunRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.TaskRunHeartbeat = channel.unary_unary(
                '/hyrex.performanceserver.GatewayService/TaskRunHeartbeat',
                request_serializer=requests__pb2.TaskRunHeartbeatRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.TryToCancelDurableRun = channel.unary_unary(
                '/hyrex.performanceserver.GatewayService/TryToCancelDurableRun',
                request_serializer=requests__pb2.TryToCancelDurableRunRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.TryToCancelMultipleDurableRuns = channel.unary_unary(
                '/hyrex.performanceserver.GatewayService/TryToCancelMultipleDurableRuns',
                request_serializer=requests__pb2.TryToCancelMultipleDurableRunsRequest.SerializeToString,
                response_deserializer=requests__pb2.TryToCancelMultipleDurableRunsResponse.FromString,
                _registered_method=True)
        self.GetTaskRunsUpForCancel = channel.unary_unary(
                '/hyrex.performanceserver.GatewayService/GetTaskRunsUpForCancel',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=requests__pb2.GetTaskRunsUpForCancelResponse.FromString,
                _registered_method=True)
        self.MarkCanceled = channel.unary_unary(
                '/hyrex.performanceserver.GatewayService/MarkCanceled',
                request_serializer=requests__pb2.MarkCanceledRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.KVStoreSet = channel.unary_unary(
                '/hyrex.performanceserver.GatewayService/KVStoreSet',
                request_serializer=requests__pb2.KVStoreSetRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.KVStoreGet = channel.unary_unary(
                '/hyrex.performanceserver.GatewayService/KVStoreGet',
                request_serializer=requests__pb2.KVStoreGetRequest.SerializeToString,
                response_deserializer=requests__pb2.KVStoreGetResponse.FromString,
                _registered_method=True)
        self.KVStoreDelete = channel.unary_unary(
                '/hyrex.performanceserver.GatewayService/KVStoreDelete',
                request_serializer=requests__pb2.KVStoreDeleteRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.MarkRunningTasksLost = channel.unary_unary(
                '/hyrex.performanceserver.GatewayService/MarkRunningTasksLost',
                request_serializer=requests__pb2.MarkRunningTasksLostRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.GetTaskTree = channel.unary_unary(
                '/hyrex.performanceserver.GatewayService/GetTaskTree',
                request_serializer=requests__pb2.GetTaskTreeRequest.SerializeToString,
                response_deserializer=requests__pb2.GetTaskTreeResponse.FromString,
                _registered_method=True)
        self.RegisterTaskDef = channel.unary_unary(
                '/hyrex.performanceserver.GatewayService/RegisterTaskDef',
                request_serializer=requests__pb2.RegisterTaskDefRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.GetTaskDef = channel.unary_unary(
                '/hyrex.performanceserver.GatewayService/GetTaskDef',
                request_serializer=requests__pb2.GetTaskDefRequest.SerializeToString,
                response_deserializer=requests__pb2.GetTaskDefResponse.FromString,
                _registered_method=True)
        self.GetAllTaskDefs = channel.unary_unary(
                '/hyrex.performanceserver.GatewayService/GetAllTaskDefs',
                request_serializer=requests__pb2.GetAllTaskDefsRequest.SerializeToString,
                response_deserializer=requests__pb2.GetAllTaskDefsResponse.FromString,
                _registered_method=True)
        self.RegisterExecutor = channel.unary_unary(
                '/hyrex.performanceserver.GatewayService/RegisterExecutor',
                request_serializer=requests__pb2.RegisterExecutorRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.ExecutorHeartbeat = channel.unary_unary(
                '/hyrex.performanceserver.GatewayService/ExecutorHeartbeat',
                request_serializer=requests__pb2.ExecutorHeartbeatRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.UpdateExecutorStats = channel.unary_unary(
                '/hyrex.performanceserver.GatewayService/UpdateExecutorStats',
                request_serializer=requests__pb2.UpdateExecutorStatsRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.UpdateExecutorQueues = channel.unary_unary(
                '/hyrex.performanceserver.GatewayService/UpdateExecutorQueues',
                request_serializer=requests__pb2.UpdateExecutorQueuesRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.DisconnectExecutor = channel.unary_unary(
                '/hyrex.performanceserver.GatewayService/DisconnectExecutor',
                request_serializer=requests__pb2.DisconnectExecutorRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.RegisterApp = channel.unary_unary(
                '/hyrex.performanceserver.GatewayService/RegisterApp',
                request_serializer=requests__pb2.RegisterAppRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.SetLogLink = channel.unary_unary(
                '/hyrex.performanceserver.GatewayService/SetLogLink',
                request_serializer=requests__pb2.SetLogLinkRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.RegisterWorkflow = channel.unary_unary(
                '/hyrex.performanceserver.GatewayService/RegisterWorkflow',
                request_serializer=requests__pb2.RegisterWorkflowRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.SendWorkflowRun = channel.unary_unary(
                '/hyrex.performanceserver.GatewayService/SendWorkflowRun',
                request_serializer=requests__pb2.SendWorkflowRunRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.GetWorkflowRunArgs = channel.unary_unary(
                '/hyrex.performanceserver.GatewayService/GetWorkflowRunArgs',
                request_serializer=requests__pb2.GetWorkflowRunArgsRequest.SerializeToString,
                response_deserializer=requests__pb2.GetWorkflowRunArgsResponse.FromString,
                _registered_method=True)
        self.AdvanceWorkflowRun = channel.unary_unary(
                '/hyrex.performanceserver.GatewayService/AdvanceWorkflowRun',
                request_serializer=requests__pb2.AdvanceWorkflowRunRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.GetWorkflowDurableRuns = channel.unary_unary(
                '/hyrex.performanceserver.GatewayService/GetWorkflowDurableRuns',
                request_serializer=requests__pb2.GetWorkflowDurableRunsRequest.SerializeToString,
                response_deserializer=requests__pb2.GetWorkflowDurableRunsResponse.FromString,
                _registered_method=True)


class GatewayServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def TestConnection(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WriteLogs(self, request, context):
        """---- S3 requests ----
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Enqueue(self, request, context):
        """---- Valkey requests ----
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Dequeue(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetQueues(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTaskRunStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MarkSuccess(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MarkFailed(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTaskRun(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDurableTaskRuns(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RetryTaskRun(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TaskRunHeartbeat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TryToCancelDurableRun(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TryToCancelMultipleDurableRuns(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTaskRunsUpForCancel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MarkCanceled(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def KVStoreSet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def KVStoreGet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def KVStoreDelete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MarkRunningTasksLost(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTaskTree(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterTaskDef(self, request, context):
        """---- Postgres requests ----
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTaskDef(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllTaskDefs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterExecutor(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExecutorHeartbeat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateExecutorStats(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateExecutorQueues(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DisconnectExecutor(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterApp(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetLogLink(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterWorkflow(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendWorkflowRun(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetWorkflowRunArgs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AdvanceWorkflowRun(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetWorkflowDurableRuns(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GatewayServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'TestConnection': grpc.unary_unary_rpc_method_handler(
                    servicer.TestConnection,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'WriteLogs': grpc.unary_unary_rpc_method_handler(
                    servicer.WriteLogs,
                    request_deserializer=requests__pb2.WriteLogsRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'Enqueue': grpc.unary_unary_rpc_method_handler(
                    servicer.Enqueue,
                    request_deserializer=requests__pb2.EnqueueRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'Dequeue': grpc.unary_unary_rpc_method_handler(
                    servicer.Dequeue,
                    request_deserializer=requests__pb2.DequeueRequest.FromString,
                    response_serializer=requests__pb2.DequeueResponse.SerializeToString,
            ),
            'GetQueues': grpc.unary_unary_rpc_method_handler(
                    servicer.GetQueues,
                    request_deserializer=requests__pb2.GetQueuesRequest.FromString,
                    response_serializer=requests__pb2.GetQueuesResponse.SerializeToString,
            ),
            'GetTaskRunStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTaskRunStatus,
                    request_deserializer=requests__pb2.GetTaskRunStatusRequest.FromString,
                    response_serializer=requests__pb2.GetTaskRunStatusResponse.SerializeToString,
            ),
            'MarkSuccess': grpc.unary_unary_rpc_method_handler(
                    servicer.MarkSuccess,
                    request_deserializer=requests__pb2.MarkSuccessRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'MarkFailed': grpc.unary_unary_rpc_method_handler(
                    servicer.MarkFailed,
                    request_deserializer=requests__pb2.MarkFailedRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetTaskRun': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTaskRun,
                    request_deserializer=requests__pb2.GetTaskRunRequest.FromString,
                    response_serializer=requests__pb2.GetTaskRunResponse.SerializeToString,
            ),
            'GetDurableTaskRuns': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDurableTaskRuns,
                    request_deserializer=requests__pb2.GetDurableTaskRunsRequest.FromString,
                    response_serializer=requests__pb2.GetDurableTaskRunsResponse.SerializeToString,
            ),
            'RetryTaskRun': grpc.unary_unary_rpc_method_handler(
                    servicer.RetryTaskRun,
                    request_deserializer=requests__pb2.RetryTaskRunRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'TaskRunHeartbeat': grpc.unary_unary_rpc_method_handler(
                    servicer.TaskRunHeartbeat,
                    request_deserializer=requests__pb2.TaskRunHeartbeatRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'TryToCancelDurableRun': grpc.unary_unary_rpc_method_handler(
                    servicer.TryToCancelDurableRun,
                    request_deserializer=requests__pb2.TryToCancelDurableRunRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'TryToCancelMultipleDurableRuns': grpc.unary_unary_rpc_method_handler(
                    servicer.TryToCancelMultipleDurableRuns,
                    request_deserializer=requests__pb2.TryToCancelMultipleDurableRunsRequest.FromString,
                    response_serializer=requests__pb2.TryToCancelMultipleDurableRunsResponse.SerializeToString,
            ),
            'GetTaskRunsUpForCancel': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTaskRunsUpForCancel,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=requests__pb2.GetTaskRunsUpForCancelResponse.SerializeToString,
            ),
            'MarkCanceled': grpc.unary_unary_rpc_method_handler(
                    servicer.MarkCanceled,
                    request_deserializer=requests__pb2.MarkCanceledRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'KVStoreSet': grpc.unary_unary_rpc_method_handler(
                    servicer.KVStoreSet,
                    request_deserializer=requests__pb2.KVStoreSetRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'KVStoreGet': grpc.unary_unary_rpc_method_handler(
                    servicer.KVStoreGet,
                    request_deserializer=requests__pb2.KVStoreGetRequest.FromString,
                    response_serializer=requests__pb2.KVStoreGetResponse.SerializeToString,
            ),
            'KVStoreDelete': grpc.unary_unary_rpc_method_handler(
                    servicer.KVStoreDelete,
                    request_deserializer=requests__pb2.KVStoreDeleteRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'MarkRunningTasksLost': grpc.unary_unary_rpc_method_handler(
                    servicer.MarkRunningTasksLost,
                    request_deserializer=requests__pb2.MarkRunningTasksLostRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetTaskTree': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTaskTree,
                    request_deserializer=requests__pb2.GetTaskTreeRequest.FromString,
                    response_serializer=requests__pb2.GetTaskTreeResponse.SerializeToString,
            ),
            'RegisterTaskDef': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterTaskDef,
                    request_deserializer=requests__pb2.RegisterTaskDefRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetTaskDef': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTaskDef,
                    request_deserializer=requests__pb2.GetTaskDefRequest.FromString,
                    response_serializer=requests__pb2.GetTaskDefResponse.SerializeToString,
            ),
            'GetAllTaskDefs': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllTaskDefs,
                    request_deserializer=requests__pb2.GetAllTaskDefsRequest.FromString,
                    response_serializer=requests__pb2.GetAllTaskDefsResponse.SerializeToString,
            ),
            'RegisterExecutor': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterExecutor,
                    request_deserializer=requests__pb2.RegisterExecutorRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'ExecutorHeartbeat': grpc.unary_unary_rpc_method_handler(
                    servicer.ExecutorHeartbeat,
                    request_deserializer=requests__pb2.ExecutorHeartbeatRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'UpdateExecutorStats': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateExecutorStats,
                    request_deserializer=requests__pb2.UpdateExecutorStatsRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'UpdateExecutorQueues': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateExecutorQueues,
                    request_deserializer=requests__pb2.UpdateExecutorQueuesRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'DisconnectExecutor': grpc.unary_unary_rpc_method_handler(
                    servicer.DisconnectExecutor,
                    request_deserializer=requests__pb2.DisconnectExecutorRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'RegisterApp': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterApp,
                    request_deserializer=requests__pb2.RegisterAppRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'SetLogLink': grpc.unary_unary_rpc_method_handler(
                    servicer.SetLogLink,
                    request_deserializer=requests__pb2.SetLogLinkRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'RegisterWorkflow': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterWorkflow,
                    request_deserializer=requests__pb2.RegisterWorkflowRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'SendWorkflowRun': grpc.unary_unary_rpc_method_handler(
                    servicer.SendWorkflowRun,
                    request_deserializer=requests__pb2.SendWorkflowRunRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetWorkflowRunArgs': grpc.unary_unary_rpc_method_handler(
                    servicer.GetWorkflowRunArgs,
                    request_deserializer=requests__pb2.GetWorkflowRunArgsRequest.FromString,
                    response_serializer=requests__pb2.GetWorkflowRunArgsResponse.SerializeToString,
            ),
            'AdvanceWorkflowRun': grpc.unary_unary_rpc_method_handler(
                    servicer.AdvanceWorkflowRun,
                    request_deserializer=requests__pb2.AdvanceWorkflowRunRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetWorkflowDurableRuns': grpc.unary_unary_rpc_method_handler(
                    servicer.GetWorkflowDurableRuns,
                    request_deserializer=requests__pb2.GetWorkflowDurableRunsRequest.FromString,
                    response_serializer=requests__pb2.GetWorkflowDurableRunsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'hyrex.performanceserver.GatewayService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('hyrex.performanceserver.GatewayService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class GatewayService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def TestConnection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/hyrex.performanceserver.GatewayService/TestConnection',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def WriteLogs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/hyrex.performanceserver.GatewayService/WriteLogs',
            requests__pb2.WriteLogsRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Enqueue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/hyrex.performanceserver.GatewayService/Enqueue',
            requests__pb2.EnqueueRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Dequeue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/hyrex.performanceserver.GatewayService/Dequeue',
            requests__pb2.DequeueRequest.SerializeToString,
            requests__pb2.DequeueResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetQueues(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/hyrex.performanceserver.GatewayService/GetQueues',
            requests__pb2.GetQueuesRequest.SerializeToString,
            requests__pb2.GetQueuesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetTaskRunStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/hyrex.performanceserver.GatewayService/GetTaskRunStatus',
            requests__pb2.GetTaskRunStatusRequest.SerializeToString,
            requests__pb2.GetTaskRunStatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def MarkSuccess(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/hyrex.performanceserver.GatewayService/MarkSuccess',
            requests__pb2.MarkSuccessRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def MarkFailed(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/hyrex.performanceserver.GatewayService/MarkFailed',
            requests__pb2.MarkFailedRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetTaskRun(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/hyrex.performanceserver.GatewayService/GetTaskRun',
            requests__pb2.GetTaskRunRequest.SerializeToString,
            requests__pb2.GetTaskRunResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetDurableTaskRuns(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/hyrex.performanceserver.GatewayService/GetDurableTaskRuns',
            requests__pb2.GetDurableTaskRunsRequest.SerializeToString,
            requests__pb2.GetDurableTaskRunsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RetryTaskRun(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/hyrex.performanceserver.GatewayService/RetryTaskRun',
            requests__pb2.RetryTaskRunRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def TaskRunHeartbeat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/hyrex.performanceserver.GatewayService/TaskRunHeartbeat',
            requests__pb2.TaskRunHeartbeatRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def TryToCancelDurableRun(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/hyrex.performanceserver.GatewayService/TryToCancelDurableRun',
            requests__pb2.TryToCancelDurableRunRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def TryToCancelMultipleDurableRuns(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/hyrex.performanceserver.GatewayService/TryToCancelMultipleDurableRuns',
            requests__pb2.TryToCancelMultipleDurableRunsRequest.SerializeToString,
            requests__pb2.TryToCancelMultipleDurableRunsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetTaskRunsUpForCancel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/hyrex.performanceserver.GatewayService/GetTaskRunsUpForCancel',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            requests__pb2.GetTaskRunsUpForCancelResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def MarkCanceled(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/hyrex.performanceserver.GatewayService/MarkCanceled',
            requests__pb2.MarkCanceledRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def KVStoreSet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/hyrex.performanceserver.GatewayService/KVStoreSet',
            requests__pb2.KVStoreSetRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def KVStoreGet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/hyrex.performanceserver.GatewayService/KVStoreGet',
            requests__pb2.KVStoreGetRequest.SerializeToString,
            requests__pb2.KVStoreGetResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def KVStoreDelete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/hyrex.performanceserver.GatewayService/KVStoreDelete',
            requests__pb2.KVStoreDeleteRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def MarkRunningTasksLost(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/hyrex.performanceserver.GatewayService/MarkRunningTasksLost',
            requests__pb2.MarkRunningTasksLostRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetTaskTree(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/hyrex.performanceserver.GatewayService/GetTaskTree',
            requests__pb2.GetTaskTreeRequest.SerializeToString,
            requests__pb2.GetTaskTreeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RegisterTaskDef(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/hyrex.performanceserver.GatewayService/RegisterTaskDef',
            requests__pb2.RegisterTaskDefRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetTaskDef(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/hyrex.performanceserver.GatewayService/GetTaskDef',
            requests__pb2.GetTaskDefRequest.SerializeToString,
            requests__pb2.GetTaskDefResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAllTaskDefs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/hyrex.performanceserver.GatewayService/GetAllTaskDefs',
            requests__pb2.GetAllTaskDefsRequest.SerializeToString,
            requests__pb2.GetAllTaskDefsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RegisterExecutor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/hyrex.performanceserver.GatewayService/RegisterExecutor',
            requests__pb2.RegisterExecutorRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ExecutorHeartbeat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/hyrex.performanceserver.GatewayService/ExecutorHeartbeat',
            requests__pb2.ExecutorHeartbeatRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateExecutorStats(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/hyrex.performanceserver.GatewayService/UpdateExecutorStats',
            requests__pb2.UpdateExecutorStatsRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateExecutorQueues(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/hyrex.performanceserver.GatewayService/UpdateExecutorQueues',
            requests__pb2.UpdateExecutorQueuesRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DisconnectExecutor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/hyrex.performanceserver.GatewayService/DisconnectExecutor',
            requests__pb2.DisconnectExecutorRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RegisterApp(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/hyrex.performanceserver.GatewayService/RegisterApp',
            requests__pb2.RegisterAppRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetLogLink(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/hyrex.performanceserver.GatewayService/SetLogLink',
            requests__pb2.SetLogLinkRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RegisterWorkflow(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/hyrex.performanceserver.GatewayService/RegisterWorkflow',
            requests__pb2.RegisterWorkflowRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SendWorkflowRun(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/hyrex.performanceserver.GatewayService/SendWorkflowRun',
            requests__pb2.SendWorkflowRunRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetWorkflowRunArgs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/hyrex.performanceserver.GatewayService/GetWorkflowRunArgs',
            requests__pb2.GetWorkflowRunArgsRequest.SerializeToString,
            requests__pb2.GetWorkflowRunArgsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AdvanceWorkflowRun(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/hyrex.performanceserver.GatewayService/AdvanceWorkflowRun',
            requests__pb2.AdvanceWorkflowRunRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetWorkflowDurableRuns(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/hyrex.performanceserver.GatewayService/GetWorkflowDurableRuns',
            requests__pb2.GetWorkflowDurableRunsRequest.SerializeToString,
            requests__pb2.GetWorkflowDurableRunsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
