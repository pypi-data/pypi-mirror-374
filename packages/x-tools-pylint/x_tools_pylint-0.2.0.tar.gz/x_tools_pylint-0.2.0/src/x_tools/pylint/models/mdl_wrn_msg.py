""" Struktura Wrn-zpráv které PyLint generuje  """
from enum import StrEnum

from typing import Optional
from pydantic import BaseModel, Field, ConfigDict   #, ValidationError

from x_tools.utils.models.tp_file_path import TpFilePath
from .tp_msg_id import TpMsgId



class WrnMsgFields(StrEnum):
    """ Sloupce Wrn-Msgs generovaných PyLintem ... pořádi zde určuje pořadí sloupců v reportu """
    # --- generated by PyLint --  Ex: --
    MODULE     = 'module'       # models.constants   ... python module včetně package (ale bez gef_be) ... součástí PATH_LN
    MSGID      = 'msgid'        # E0401  |  W0621    |  C0115       |
    TYPE       = 'type'         # error  |  warning  |  convention  |
    OBJ        = 'obj'          # jméno funkce nebo třídy kde se wrn vyskytuje / nebo prázdno v případě global
    LINE       = 'line'         # ... součástí PATH_LN
    COLUMN     = 'column'       # ... součástí PATH_LN
    ENDLINE    = 'endLine'      #
    ENDCOLUMN  = 'endColumn'    #
    PATH       = 'path'         # c:/__My/Prj/PyLint/gef_be/models/constants.py
    SYMBOL     = 'symbol'       # import-error  |  unused-import  |  broad-exception-raised  |  line-too-long ...
    MESSAGE    = 'message'      # Unable to import 'pika'  |  Instance of 'TAppName' has no 'endswith' member  ...
    # --- derived attributes ---
    PATH_LN    = 'path_ln'      # = path + lineno + col
    MSG        = 'msg'          # = message.replace('\n', '|')[:200]
    SEVERITY   = 'severity'     # F0312,fatal -> 1  |  E0401,error -> 2  |  W0621,warning -> 3  |  ...


# Výběr Fields v případě ALL_FIELDS
wrn_msg_report_fields = (
    WrnMsgFields.PATH_LN ,    # = path + lineno + col
    WrnMsgFields.OBJ     ,    # jméno funkce nebo třídy kte se wrn vyskytuje nebo prázdno v případě global
    WrnMsgFields.MSGID   ,    # E0401  |  W0621    |  C0115       |
    WrnMsgFields.SYMBOL  ,    # import-error  |  unused-import  |  broad-exception-raised  |  line-too-long ...
    WrnMsgFields.MSG     ,    # = message.replace('\n', '|')[:200]
)


# PyLint Output WrnMsgs:
class TWrnMsg(BaseModel):        # Ex values:
    """ Atributy zpráv generovaných PyLintem """
    path      :  TpFilePath                           # 'C:/__My/__PRJ_Work/AdmTool_Srv_2/gef_be/controlledSide.py'
    module    :  TpFilePath                           # 'controlledSide'
    msgid     :  TpMsgId = Field(alias="message-id")  # 'C0325'
    type      :  str                                  # 'convention',     ... E-error, C-convention, I-info, ....
    message   :  str                                  # Name "controlledSide" doesn't conform to snake_case naming style<
    line      :  int                                  # 224
    column    :  int                                  # 0
    endLine   :  Optional[int]                        # None
    endColumn :  Optional[int]                        # None
    symbol    :  Optional[str]                        # should be the same as MsgDef.symbol    Ex: 'line-too-long',
    obj       :  Optional[str]                        # ''
    # --- Computed fields ---
    severity  :  int = 0                              # F - 1, E - 2, W - 3, R - 4, C - 5, I - 6
    msg       :  Optional[str]                        #  message.replace('\n', '|')[:200]
    # --- Atributy z msg_def ---
    # checker : str = ''             # 'design'
    # descr   : str = ''             # Too many return statements (%s/%s)
    # used    : str = ''             # Used when a function or method has too many return statement, making it hard to follow.
    # --- Pydantic ---
    model_config = ConfigDict(extra='forbid')
