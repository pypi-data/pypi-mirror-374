[project]
name = "aioaudiobookshelf"
# The version is set by GH action on release
authors = [
  {name = "Fabian Munkes", email = "105975993+fmunkes@users.noreply.github.com"},
]
classifiers = [
  "Environment :: Console",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]
dependencies = [
  "aiohttp",
  "mashumaro",
  "python-socketio>=5.12",
]
description = "Async library for Audiobookshelf"
license = {text = "Apache-2.0"}
readme = "README.md"
requires-python = ">=3.12"
version = "0.1.8"

[project.optional-dependencies]
test = [
  "codespell==2.3.0",
  "isort==5.13.2",
  "mypy==1.13.0",
  "pre-commit==4.0.1",
  "pre-commit-hooks==5.0.0",
  "pytest==8.3.4",
  "pytest-aiohttp==1.0.5",
  "pytest-cov==5.0.0",
  "syrupy==4.8.1",
  "tomli==2.2.1",
  "ruff==0.9.2",
  "bumpver",
]

[tool.setuptools]
include-package-data = true
packages = ["aioaudiobookshelf", "aioaudiobookshelf.client", "aioaudiobookshelf.schema"]
platforms = ["any"]
zip-safe = false

[tool.setuptools.package-data]
aioaudiobookshelf = ["py.typed"]

[tool.ruff]
fix = true
show-fixes = true

line-length = 100
target-version = "py312"

[tool.ruff.lint.pydocstyle]
# Use Google-style docstrings.
convention = "pep257"

[tool.ruff.lint.pylint]

max-args = 10
max-branches = 25
max-returns = 15
max-statements = 50

[tool.mypy]
platform = "linux"
python_version = "3.12"

# show error messages from unrelated files
follow_imports = "normal"

# suppress errors about unsatisfied imports
ignore_missing_imports = true

# be strict
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
no_implicit_optional = true
no_implicit_reexport = true
strict_optional = true
warn_incomplete_stub = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.ruff.format]
# Force Linux/MacOS line endings
line-ending = "lf"

[tool.ruff.lint]
ignore = [
  "ANN002", # Just annoying, not really useful
  "ANN003", # Just annoying, not really useful
  "ANN401", # Opinioated warning on disallowing dynamically typed expressions
  "D203", # Conflicts with other rules
  "D213", # Conflicts with other rules
  "D417", # False positives in some occasions
  "EM101", # Just annoying, not really useful
  "EM102", # Just annoying, not really useful
  "FIX002", # Just annoying, not really useful
  "PLR2004", # Just annoying, not really useful
  "PD011", # Just annoying, not really useful
  "S101", # assert is often used to satisfy type checking
  "TC001", # Just annoying, not really useful
  "TC003", # Just annoying, not really useful
  "TD002", # Just annoying, not really useful
  "TD003", # Just annoying, not really useful
  "TD004", # Just annoying, not really useful
  "TRY003", # Just annoying, not really useful
  "TRY400", # Just annoying, not really useful
  "COM812", # Conflicts with the Ruff formatter
  "ERA001", # allow commented out code
]

select = ["ALL"]

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[tool.ruff.lint.isort]
known-first-party = ["music_assistant"]

[tool.ruff.lint.mccabe]
max-complexity = 25

[tool.bumpver]
current_version = "0.1.8"
version_pattern = "MAJOR.MINOR.PATCH"
commit_message = "bump version {old_version} -> {new_version}"
tag_message = "{new_version}"
commit = true
tag = true
push = true

[tool.bumpver.file_patterns]
"pyproject.toml" = [
    'current_version = "{version}"',
    'version = "{version}"',
]
"aioaudiobookshelf/__init__.py" = [
  '__version__ = "{version}"'
]
