{
  "commit_hash": "e96741437ef0a5d18144e790ac894397efda0924",
  "commit_url": "https://git.kernel.org/stable/c/e96741437ef0a5d18144e790ac894397efda0924",
  "commit_details": "commit e96741437ef0a5d18144e790ac894397efda0924\nAuthor:     Luiz Augusto von Dentz <luiz.von.dentz@intel.com>\nAuthorDate: Fri Dec 3 16:15:42 2021 -0800\nCommit:     Luiz Augusto von Dentz <luiz.von.dentz@intel.com>\nCommitDate: Tue Dec 21 13:45:50 2021 -0800\n\n    Bluetooth: mgmt: Make use of mgmt_send_event_skb in MGMT_EV_DEVICE_CONNECTED\n    \n    This makes use of mgmt_alloc_skb to build MGMT_EV_DEVICE_CONNECTED so\n    the data is copied directly to skb that is then sent using\n    mgmt_send_event_skb eliminating the necessity of intermediary buffers.\n    \n    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>\n    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>\n",
  "patch_content": "commit e96741437ef0a5d18144e790ac894397efda0924\nAuthor: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>\nDate:   Fri Dec 3 16:15:42 2021 -0800\n\n    Bluetooth: mgmt: Make use of mgmt_send_event_skb in MGMT_EV_DEVICE_CONNECTED\n    \n    This makes use of mgmt_alloc_skb to build MGMT_EV_DEVICE_CONNECTED so\n    the data is copied directly to skb that is then sent using\n    mgmt_send_event_skb eliminating the necessity of intermediary buffers.\n    \n    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>\n    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>\n\ndiff --git a/net/bluetooth/mgmt.c b/net/bluetooth/mgmt.c\nindex 5a4f418c814d..962bb747d2cd 100644\n--- a/net/bluetooth/mgmt.c\n+++ b/net/bluetooth/mgmt.c\n@@ -9027,11 +9027,19 @@ void mgmt_new_conn_param(struct hci_dev *hdev, bdaddr_t *bdaddr,\n void mgmt_device_connected(struct hci_dev *hdev, struct hci_conn *conn,\n \t\t\t   u8 *name, u8 name_len)\n {\n-\tchar buf[512];\n-\tstruct mgmt_ev_device_connected *ev = (void *) buf;\n+\tstruct sk_buff *skb;\n+\tstruct mgmt_ev_device_connected *ev;\n \tu16 eir_len = 0;\n \tu32 flags = 0;\n \n+\tif (conn->le_adv_data_len > 0)\n+\t\tskb = mgmt_alloc_skb(hdev, MGMT_EV_DEVICE_CONNECTED,\n+\t\t\t\t     conn->le_adv_data_len);\n+\telse\n+\t\tskb = mgmt_alloc_skb(hdev, MGMT_EV_DEVICE_CONNECTED,\n+\t\t\t\t     2 + name_len + 5);\n+\n+\tev = skb_put(skb, sizeof(*ev));\n \tbacpy(&ev->addr.bdaddr, &conn->dst);\n \tev->addr.type = link_to_bdaddr(conn->type, conn->dst_type);\n \n@@ -9045,24 +9053,26 @@ void mgmt_device_connected(struct hci_dev *hdev, struct hci_conn *conn,\n \t * adding any BR/EDR data to the LE adv.\n \t */\n \tif (conn->le_adv_data_len > 0) {\n-\t\tmemcpy(&ev->eir[eir_len],\n-\t\t       conn->le_adv_data, conn->le_adv_data_len);\n+\t\tskb_put_data(skb, conn->le_adv_data, conn->le_adv_data_len);\n \t\teir_len = conn->le_adv_data_len;\n \t} else {\n-\t\tif (name_len > 0)\n+\t\tif (name_len > 0) {\n \t\t\teir_len = eir_append_data(ev->eir, 0, EIR_NAME_COMPLETE,\n \t\t\t\t\t\t  name, name_len);\n+\t\t\tskb_put(skb, eir_len);\n+\t\t}\n \n-\t\tif (memcmp(conn->dev_class, \"\\0\\0\\0\", 3) != 0)\n+\t\tif (memcmp(conn->dev_class, \"\\0\\0\\0\", 3) != 0) {\n \t\t\teir_len = eir_append_data(ev->eir, eir_len,\n \t\t\t\t\t\t  EIR_CLASS_OF_DEV,\n \t\t\t\t\t\t  conn->dev_class, 3);\n+\t\t\tskb_put(skb, 5);\n+\t\t}\n \t}\n \n \tev->eir_len = cpu_to_le16(eir_len);\n \n-\tmgmt_event(MGMT_EV_DEVICE_CONNECTED, hdev, buf,\n-\t\t    sizeof(*ev) + eir_len, NULL);\n+\tmgmt_event_skb(skb, NULL);\n }\n \n static void disconnect_rsp(struct mgmt_pending_cmd *cmd, void *data)\n",
  "changed_files": [
    "net/bluetooth/mgmt.c"
  ],
  "diff_stats": " net/bluetooth/mgmt.c | 26 ++++++++++++++++++--------\n 1 file changed, 18 insertions(+), 8 deletions(-)\n"
}