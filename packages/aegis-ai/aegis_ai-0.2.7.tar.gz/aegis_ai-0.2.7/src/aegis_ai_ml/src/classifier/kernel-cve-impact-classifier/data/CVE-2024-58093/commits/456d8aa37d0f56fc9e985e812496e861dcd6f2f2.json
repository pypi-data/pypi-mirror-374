{
  "commit_hash": "456d8aa37d0f56fc9e985e812496e861dcd6f2f2",
  "commit_url": "https://git.kernel.org/stable/c/456d8aa37d0f56fc9e985e812496e861dcd6f2f2",
  "commit_details": "commit 456d8aa37d0f56fc9e985e812496e861dcd6f2f2\nAuthor:     Ding Hui <dinghui@sangfor.com.cn>\nAuthorDate: Sun May 7 11:40:57 2023 +0800\nCommit:     Bjorn Helgaas <bhelgaas@google.com>\nCommitDate: Thu May 18 16:12:13 2023 -0500\n\n    PCI/ASPM: Disable ASPM on MFD function removal to avoid use-after-free\n    \n    Struct pcie_link_state->downstream is a pointer to the pci_dev of function\n    0.  Previously we retained that pointer when removing function 0, and\n    subsequent ASPM policy changes dereferenced it, resulting in a\n    use-after-free warning from KASAN, e.g.:\n    \n      # echo 1 > /sys/bus/pci/devices/0000:03:00.0/remove\n      # echo powersave > /sys/module/pcie_aspm/parameters/policy\n    \n      BUG: KASAN: slab-use-after-free in pcie_config_aspm_link+0x42d/0x500\n      Call Trace:\n       kasan_report+0xae/0xe0\n       pcie_config_aspm_link+0x42d/0x500\n       pcie_aspm_set_policy+0x8e/0x1a0\n       param_attr_store+0x162/0x2c0\n       module_attr_store+0x3e/0x80\n    \n    PCIe spec r6.0, sec 7.5.3.7, recommends that software program the same ASPM\n    Control value in all functions of multi-function devices.\n    \n    Disable ASPM and free the pcie_link_state when any child function is\n    removed so we can discard the dangling pcie_link_state->downstream pointer\n    and maintain the same ASPM Control configuration for all functions.\n    \n    [bhelgaas: commit log and comment]\n    Debugged-by: Zongquan Qin <qinzongquan@sangfor.com.cn>\n    Suggested-by: Bjorn Helgaas <bhelgaas@google.com>\n    Fixes: b5a0a9b59c81 (\"PCI/ASPM: Read and set up L1 substate capabilities\")\n    Link: https://lore.kernel.org/r/20230507034057.20970-1-dinghui@sangfor.com.cn\n    Signed-off-by: Ding Hui <dinghui@sangfor.com.cn>\n    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>\n",
  "patch_content": "commit 456d8aa37d0f56fc9e985e812496e861dcd6f2f2\nAuthor: Ding Hui <dinghui@sangfor.com.cn>\nDate:   Sun May 7 11:40:57 2023 +0800\n\n    PCI/ASPM: Disable ASPM on MFD function removal to avoid use-after-free\n    \n    Struct pcie_link_state->downstream is a pointer to the pci_dev of function\n    0.  Previously we retained that pointer when removing function 0, and\n    subsequent ASPM policy changes dereferenced it, resulting in a\n    use-after-free warning from KASAN, e.g.:\n    \n      # echo 1 > /sys/bus/pci/devices/0000:03:00.0/remove\n      # echo powersave > /sys/module/pcie_aspm/parameters/policy\n    \n      BUG: KASAN: slab-use-after-free in pcie_config_aspm_link+0x42d/0x500\n      Call Trace:\n       kasan_report+0xae/0xe0\n       pcie_config_aspm_link+0x42d/0x500\n       pcie_aspm_set_policy+0x8e/0x1a0\n       param_attr_store+0x162/0x2c0\n       module_attr_store+0x3e/0x80\n    \n    PCIe spec r6.0, sec 7.5.3.7, recommends that software program the same ASPM\n    Control value in all functions of multi-function devices.\n    \n    Disable ASPM and free the pcie_link_state when any child function is\n    removed so we can discard the dangling pcie_link_state->downstream pointer\n    and maintain the same ASPM Control configuration for all functions.\n    \n    [bhelgaas: commit log and comment]\n    Debugged-by: Zongquan Qin <qinzongquan@sangfor.com.cn>\n    Suggested-by: Bjorn Helgaas <bhelgaas@google.com>\n    Fixes: b5a0a9b59c81 (\"PCI/ASPM: Read and set up L1 substate capabilities\")\n    Link: https://lore.kernel.org/r/20230507034057.20970-1-dinghui@sangfor.com.cn\n    Signed-off-by: Ding Hui <dinghui@sangfor.com.cn>\n    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>\n\ndiff --git a/drivers/pci/pcie/aspm.c b/drivers/pci/pcie/aspm.c\nindex 66d7514ca111..db32335039d6 100644\n--- a/drivers/pci/pcie/aspm.c\n+++ b/drivers/pci/pcie/aspm.c\n@@ -1010,21 +1010,24 @@ void pcie_aspm_exit_link_state(struct pci_dev *pdev)\n \n \tdown_read(&pci_bus_sem);\n \tmutex_lock(&aspm_lock);\n-\t/*\n-\t * All PCIe functions are in one slot, remove one function will remove\n-\t * the whole slot, so just wait until we are the last function left.\n-\t */\n-\tif (!list_empty(&parent->subordinate->devices))\n-\t\tgoto out;\n \n \tlink = parent->link_state;\n \troot = link->root;\n \tparent_link = link->parent;\n \n-\t/* All functions are removed, so just disable ASPM for the link */\n+\t/*\n+\t * link->downstream is a pointer to the pci_dev of function 0.  If\n+\t * we remove that function, the pci_dev is about to be deallocated,\n+\t * so we can't use link->downstream again.  Free the link state to\n+\t * avoid this.\n+\t *\n+\t * If we're removing a non-0 function, it's possible we could\n+\t * retain the link state, but PCIe r6.0, sec 7.5.3.7, recommends\n+\t * programming the same ASPM Control value for all functions of\n+\t * multi-function devices, so disable ASPM for all of them.\n+\t */\n \tpcie_config_aspm_link(link, 0);\n \tlist_del(&link->sibling);\n-\t/* Clock PM is for endpoint device */\n \tfree_link_state(link);\n \n \t/* Recheck latencies and configure upstream links */\n@@ -1032,7 +1035,7 @@ void pcie_aspm_exit_link_state(struct pci_dev *pdev)\n \t\tpcie_update_aspm_capable(root);\n \t\tpcie_config_aspm_path(parent_link);\n \t}\n-out:\n+\n \tmutex_unlock(&aspm_lock);\n \tup_read(&pci_bus_sem);\n }\n",
  "changed_files": [
    "drivers/pci/pcie/aspm.c"
  ],
  "diff_stats": " drivers/pci/pcie/aspm.c | 21 ++++++++++++---------\n 1 file changed, 12 insertions(+), 9 deletions(-)\n"
}