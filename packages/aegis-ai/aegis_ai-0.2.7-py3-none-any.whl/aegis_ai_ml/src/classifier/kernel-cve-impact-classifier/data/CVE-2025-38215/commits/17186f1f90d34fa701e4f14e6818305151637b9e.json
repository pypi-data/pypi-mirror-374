{
  "commit_hash": "17186f1f90d34fa701e4f14e6818305151637b9e",
  "commit_url": "https://git.kernel.org/stable/c/17186f1f90d34fa701e4f14e6818305151637b9e",
  "commit_details": "commit 17186f1f90d34fa701e4f14e6818305151637b9e\nAuthor:     Murad Masimov <m.masimov@mt-integration.ru>\nAuthorDate: Mon Apr 28 18:34:06 2025 +0300\nCommit:     Helge Deller <deller@gmx.de>\nCommitDate: Sat May 31 10:24:02 2025 +0200\n\n    fbdev: Fix do_register_framebuffer to prevent null-ptr-deref in fb_videomode_to_var\n    \n    If fb_add_videomode() in do_register_framebuffer() fails to allocate\n    memory for fb_videomode, it will later lead to a null-ptr dereference in\n    fb_videomode_to_var(), as the fb_info is registered while not having the\n    mode in modelist that is expected to be there, i.e. the one that is\n    described in fb_info->var.\n    \n    ================================================================\n    general protection fault, probably for non-canonical address 0xdffffc0000000001: 0000 [#1] PREEMPT SMP KASAN NOPTI\n    KASAN: null-ptr-deref in range [0x0000000000000008-0x000000000000000f]\n    CPU: 1 PID: 30371 Comm: syz-executor.1 Not tainted 5.10.226-syzkaller #0\n    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.12.0-1 04/01/2014\n    RIP: 0010:fb_videomode_to_var+0x24/0x610 drivers/video/fbdev/core/modedb.c:901\n    Call Trace:\n     display_to_var+0x3a/0x7c0 drivers/video/fbdev/core/fbcon.c:929\n     fbcon_resize+0x3e2/0x8f0 drivers/video/fbdev/core/fbcon.c:2071\n     resize_screen drivers/tty/vt/vt.c:1176 [inline]\n     vc_do_resize+0x53a/0x1170 drivers/tty/vt/vt.c:1263\n     fbcon_modechanged+0x3ac/0x6e0 drivers/video/fbdev/core/fbcon.c:2720\n     fbcon_update_vcs+0x43/0x60 drivers/video/fbdev/core/fbcon.c:2776\n     do_fb_ioctl+0x6d2/0x740 drivers/video/fbdev/core/fbmem.c:1128\n     fb_ioctl+0xe7/0x150 drivers/video/fbdev/core/fbmem.c:1203\n     vfs_ioctl fs/ioctl.c:48 [inline]\n     __do_sys_ioctl fs/ioctl.c:753 [inline]\n     __se_sys_ioctl fs/ioctl.c:739 [inline]\n     __x64_sys_ioctl+0x19a/0x210 fs/ioctl.c:739\n     do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46\n     entry_SYSCALL_64_after_hwframe+0x67/0xd1\n    ================================================================\n    \n    Even though fbcon_init() checks beforehand if fb_match_mode() in\n    var_to_display() fails, it can not prevent the panic because fbcon_init()\n    does not return error code. Considering this and the comment in the code\n    about fb_match_mode() returning NULL - \"This should not happen\" - it is\n    better to prevent registering the fb_info if its mode was not set\n    successfully. Also move fb_add_videomode() closer to the beginning of\n    do_register_framebuffer() to avoid having to do the cleanup on fail.\n    \n    Found by Linux Verification Center (linuxtesting.org) with Syzkaller.\n    \n    Fixes: 1da177e4c3f4 (\"Linux-2.6.12-rc2\")\n    Cc: stable@vger.kernel.org\n    Signed-off-by: Murad Masimov <m.masimov@mt-integration.ru>\n    Signed-off-by: Helge Deller <deller@gmx.de>\n",
  "patch_content": "commit 17186f1f90d34fa701e4f14e6818305151637b9e\nAuthor: Murad Masimov <m.masimov@mt-integration.ru>\nDate:   Mon Apr 28 18:34:06 2025 +0300\n\n    fbdev: Fix do_register_framebuffer to prevent null-ptr-deref in fb_videomode_to_var\n    \n    If fb_add_videomode() in do_register_framebuffer() fails to allocate\n    memory for fb_videomode, it will later lead to a null-ptr dereference in\n    fb_videomode_to_var(), as the fb_info is registered while not having the\n    mode in modelist that is expected to be there, i.e. the one that is\n    described in fb_info->var.\n    \n    ================================================================\n    general protection fault, probably for non-canonical address 0xdffffc0000000001: 0000 [#1] PREEMPT SMP KASAN NOPTI\n    KASAN: null-ptr-deref in range [0x0000000000000008-0x000000000000000f]\n    CPU: 1 PID: 30371 Comm: syz-executor.1 Not tainted 5.10.226-syzkaller #0\n    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.12.0-1 04/01/2014\n    RIP: 0010:fb_videomode_to_var+0x24/0x610 drivers/video/fbdev/core/modedb.c:901\n    Call Trace:\n     display_to_var+0x3a/0x7c0 drivers/video/fbdev/core/fbcon.c:929\n     fbcon_resize+0x3e2/0x8f0 drivers/video/fbdev/core/fbcon.c:2071\n     resize_screen drivers/tty/vt/vt.c:1176 [inline]\n     vc_do_resize+0x53a/0x1170 drivers/tty/vt/vt.c:1263\n     fbcon_modechanged+0x3ac/0x6e0 drivers/video/fbdev/core/fbcon.c:2720\n     fbcon_update_vcs+0x43/0x60 drivers/video/fbdev/core/fbcon.c:2776\n     do_fb_ioctl+0x6d2/0x740 drivers/video/fbdev/core/fbmem.c:1128\n     fb_ioctl+0xe7/0x150 drivers/video/fbdev/core/fbmem.c:1203\n     vfs_ioctl fs/ioctl.c:48 [inline]\n     __do_sys_ioctl fs/ioctl.c:753 [inline]\n     __se_sys_ioctl fs/ioctl.c:739 [inline]\n     __x64_sys_ioctl+0x19a/0x210 fs/ioctl.c:739\n     do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46\n     entry_SYSCALL_64_after_hwframe+0x67/0xd1\n    ================================================================\n    \n    Even though fbcon_init() checks beforehand if fb_match_mode() in\n    var_to_display() fails, it can not prevent the panic because fbcon_init()\n    does not return error code. Considering this and the comment in the code\n    about fb_match_mode() returning NULL - \"This should not happen\" - it is\n    better to prevent registering the fb_info if its mode was not set\n    successfully. Also move fb_add_videomode() closer to the beginning of\n    do_register_framebuffer() to avoid having to do the cleanup on fail.\n    \n    Found by Linux Verification Center (linuxtesting.org) with Syzkaller.\n    \n    Fixes: 1da177e4c3f4 (\"Linux-2.6.12-rc2\")\n    Cc: stable@vger.kernel.org\n    Signed-off-by: Murad Masimov <m.masimov@mt-integration.ru>\n    Signed-off-by: Helge Deller <deller@gmx.de>\n\ndiff --git a/drivers/video/fbdev/core/fbmem.c b/drivers/video/fbdev/core/fbmem.c\nindex 3c568cff2913..e1557d80768f 100644\n--- a/drivers/video/fbdev/core/fbmem.c\n+++ b/drivers/video/fbdev/core/fbmem.c\n@@ -388,7 +388,7 @@ static int fb_check_foreignness(struct fb_info *fi)\n \n static int do_register_framebuffer(struct fb_info *fb_info)\n {\n-\tint i;\n+\tint i, err = 0;\n \tstruct fb_videomode mode;\n \n \tif (fb_check_foreignness(fb_info))\n@@ -397,10 +397,18 @@ static int do_register_framebuffer(struct fb_info *fb_info)\n \tif (num_registered_fb == FB_MAX)\n \t\treturn -ENXIO;\n \n-\tnum_registered_fb++;\n \tfor (i = 0 ; i < FB_MAX; i++)\n \t\tif (!registered_fb[i])\n \t\t\tbreak;\n+\n+\tif (!fb_info->modelist.prev || !fb_info->modelist.next)\n+\t\tINIT_LIST_HEAD(&fb_info->modelist);\n+\n+\tfb_var_to_videomode(&mode, &fb_info->var);\n+\terr = fb_add_videomode(&mode, &fb_info->modelist);\n+\tif (err < 0)\n+\t\treturn err;\n+\n \tfb_info->node = i;\n \trefcount_set(&fb_info->count, 1);\n \tmutex_init(&fb_info->lock);\n@@ -426,16 +434,12 @@ static int do_register_framebuffer(struct fb_info *fb_info)\n \tif (bitmap_empty(fb_info->pixmap.blit_y, FB_MAX_BLIT_HEIGHT))\n \t\tbitmap_fill(fb_info->pixmap.blit_y, FB_MAX_BLIT_HEIGHT);\n \n-\tif (!fb_info->modelist.prev || !fb_info->modelist.next)\n-\t\tINIT_LIST_HEAD(&fb_info->modelist);\n-\n \tif (fb_info->skip_vt_switch)\n \t\tpm_vt_switch_required(fb_info->device, false);\n \telse\n \t\tpm_vt_switch_required(fb_info->device, true);\n \n-\tfb_var_to_videomode(&mode, &fb_info->var);\n-\tfb_add_videomode(&mode, &fb_info->modelist);\n+\tnum_registered_fb++;\n \tregistered_fb[i] = fb_info;\n \n #ifdef CONFIG_GUMSTIX_AM200EPD\n",
  "changed_files": [
    "drivers/video/fbdev/core/fbmem.c"
  ],
  "diff_stats": " drivers/video/fbdev/core/fbmem.c | 18 +++++++++++-------\n 1 file changed, 11 insertions(+), 7 deletions(-)\n"
}