[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "quantik-core"
version = "0.1.1"
description = "High-performance core utilities for Quantik game state manipulation"
readme = "README.md"
license = "MIT"
authors = [
    {name = "Mauro Berlanda", email = "mauro.berlanda@gmail.com"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Games/Entertainment :: Board Games",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = [
    "quantik", "board-games", "game-ai", "monte-carlo", "bitboards", 
    "game-engine", "mcts", "game-theory", "combinatorial-games"
]
requires-python = ">=3.9"
dependencies = []

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "hypothesis>=6.0",
    "black>=23.0",
    "flake8>=6.0",
    "mypy>=1.0",
    "pre-commit>=3.0",
]
cbor = [
    "cbor2>=5.4.0",
]
docs = [
    "sphinx>=5.0",
    "sphinx-rtd-theme>=1.0",
]
benchmark = [
    "pytest-benchmark>=4.0",
]
all = [
    "quantik-core[dev,cbor,docs,benchmark]",
]

[project.urls]
Homepage = "https://github.com/mauroberlanda/quantik-core-py"
Repository = "https://github.com/mauroberlanda/quantik-core-py"
Documentation = "https://quantik-core-py.readthedocs.io"
"Bug Tracker" = "https://github.com/mauroberlanda/quantik-core-py/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
quantik_core = ["py.typed"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=quantik_core",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=90",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "benchmark: marks tests as benchmarks",
]

[tool.coverage.run]
source = ["src/quantik_core"]
omit = ["*/tests/*", "*/benchmarks/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
