package handler

import (
	"net/http"
	"time"

	"github.com/gin-gonic/gin"
	"{{project_name}}/pkg/config"
)

// HealthHandler 健康检查处理器
type HealthHandler struct {
	cfg *config.Config
}

// NewHealthHandler 创建健康检查处理器
func NewHealthHandler(cfg *config.Config) *HealthHandler {
	return &HealthHandler{
		cfg: cfg,
	}
}

// HealthCheck 健康检查接口
func (h *HealthHandler) HealthCheck(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{
		"status":    "healthy",
		"message":   h.cfg.AppName + " is running",
		"timestamp": time.Now().Unix(),
	})
}

// ReadinessCheck 就绪检查接口
func (h *HealthHandler) ReadinessCheck(c *gin.Context) {
	// TODO: 可以在这里添加数据库连接等依赖检查
	c.JSON(http.StatusOK, gin.H{
		"status":    "ready",
		"message":   h.cfg.AppName + " is ready to serve requests",
		"timestamp": time.Now().Unix(),
	})
}