version: '3.8'

services:
  {{project_name}}:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: {{project_name}}
    ports:
      - "${APP_PORT:-8080}:${APP_PORT:-8080}"
    env_file:
      - .env
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${APP_PORT:-8080}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - redis
      - postgres
    networks:
      - {{project_name}}-network

  redis:
    image: redis:7-alpine
    container_name: {{project_name}}-redis
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - {{project_name}}-network

  postgres:
    image: postgres:15-alpine
    container_name: {{project_name}}-postgres
    ports:
      - "${DB_PORT:-5432}:5432"
    environment:
      - POSTGRES_DB=${DB_NAME:-{{project_name}}}
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - {{project_name}}-network

volumes:
  redis_data:
  postgres_data:

networks:
  {{project_name}}-network:
    driver: bridge