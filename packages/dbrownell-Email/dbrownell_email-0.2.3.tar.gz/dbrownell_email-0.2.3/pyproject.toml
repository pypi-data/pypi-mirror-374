[project]
name = "dbrownell-Email"
description = "Email tools and utilities."
readme = "README.md"
authors = [
    { name = "David Brownell", email = "github@DavidBrownell.com" }
]
requires-python = ">= 3.10"
dependencies = [
    "ansi2html>=1.9.2",
    "dbrownell-common>=0.14.6",
    "pywin32>=310; sys_platform == 'win32'",
    "typer>=0.15.3",
]

dynamic = ["version"]
classifiers = [
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.10",
]

[project.license]
text = "MIT"

[project.urls]
Homepage = "https://github.com/davidbrownell/dbrownell_Email"
Documentation = "https://github.com/davidbrownell/dbrownell_Email"
Repository = "https://github.com/davidbrownell/dbrownell_Email"

[project.scripts]
email_tee = "dbrownell_Email:EmailTee.app"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "autogitsemver>=0.8.4",
    "dbrownell-commitemojis>=0.1.1",
    "pre-commit>=4.2.0",
    "py-minisign>=0.12.0",
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
    "ruff>=0.12.3",
]

[tool.hatch.version]
path = "src/dbrownell_Email/__init__.py"

[tool.pytest.ini_options]
addopts = "--verbose -vv --capture=no --cov=dbrownell_Email --cov-report term --cov-report xml:coverage.xml --cov-fail-under=35.0"

[tool.ruff]
line-length = 110

[tool.ruff.lint]
exclude = ["tests/**"]

select = ["ALL"]

ignore = [
    "ANN002", # Missing type annotation for `*args`
    "ANN003", # Missing type annotation for `**kwargs`
    "BLE001", # Do not catch blind exception: `Exception`
    "COM812", # Trailing comma missing
    "D105", # Missing docstring in magic method
    "D107", # Missing docstring in `__init__` method
    "D202", # No blank lines allowed after function docstring
    "E501", # Line too long
    "FIX002", # Line contains TODO, consider resolving the issue
    "I001", # Import block is un-sorted or un-formatted
    "N802", # Function name `xxx` should be lowercase
    "N999", # Invalid module name
    "RSE102", # Unnecessary parentheses on raise exception
    "S101", # Use of assert detected
    "TC006", # Add quotes to type expression in `typing.cast()`
    "TD002", # Missing author in TODO
    "TD003", # Missing issue link for this TODO
    "TRY002", # Create your own exception
    "TRY300", # Consider moving this statement to an `else` block
    "UP032", # Use f-string instead of `format` call
]

[tool.ruff.lint.mccabe]
max-complexity = 15

[tool.ruff.lint.pylint]
max-args = 10
max-branches = 20
max-returns = 20
