name: Extended Tests & Analysis

on:
  # Manual trigger
  workflow_dispatch:
  # Run weekly on Sundays at 2 AM UTC
  schedule:
    - cron: '0 2 * * 0'
  # Run on main branch pushes (but not PRs to avoid duplication)
  push:
    branches: [ main ]

permissions:
  contents: read
  security-events: write

jobs:
  performance-tests:
    name: Performance Tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install -e .[test]
        pip install pytest-benchmark psutil
    
    - name: Run performance tests
      run: |
        pytest tests/ -v -m performance --benchmark-json=benchmark-results.json
    
    - name: Upload benchmark results
      uses: actions/upload-artifact@v4
      with:
        name: benchmark-results
        path: benchmark-results.json

  docs:
    name: Documentation Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[docs]
    
    - name: Build documentation
      run: |
        # Only build docs if docs directory exists with conf.py
        if [ -f "docs/conf.py" ]; then
          cd docs
          sphinx-build -b html . _build/html
        else
          echo "No docs/conf.py found, creating placeholder documentation"
          mkdir -p docs/_build/html
          echo "<h1>py-autotask Documentation</h1><p>Documentation will be added in future releases.</p>" > docs/_build/html/index.html
        fi
    
    - name: Upload documentation
      uses: actions/upload-artifact@v4
      with:
        name: documentation
        path: docs/_build/html

  security-scan:
    name: Security Scanning
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  full-python-matrix:
    name: Full Python Version Matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10']  # Test the versions we skipped in main CI
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install -e .[test]
    
    - name: Run unit tests
      run: |
        pytest tests/ -v --cov=py_autotask --cov-report=term-missing \
               -m "not integration and not performance" 