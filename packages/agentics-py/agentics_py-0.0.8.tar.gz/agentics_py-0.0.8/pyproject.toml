[project]
name = "agentics-py"
# name = "agentics"
# version = "0.1.0"
dynamic = []
description = "Agentics is a Python framework that provides structured, scalable, and semantically grounded agentic computation."
authors = [
    {name = "Alfio Gliozzo",email = "gliozzo@us.ibm.com"},
    {name = "Junkyu Lee",email = "Junkyu.Lee@ibm.com"},
    {name = "Nahuel Defosse",email = "nahuel.defosse@ibm.com"},
    {name = "Mustafa Eyceoz",email = "Mustafa.Eyceoz@partner.ibm.com"},
    {name = "Naweed Aghmad Khan",email = "naweed.khan@ibm.com"},
     
]

license = "Apache-2.0"
readme = "README.md"
requires-python = ">=3.11,<3.13"
dependencies = [
    "ddgs",
    "pydantic",
    "crewai",
    "crewai-tools[mcp]",
    "mkdocs (>=1.6.1,<2.0.0)",
    "mkdocstrings (>=0.29.1,<0.30.0)",
    "mkdocs-material (>=9.6.14,<10.0.0)",
    "langchain-huggingface (>=0.2.0,<0.3.0)",
    "openapi-python-client (>=0.24.3,<0.25.0)",
    "streamlit (>=1.45.1,<2.0.0)",
    "pyyaml (>=6.0.2,<7.0.0)",
    # "aiosqlite (>=0.21.0,<0.22.0)",
    "openai (>=1.88.0,<2.0.0)",
    # "datamodel-code-generator (>=0.31.1,<0.32.0)",
    "json-schema-to-pydantic (>=0.3.0,<0.4.0)",
    "loguru (>=0.7.3,<0.8.0)",
    "datasets (>=4.0.0,<5.0.0)",
    "mcp (>=1.13.1,<2.0.0)",
]
version = "0.0.8"


[tool.poetry]
packages = [
  { include = "agentics", from = "src" },
  # { include = "memory_backend_client", from = "src/lib/memory/memory-backend-client"},
]

[tool.poetry.group.dev.dependencies]
pytest = "^8.4.0"
black = "^25.1.0"
isort = "^6.0.1"
pre-commit = "^4.2.0"
pdbpp = "^0.11.6"
pytest-asyncio = "^1.0.0"
pytest-html = "^4.1.1"

# [tool.poetry.group.docling.dependencies]
# langchain-docling = ">=0.2.0,<0.3.0"

[tool.isort]
profile = "black"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.requires-plugins]
poetry-dynamic-versioning = { version = ">=1.0.0,<2.0.0", extras = ["plugin"] }

[tool.poetry-dynamic-versioning]
enable = false


[tool.pytest.ini_options]
testpaths = ["tests"]
# Force HTML report generation for debugging of test failures on long tests
# i.e.: db2 docker instances
addopts = "--html=report.html --self-contained-html"


[tool.codespell]
ignore-words-list = "ans"
