name: Website Deploy
on:
  push:
    branches:
      - main
permissions:
  contents: write
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Configure Git Credentials
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV
      - uses: actions/cache@v4
        with:
          key: mkdocs-material-${{ env.cache_id }}
          path: .cache
          restore-keys: |
            mkdocs-material-

      - name: Check if CHANGELOG.md has changed
        id: changelog_check
        run: |
          git fetch origin main
          git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep "CHANGELOG.md" && echo "changed=true" >> $GITHUB_OUTPUT || echo "changed=false" >> $GITHUB_OUTPUT

      - name: Get latest CHANGELOG diff
        if: steps.changelog_check.outputs.changed == 'true'
        id: changelog
        run: |
          # 获取本次提交中CHANGELOG.md的diff
          git diff ${{ github.event.before }} ${{ github.sha }} -- CHANGELOG.md > changelog.diff
          # 提取新增内容（以+开头且非+++的行）
          grep '^+[^+]' changelog.diff | sed 's/^+//' > changelog_added.txt
          # 将所有的回车替换成换行符
          added=$(awk '{ printf "%s\\n", $0 }' changelog_added.txt)
          echo "added=$added" >> $GITHUB_OUTPUT

      - name: Run DeepSeek inference
        if: steps.changelog_check.outputs.changed == 'true'
        id: inference
        run: |
          response=$(curl -s https://api.deepseek.com/v1/chat/completions \
            -H "Authorization: Bearer ${{ secrets.DEEPSEEK_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{
              "model": "deepseek-chat",
              "messages": [
                {"role": "system", "content": "You are a helpful assistant"},
                {"role": "user", "content": "一句中文总结以下更新内容，适合放在公告栏（不允许出现“`”等特殊符号）：${{ steps.changelog.outputs.added }}"}
              ]
            }' | jq -r '.choices[0].message.content')
          echo "response<<EOF" >> $GITHUB_OUTPUT
          echo "$response" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Update main.html announcement bar
        if: steps.changelog_check.outputs.changed == 'true'
        run: |
          summary="${{ steps.inference.outputs.response }}"
          # 使用 printf 保证换行缩进和变量替换都准确
          mkdir -p overrides
          printf '{%% extends "base.html" %%}\n\n{%% block announce %%}\n  <strong>📢 %s <a href="/plotfig/changelog">点击查看详情</a></strong>\n{%% endblock %%}\n' "$summary" > overrides/main.html

      - name: Copy CHANGELOG.md to docs/
        run: cp CHANGELOG.md docs/changelog.md

      - name: Website Deploy
        run: |
          pip install uv
          uv sync --only-dev
          uv run mkdocs gh-deploy --force
