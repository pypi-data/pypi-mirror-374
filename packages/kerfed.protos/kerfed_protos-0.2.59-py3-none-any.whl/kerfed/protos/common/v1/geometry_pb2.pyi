"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import kerfed.protos.common.v1.fileblob_pb2
import kerfed.protos.common.v1.ndarray_pb2
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class Mesh(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    BLOB_FIELD_NUMBER: builtins.int
    @property
    def blob(self) -> kerfed.protos.common.v1.fileblob_pb2.FileBlob:
        """A mesh in a neutral format."""
    def __init__(
        self,
        *,
        blob: kerfed.protos.common.v1.fileblob_pb2.FileBlob | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["blob", b"blob"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["blob", b"blob"]) -> None: ...

global___Mesh = Mesh

@typing_extensions.final
class Box(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    X_FIELD_NUMBER: builtins.int
    Y_FIELD_NUMBER: builtins.int
    Z_FIELD_NUMBER: builtins.int
    x: builtins.float
    """The length of each side of the Box primitive."""
    y: builtins.float
    z: builtins.float
    def __init__(
        self,
        *,
        x: builtins.float = ...,
        y: builtins.float = ...,
        z: builtins.float = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["x", b"x", "y", b"y", "z", b"z"]) -> None: ...

global___Box = Box

@typing_extensions.final
class Cylinder(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RADIUS_FIELD_NUMBER: builtins.int
    HEIGHT_FIELD_NUMBER: builtins.int
    radius: builtins.float
    """The radius of the cylinder."""
    height: builtins.float
    """The *total* height of the cylinder."""
    def __init__(
        self,
        *,
        radius: builtins.float = ...,
        height: builtins.float = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["height", b"height", "radius", b"radius"]) -> None: ...

global___Cylinder = Cylinder

@typing_extensions.final
class AnnularCylinder(google.protobuf.message.Message):
    """A cylinder with a hole."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HEIGHT_FIELD_NUMBER: builtins.int
    RADIUS_OUTER_FIELD_NUMBER: builtins.int
    RADIUS_INNER_FIELD_NUMBER: builtins.int
    height: builtins.float
    """how tall this the cylinder?"""
    radius_outer: builtins.float
    """what is the radius of the outer surface?"""
    radius_inner: builtins.float
    """what is the radius of the inner bore?"""
    def __init__(
        self,
        *,
        height: builtins.float = ...,
        radius_outer: builtins.float = ...,
        radius_inner: builtins.float = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["height", b"height", "radius_inner", b"radius_inner", "radius_outer", b"radius_outer"]) -> None: ...

global___AnnularCylinder = AnnularCylinder

@typing_extensions.final
class Geometry(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    BOX_FIELD_NUMBER: builtins.int
    CYLINDER_FIELD_NUMBER: builtins.int
    ANNULAR_FIELD_NUMBER: builtins.int
    MESH_FIELD_NUMBER: builtins.int
    TRANSFORM_FIELD_NUMBER: builtins.int
    @property
    def box(self) -> global___Box: ...
    @property
    def cylinder(self) -> global___Cylinder: ...
    @property
    def annular(self) -> global___AnnularCylinder: ...
    @property
    def mesh(self) -> global___Mesh: ...
    @property
    def transform(self) -> kerfed.protos.common.v1.ndarray_pb2.RigidTransform:
        """i.e. for cylinders it moves from its center of
        mass at the origin (i.e. `z`` ranges from `-height/2` to `height/2``)
        to the desired location in 3D space.
        """
    def __init__(
        self,
        *,
        box: global___Box | None = ...,
        cylinder: global___Cylinder | None = ...,
        annular: global___AnnularCylinder | None = ...,
        mesh: global___Mesh | None = ...,
        transform: kerfed.protos.common.v1.ndarray_pb2.RigidTransform | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["annular", b"annular", "box", b"box", "cylinder", b"cylinder", "geom", b"geom", "mesh", b"mesh", "transform", b"transform"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["annular", b"annular", "box", b"box", "cylinder", b"cylinder", "geom", b"geom", "mesh", b"mesh", "transform", b"transform"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["geom", b"geom"]) -> typing_extensions.Literal["box", "cylinder", "annular", "mesh"] | None: ...

global___Geometry = Geometry
