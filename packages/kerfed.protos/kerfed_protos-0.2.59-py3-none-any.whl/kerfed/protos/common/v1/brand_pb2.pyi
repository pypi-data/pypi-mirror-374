"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import kerfed.protos.common.v1.address_pb2
import kerfed.protos.common.v1.fileblob_pb2
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class Brand(google.protobuf.message.Message):
    """Description of a brand that will be used in generated
    user-facing materials such as drawings and documents.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    BRAND_ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    LOGO_FIELD_NUMBER: builtins.int
    ADDRESS_FIELD_NUMBER: builtins.int
    DISPLAY_UNITS_FIELD_NUMBER: builtins.int
    brand_id: builtins.str
    """The unique uuid key for the brand."""
    name: builtins.str
    """The display name for the brand, i.e.
    "JK Precision Plate"
    """
    description: builtins.str
    """A markdown blurb describing the shop:
    "#JK \\n We specialize in plate and sheet parts."
    """
    @property
    def logo(self) -> kerfed.protos.common.v1.fileblob_pb2.FileBlob:
        """The logo image for drawings, artifacts, etc."""
    @property
    def address(self) -> kerfed.protos.common.v1.address_pb2.PostalAddress:
        """Where is the shop located and contact information
        including email and phone number.
        """
    display_units: builtins.str
    """What unit system should be displayed?
    Valid values include {'in', 'meter'}, etc.
    A full list of valid unit systems are available with:
    `import trimesh; trimesh.units.keys()`
    """
    def __init__(
        self,
        *,
        brand_id: builtins.str = ...,
        name: builtins.str = ...,
        description: builtins.str = ...,
        logo: kerfed.protos.common.v1.fileblob_pb2.FileBlob | None = ...,
        address: kerfed.protos.common.v1.address_pb2.PostalAddress | None = ...,
        display_units: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["address", b"address", "logo", b"logo"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["address", b"address", "brand_id", b"brand_id", "description", b"description", "display_units", b"display_units", "logo", b"logo", "name", b"name"]) -> None: ...

global___Brand = Brand
