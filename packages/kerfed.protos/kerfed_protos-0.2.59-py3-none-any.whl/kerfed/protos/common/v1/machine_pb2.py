# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: kerfed/protos/common/v1/machine.proto
# Protobuf Python Version: 4.25.3
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from kerfed.protos.common.v1 import config_pb2 as kerfed_dot_protos_dot_common_dot_v1_dot_config__pb2
from kerfed.protos.common.v1 import mill_pb2 as kerfed_dot_protos_dot_common_dot_v1_dot_mill__pb2
from kerfed.protos.common.v1 import model_pb2 as kerfed_dot_protos_dot_common_dot_v1_dot_model__pb2
from kerfed.protos.common.v1 import money_pb2 as kerfed_dot_protos_dot_common_dot_v1_dot_money__pb2
from kerfed.protos.common.v1 import settings_pb2 as kerfed_dot_protos_dot_common_dot_v1_dot_settings__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n%kerfed/protos/common/v1/machine.proto\x12\x17kerfed.protos.common.v1\x1a$kerfed/protos/common/v1/config.proto\x1a\"kerfed/protos/common/v1/mill.proto\x1a#kerfed/protos/common/v1/model.proto\x1a#kerfed/protos/common/v1/money.proto\x1a&kerfed/protos/common/v1/settings.proto\"\xc2\x01\n\x0eMaterialConfig\x12\x1f\n\x0bmaterial_id\x18\x01 \x01(\tR\nmaterialId\x12\x19\n\x08model_id\x18\x02 \x01(\tR\x07modelId\x12>\n\tmodel_use\x18\x03 \x01(\x0e\x32!.kerfed.protos.common.v1.ModelUseR\x08modelUse\x12\x34\n\x05model\x18\x04 \x01(\x0b\x32\x1e.kerfed.protos.common.v1.ModelR\x05model\"\xde\x04\n\x07Machine\x12\x1d\n\nmachine_id\x18\x01 \x01(\tR\tmachineId\x12\x14\n\x05label\x18\x02 \x01(\tR\x05label\x12G\n\tmethod_id\x18\x03 \x01(\x0e\x32*.kerfed.protos.common.v1.FabricationMethodR\x08methodId\x12\x17\n\x07shop_id\x18\x04 \x01(\tR\x06shopId\x12\x1d\n\naddress_id\x18\x06 \x01(\tR\taddressId\x12;\n\twork_rate\x18\x07 \x01(\x0b\x32\x1e.kerfed.protos.common.v1.MoneyR\x08workRate\x12\x16\n\x06rapids\x18\t \x01(\tR\x06rapids\x12\x18\n\x07\x65xtents\x18\n \x03(\x01R\x07\x65xtents\x12\x45\n\tmaterials\x18\x0b \x03(\x0b\x32\'.kerfed.protos.common.v1.MaterialConfigR\tmaterials\x12\x36\n\x06models\x18\x0c \x03(\x0b\x32\x1e.kerfed.protos.common.v1.ModelR\x06models\x12\x39\n\x04\x62\x65nt\x18\x14 \x01(\x0b\x32%.kerfed.protos.common.v1.BentSettingsR\x04\x62\x65nt\x12\x39\n\x04\x66lat\x18\x15 \x01(\x0b\x32%.kerfed.protos.common.v1.FlatSettingsR\x04\x66lat\x12\x39\n\x04mill\x18\x16 \x01(\x0b\x32%.kerfed.protos.common.v1.MillSettingsR\x04mill*\x8f\x01\n\x08ModelUse\x12\x19\n\x15MODEL_USE_UNSPECIFIED\x10\x00\x12\x13\n\x0fMODEL_USE_SETUP\x10\x01\x12\x12\n\x0eMODEL_USE_FEED\x10\x02\x12\x14\n\x10MODEL_USE_PIERCE\x10\x03\x12\x14\n\x10MODEL_USE_RAPIDS\x10\x04\x12\x13\n\x0fMODEL_USE_CYCLE\x10\x05\x42\xe5\x01\n\x1b\x63om.kerfed.protos.common.v1B\x0cMachineProtoP\x01Z9github.com/kerfed/protos/kerfed/protos/common/v1;commonv1\xa2\x02\x03KPC\xaa\x02\x17Kerfed.Protos.Common.V1\xca\x02\x17Kerfed\\Protos\\Common\\V1\xe2\x02#Kerfed\\Protos\\Common\\V1\\GPBMetadata\xea\x02\x1aKerfed::Protos::Common::V1b\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'kerfed.protos.common.v1.machine_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:
  _globals['DESCRIPTOR']._options = None
  _globals['DESCRIPTOR']._serialized_options = b'\n\033com.kerfed.protos.common.v1B\014MachineProtoP\001Z9github.com/kerfed/protos/kerfed/protos/common/v1;commonv1\242\002\003KPC\252\002\027Kerfed.Protos.Common.V1\312\002\027Kerfed\\Protos\\Common\\V1\342\002#Kerfed\\Protos\\Common\\V1\\GPBMetadata\352\002\032Kerfed::Protos::Common::V1'
  _globals['_MODELUSE']._serialized_start=1061
  _globals['_MODELUSE']._serialized_end=1204
  _globals['_MATERIALCONFIG']._serialized_start=255
  _globals['_MATERIALCONFIG']._serialized_end=449
  _globals['_MACHINE']._serialized_start=452
  _globals['_MACHINE']._serialized_end=1058
# @@protoc_insertion_point(module_scope)
