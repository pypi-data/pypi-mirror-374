"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
price.proto

Functions and messages supporting an e-commerce
workflow for things like invoices, shipping labels,
etc.
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import kerfed.protos.common.v1.fileblob_pb2
import kerfed.protos.common.v1.machine_pb2
import kerfed.protos.common.v1.money_pb2
import kerfed.protos.common.v1.post_pb2
import kerfed.protos.common.v1.stock_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _OperationKind:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _OperationKindEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_OperationKind.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    OPERATION_KIND_UNSPECIFIED: _OperationKind.ValueType  # 0
    OPERATION_KIND_STOCK: _OperationKind.ValueType  # 1
    OPERATION_KIND_STOCK_REQUEST: _OperationKind.ValueType  # 2
    OPERATION_KIND_MODIFY: _OperationKind.ValueType  # 3
    OPERATION_KIND_CHECK: _OperationKind.ValueType  # 4
    OPERATION_KIND_SHIP: _OperationKind.ValueType  # 5

class OperationKind(_OperationKind, metaclass=_OperationKindEnumTypeWrapper): ...

OPERATION_KIND_UNSPECIFIED: OperationKind.ValueType  # 0
OPERATION_KIND_STOCK: OperationKind.ValueType  # 1
OPERATION_KIND_STOCK_REQUEST: OperationKind.ValueType  # 2
OPERATION_KIND_MODIFY: OperationKind.ValueType  # 3
OPERATION_KIND_CHECK: OperationKind.ValueType  # 4
OPERATION_KIND_SHIP: OperationKind.ValueType  # 5
global___OperationKind = OperationKind

@typing_extensions.final
class Operation(google.protobuf.message.Message):
    """An operation which"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    OPERATION_ID_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    STOCK_FIELD_NUMBER: builtins.int
    MACHINE_FIELD_NUMBER: builtins.int
    POST_FIELD_NUMBER: builtins.int
    SHOP_ID_FIELD_NUMBER: builtins.int
    ADDRESS_ID_FIELD_NUMBER: builtins.int
    PRICE_FIELD_NUMBER: builtins.int
    FILES_FIELD_NUMBER: builtins.int
    NOTE_FIELD_NUMBER: builtins.int
    operation_id: builtins.str
    """A unique identifier for this operation."""
    kind: global___OperationKind.ValueType
    """What type of operation is this?"""
    @property
    def stock(self) -> kerfed.protos.common.v1.stock_pb2.Stock:
        """if this is a stock operation what are the extents and quantity needed."""
    @property
    def machine(self) -> kerfed.protos.common.v1.machine_pb2.Machine:
        """If this operation uses a machine what are the details?"""
    @property
    def post(self) -> kerfed.protos.common.v1.post_pb2.Postprocess:
        """If this operation is a post-process, what are the details?"""
    shop_id: builtins.str
    """What vendor generated this price?"""
    address_id: builtins.str
    """Where exactly is this operation occurring?"""
    @property
    def price(self) -> kerfed.protos.common.v1.money_pb2.Money:
        """how much does this component of the price cost?"""
    @property
    def files(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[kerfed.protos.common.v1.fileblob_pb2.FileBlob]:
        """Are there supporting files for this, like G-code."""
    note: builtins.str
    """a user-facing note about this price
    i.e. "Amada 4kW Fiber Laser, 10 "
    """
    def __init__(
        self,
        *,
        operation_id: builtins.str = ...,
        kind: global___OperationKind.ValueType = ...,
        stock: kerfed.protos.common.v1.stock_pb2.Stock | None = ...,
        machine: kerfed.protos.common.v1.machine_pb2.Machine | None = ...,
        post: kerfed.protos.common.v1.post_pb2.Postprocess | None = ...,
        shop_id: builtins.str = ...,
        address_id: builtins.str = ...,
        price: kerfed.protos.common.v1.money_pb2.Money | None = ...,
        files: collections.abc.Iterable[kerfed.protos.common.v1.fileblob_pb2.FileBlob] | None = ...,
        note: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["machine", b"machine", "post", b"post", "price", b"price", "stock", b"stock"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["address_id", b"address_id", "files", b"files", "kind", b"kind", "machine", b"machine", "note", b"note", "operation_id", b"operation_id", "post", b"post", "price", b"price", "shop_id", b"shop_id", "stock", b"stock"]) -> None: ...

global___Operation = Operation
