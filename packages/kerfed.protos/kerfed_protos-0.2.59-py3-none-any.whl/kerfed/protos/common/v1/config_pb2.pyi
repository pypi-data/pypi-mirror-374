"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _FabricationMethod:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _FabricationMethodEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_FabricationMethod.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    FABRICATION_METHOD_UNSPECIFIED: _FabricationMethod.ValueType  # 0
    FABRICATION_METHOD_FLAT: _FabricationMethod.ValueType  # 10
    FABRICATION_METHOD_BENT: _FabricationMethod.ValueType  # 11
    FABRICATION_METHOD_ROLL: _FabricationMethod.ValueType  # 12
    FABRICATION_METHOD_MILL: _FabricationMethod.ValueType  # 13
    FABRICATION_METHOD_COTS: _FabricationMethod.ValueType  # 14
    FABRICATION_METHOD_ADD: _FabricationMethod.ValueType  # 15
    FABRICATION_METHOD_TURN: _FabricationMethod.ValueType  # 16
    FABRICATION_METHOD_MANUAL: _FabricationMethod.ValueType  # 17

class FabricationMethod(_FabricationMethod, metaclass=_FabricationMethodEnumTypeWrapper):
    """An enum for all the fabrication methods implemented
    corresponding to their field name on `PartFabrication`
    """

FABRICATION_METHOD_UNSPECIFIED: FabricationMethod.ValueType  # 0
FABRICATION_METHOD_FLAT: FabricationMethod.ValueType  # 10
FABRICATION_METHOD_BENT: FabricationMethod.ValueType  # 11
FABRICATION_METHOD_ROLL: FabricationMethod.ValueType  # 12
FABRICATION_METHOD_MILL: FabricationMethod.ValueType  # 13
FABRICATION_METHOD_COTS: FabricationMethod.ValueType  # 14
FABRICATION_METHOD_ADD: FabricationMethod.ValueType  # 15
FABRICATION_METHOD_TURN: FabricationMethod.ValueType  # 16
FABRICATION_METHOD_MANUAL: FabricationMethod.ValueType  # 17
global___FabricationMethod = FabricationMethod

@typing_extensions.final
class PartConfiguration(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PART_ID_FIELD_NUMBER: builtins.int
    METHOD_ID_FIELD_NUMBER: builtins.int
    QUANTITY_FIELD_NUMBER: builtins.int
    MATERIAL_ID_FIELD_NUMBER: builtins.int
    FINISH_ID_FIELD_NUMBER: builtins.int
    COLOR_ID_FIELD_NUMBER: builtins.int
    THICKNESS_ID_FIELD_NUMBER: builtins.int
    POSTS_FIELD_NUMBER: builtins.int
    EXPEDITE_FIELD_NUMBER: builtins.int
    NOTES_FIELD_NUMBER: builtins.int
    COTS_ID_FIELD_NUMBER: builtins.int
    part_id: builtins.str
    """What is the part ID that this corresponds to?"""
    method_id: global___FabricationMethod.ValueType
    """Which process is this configuration for?"""
    quantity: builtins.int
    """how many of a part"""
    material_id: builtins.str
    """material key, i.e. "aluminum_6061_t6" """
    finish_id: builtins.str
    """finish key, i.e. "anodized" """
    color_id: builtins.str
    """finish color key, i.e. "blue" """
    thickness_id: builtins.str
    """discrete thickness key, i.e. "1.5mm" """
    @property
    def posts(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """selected postprocessing operations
        i.e. a list of `post_id` keys
        """
    expedite: builtins.str
    """the expedite kind : standard, rapid, etc"""
    notes: builtins.str
    """any notes input by the user"""
    cots_id: builtins.str
    """which COTS part was selected from matches"""
    def __init__(
        self,
        *,
        part_id: builtins.str = ...,
        method_id: global___FabricationMethod.ValueType = ...,
        quantity: builtins.int = ...,
        material_id: builtins.str = ...,
        finish_id: builtins.str = ...,
        color_id: builtins.str = ...,
        thickness_id: builtins.str = ...,
        posts: collections.abc.Iterable[builtins.str] | None = ...,
        expedite: builtins.str = ...,
        notes: builtins.str = ...,
        cots_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["color_id", b"color_id", "cots_id", b"cots_id", "expedite", b"expedite", "finish_id", b"finish_id", "material_id", b"material_id", "method_id", b"method_id", "notes", b"notes", "part_id", b"part_id", "posts", b"posts", "quantity", b"quantity", "thickness_id", b"thickness_id"]) -> None: ...

global___PartConfiguration = PartConfiguration
