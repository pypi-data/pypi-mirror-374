"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import kerfed.protos.common.v1.money_pb2
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class CotsMatch(google.protobuf.message.Message):
    """i.e a part number on McMaster-Carr"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    COTS_ID_FIELD_NUMBER: builtins.int
    SUPPLIER_ID_FIELD_NUMBER: builtins.int
    LINK_FIELD_NUMBER: builtins.int
    TITLE_FIELD_NUMBER: builtins.int
    PACK_PRICE_FIELD_NUMBER: builtins.int
    PACK_SIZE_FIELD_NUMBER: builtins.int
    WEIGHT_LB_FIELD_NUMBER: builtins.int
    COMPONENT_ID_FIELD_NUMBER: builtins.int
    cots_id: builtins.str
    """the unique identifier for the part"""
    supplier_id: builtins.str
    """i.e. "mcmaster" """
    link: builtins.str
    """a link to the suppliers webpage"""
    title: builtins.str
    """A user-displayable label for the part."""
    @property
    def pack_price(self) -> kerfed.protos.common.v1.money_pb2.Money:
        """the price for a PACK of this part."""
    pack_size: builtins.int
    """the number of this component included in a pack."""
    weight_lb: builtins.float
    """the weight of a SINGLE component."""
    component_id: builtins.str
    """A component type, like "pin," "bearing", etc."""
    def __init__(
        self,
        *,
        cots_id: builtins.str = ...,
        supplier_id: builtins.str = ...,
        link: builtins.str = ...,
        title: builtins.str = ...,
        pack_price: kerfed.protos.common.v1.money_pb2.Money | None = ...,
        pack_size: builtins.int = ...,
        weight_lb: builtins.float = ...,
        component_id: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["pack_price", b"pack_price"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["component_id", b"component_id", "cots_id", b"cots_id", "link", b"link", "pack_price", b"pack_price", "pack_size", b"pack_size", "supplier_id", b"supplier_id", "title", b"title", "weight_lb", b"weight_lb"]) -> None: ...

global___CotsMatch = CotsMatch
