"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
order.proto

Functions and messages supporting an e-commerce
workflow for things like invoices, shipping labels,
etc.
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import kerfed.protos.common.v1.address_pb2
import kerfed.protos.common.v1.config_pb2
import kerfed.protos.common.v1.error_pb2
import kerfed.protos.common.v1.fab_pb2
import kerfed.protos.common.v1.fileblob_pb2
import kerfed.protos.common.v1.money_pb2
import kerfed.protos.common.v1.outcome_pb2
import kerfed.protos.common.v1.price_pb2
import kerfed.protos.common.v1.scene_pb2
import kerfed.protos.common.v1.shipping_pb2
import kerfed.protos.common.v1.timestamp_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _OrderEventKind:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _OrderEventKindEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_OrderEventKind.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    ORDER_EVENT_KIND_UNSPECIFIED: _OrderEventKind.ValueType  # 0
    ORDER_EVENT_KIND_CREATED: _OrderEventKind.ValueType  # 1
    """An order document was created."""
    ORDER_EVENT_KIND_SHARED: _OrderEventKind.ValueType  # 2
    """An order was sha"""
    ORDER_EVENT_KIND_PLACED: _OrderEventKind.ValueType  # 3
    """An order was placed but not paid"""
    ORDER_EVENT_KIND_PAID: _OrderEventKind.ValueType  # 4
    """An order was paid"""
    ORDER_EVENT_KIND_SHIPPED: _OrderEventKind.ValueType  # 6
    """An order has had some component shipped."""
    ORDER_EVENT_KIND_CANCELLED: _OrderEventKind.ValueType  # 7
    """An order was cancelled."""

class OrderEventKind(_OrderEventKind, metaclass=_OrderEventKindEnumTypeWrapper):
    """An enum for all the fabrication methods implemented
    corresponding to their field name on `PartFabrication`
    """

ORDER_EVENT_KIND_UNSPECIFIED: OrderEventKind.ValueType  # 0
ORDER_EVENT_KIND_CREATED: OrderEventKind.ValueType  # 1
"""An order document was created."""
ORDER_EVENT_KIND_SHARED: OrderEventKind.ValueType  # 2
"""An order was sha"""
ORDER_EVENT_KIND_PLACED: OrderEventKind.ValueType  # 3
"""An order was placed but not paid"""
ORDER_EVENT_KIND_PAID: OrderEventKind.ValueType  # 4
"""An order was paid"""
ORDER_EVENT_KIND_SHIPPED: OrderEventKind.ValueType  # 6
"""An order has had some component shipped."""
ORDER_EVENT_KIND_CANCELLED: OrderEventKind.ValueType  # 7
"""An order was cancelled."""
global___OrderEventKind = OrderEventKind

@typing_extensions.final
class Order(google.protobuf.message.Message):
    """The data structure that represents both an editable "quote," and
    a frozen "placed order."
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ORDER_ID_FIELD_NUMBER: builtins.int
    USER_ID_FIELD_NUMBER: builtins.int
    SHOP_ID_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    PARTS_FIELD_NUMBER: builtins.int
    LINES_FIELD_NUMBER: builtins.int
    MODELS_FIELD_NUMBER: builtins.int
    SHIPPING_FIELD_NUMBER: builtins.int
    BILLING_FIELD_NUMBER: builtins.int
    PARCELS_FIELD_NUMBER: builtins.int
    TOTAL_FIELD_NUMBER: builtins.int
    DATE_MODIFIED_FIELD_NUMBER: builtins.int
    DATE_CREATED_FIELD_NUMBER: builtins.int
    order_id: builtins.str
    """The unique identifier for this specific order."""
    user_id: builtins.str
    """The unique identifier for the user placing the order in the auth system."""
    shop_id: builtins.str
    """The unique identifier of the shop this order is associated with."""
    @property
    def state(self) -> global___OrderState:
        """Records events such as "placed," "emailed," "shared," etc."""
    @property
    def parts(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[kerfed.protos.common.v1.fab_pb2.PartFabrication]:
        """The extracted parts for this order."""
    @property
    def lines(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___OrderLine]:
        """A list of configured line items to order."""
    @property
    def models(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[kerfed.protos.common.v1.scene_pb2.Scene]:
        """The models for the source files of the parts.
        This includes both a neutral format model and the
        original CAD data the scene was loaded from.
        """
    @property
    def shipping(self) -> kerfed.protos.common.v1.address_pb2.PostalAddress:
        """where is order shipped to"""
    @property
    def billing(self) -> kerfed.protos.common.v1.address_pb2.PostalAddress:
        """where is order billed to"""
    @property
    def parcels(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[kerfed.protos.common.v1.shipping_pb2.ShippingParcel]:
        """the parcels this order is shipping with"""
    @property
    def total(self) -> kerfed.protos.common.v1.price_pb2.OrderPrice:
        """The total price including shipping."""
    @property
    def date_modified(self) -> kerfed.protos.common.v1.timestamp_pb2.Timestamp:
        """What was the last time this order was modified."""
    @property
    def date_created(self) -> kerfed.protos.common.v1.timestamp_pb2.Timestamp:
        """When was the order created."""
    def __init__(
        self,
        *,
        order_id: builtins.str = ...,
        user_id: builtins.str = ...,
        shop_id: builtins.str = ...,
        state: global___OrderState | None = ...,
        parts: collections.abc.Iterable[kerfed.protos.common.v1.fab_pb2.PartFabrication] | None = ...,
        lines: collections.abc.Iterable[global___OrderLine] | None = ...,
        models: collections.abc.Iterable[kerfed.protos.common.v1.scene_pb2.Scene] | None = ...,
        shipping: kerfed.protos.common.v1.address_pb2.PostalAddress | None = ...,
        billing: kerfed.protos.common.v1.address_pb2.PostalAddress | None = ...,
        parcels: collections.abc.Iterable[kerfed.protos.common.v1.shipping_pb2.ShippingParcel] | None = ...,
        total: kerfed.protos.common.v1.price_pb2.OrderPrice | None = ...,
        date_modified: kerfed.protos.common.v1.timestamp_pb2.Timestamp | None = ...,
        date_created: kerfed.protos.common.v1.timestamp_pb2.Timestamp | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["billing", b"billing", "date_created", b"date_created", "date_modified", b"date_modified", "shipping", b"shipping", "state", b"state", "total", b"total"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["billing", b"billing", "date_created", b"date_created", "date_modified", b"date_modified", "lines", b"lines", "models", b"models", "order_id", b"order_id", "parcels", b"parcels", "parts", b"parts", "shipping", b"shipping", "shop_id", b"shop_id", "state", b"state", "total", b"total", "user_id", b"user_id"]) -> None: ...

global___Order = Order

@typing_extensions.final
class OrderEvent(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STAMP_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    DETAILS_FIELD_NUMBER: builtins.int
    @property
    def stamp(self) -> kerfed.protos.common.v1.timestamp_pb2.Timestamp:
        """when did this event occur?"""
    kind: global___OrderEventKind.ValueType
    """What kind of event was this?"""
    name: builtins.str
    """The name of the event."""
    details: builtins.str
    """Any additional details about the event"""
    def __init__(
        self,
        *,
        stamp: kerfed.protos.common.v1.timestamp_pb2.Timestamp | None = ...,
        kind: global___OrderEventKind.ValueType = ...,
        name: builtins.str = ...,
        details: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["stamp", b"stamp"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["details", b"details", "kind", b"kind", "name", b"name", "stamp", b"stamp"]) -> None: ...

global___OrderEvent = OrderEvent

@typing_extensions.final
class FileState(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FILE_ID_FIELD_NUMBER: builtins.int
    OUTCOME_FIELD_NUMBER: builtins.int
    file_id: builtins.str
    """What is the ID for the file"""
    @property
    def outcome(self) -> kerfed.protos.common.v1.outcome_pb2.Outcome:
        """What is the outcome of the analysis?"""
    def __init__(
        self,
        *,
        file_id: builtins.str = ...,
        outcome: kerfed.protos.common.v1.outcome_pb2.Outcome | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["outcome", b"outcome"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["file_id", b"file_id", "outcome", b"outcome"]) -> None: ...

global___FileState = FileState

@typing_extensions.final
class OrderState(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    EVENTS_FIELD_NUMBER: builtins.int
    ERRORS_FIELD_NUMBER: builtins.int
    IS_PROCESSING_FIELD_NUMBER: builtins.int
    IS_PAID_FIELD_NUMBER: builtins.int
    @property
    def events(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___OrderEvent]:
        """Events that occurred."""
    @property
    def errors(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[kerfed.protos.common.v1.error_pb2.Error]:
        """If the order has had errors"""
    is_processing: builtins.bool
    """Currently processing information and may not be complete."""
    is_paid: builtins.bool
    """Payment has been made for this order."""
    def __init__(
        self,
        *,
        events: collections.abc.Iterable[global___OrderEvent] | None = ...,
        errors: collections.abc.Iterable[kerfed.protos.common.v1.error_pb2.Error] | None = ...,
        is_processing: builtins.bool = ...,
        is_paid: builtins.bool = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["errors", b"errors", "events", b"events", "is_paid", b"is_paid", "is_processing", b"is_processing"]) -> None: ...

global___OrderState = OrderState

@typing_extensions.final
class OrderLine(google.protobuf.message.Message):
    """The fully specified and priced lines of an order."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LINE_ID_FIELD_NUMBER: builtins.int
    CONFIG_FIELD_NUMBER: builtins.int
    PRICE_FIELD_NUMBER: builtins.int
    line_id: builtins.str
    """A unique identifier for this line item which will be
    used to reference, modify, or delete this order part.
    """
    @property
    def config(self) -> kerfed.protos.common.v1.config_pb2.PartConfiguration:
        """The configuration used to generate the price."""
    @property
    def price(self) -> kerfed.protos.common.v1.price_pb2.LinePrice:
        """The calculated price for this line item."""
    def __init__(
        self,
        *,
        line_id: builtins.str = ...,
        config: kerfed.protos.common.v1.config_pb2.PartConfiguration | None = ...,
        price: kerfed.protos.common.v1.price_pb2.LinePrice | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["config", b"config", "price", b"price"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["config", b"config", "line_id", b"line_id", "price", b"price"]) -> None: ...

global___OrderLine = OrderLine

@typing_extensions.final
class Release(google.protobuf.message.Message):
    """a Job is a released-to-manufacture package"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SHOP_ID_FIELD_NUMBER: builtins.int
    ORDER_ID_FIELD_NUMBER: builtins.int
    RELEASE_ID_FIELD_NUMBER: builtins.int
    PART_ID_FIELD_NUMBER: builtins.int
    AMOUNT_FIELD_NUMBER: builtins.int
    FILES_FIELD_NUMBER: builtins.int
    PARCELS_FIELD_NUMBER: builtins.int
    shop_id: builtins.str
    """which shop is making this"""
    order_id: builtins.str
    """which order was this job created from"""
    release_id: builtins.str
    """unique identifier for this job"""
    @property
    def part_id(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """the parts being manufactured by this job"""
    @property
    def amount(self) -> kerfed.protos.common.v1.money_pb2.Money:
        """the total amount of money that
        will be disbursed to the shop on completion
        shipping which will be either paid by us or
        invoiced separately.
        """
    @property
    def files(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[kerfed.protos.common.v1.fileblob_pb2.FileBlob]:
        """any additional reference files, including
        flattened DXF drawings, original models, etc.
        """
    @property
    def parcels(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[kerfed.protos.common.v1.shipping_pb2.ShippingParcel]:
        """the parcels this order is shipping with"""
    def __init__(
        self,
        *,
        shop_id: builtins.str = ...,
        order_id: builtins.str = ...,
        release_id: builtins.str = ...,
        part_id: collections.abc.Iterable[builtins.str] | None = ...,
        amount: kerfed.protos.common.v1.money_pb2.Money | None = ...,
        files: collections.abc.Iterable[kerfed.protos.common.v1.fileblob_pb2.FileBlob] | None = ...,
        parcels: collections.abc.Iterable[kerfed.protos.common.v1.shipping_pb2.ShippingParcel] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["amount", b"amount"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["amount", b"amount", "files", b"files", "order_id", b"order_id", "parcels", b"parcels", "part_id", b"part_id", "release_id", b"release_id", "shop_id", b"shop_id"]) -> None: ...

global___Release = Release
