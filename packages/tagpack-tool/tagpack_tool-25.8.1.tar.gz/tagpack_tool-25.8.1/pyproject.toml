
[project]
dynamic = ["version"]
name = "tagpack-tool"
description = "GraphSense TagPack Management Tool"
authors = [
  {name = "GraphSense Core Team", email = "tech@ikna.io"}
]
readme = "README.md"
license-files = ["LICENSE"]
# long-description = "file: README.md"
# long-description-content-type = "text/markdown; charset=UTF-8; variant=GFM"
# url = "https://graphsense.github.io/"
keywords = ["graphsense"]
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
    "Intended Audience :: Developers",
    "Topic :: Utilities",
]
requires-python = ">=3.9"
dependencies = [
    "anytree>=2.9.0",
    "asyncpg>=0.30.0",
    "base58>=2.1",
    "cashaddress>=1.0.4",
    "cassandra-driver>=3.27.0",
    "coinaddrvalidator>=1.2.3",
    "colorama>=0.4.6",
    "fastapi[all]>=0.101.0",
    "gitpython>=3.1",
    "giturlparse>=0.10",
    "lz4>=4.3.2",
    "pandas>=1.3.5",
    "psycopg2-binary>=2.9.3",
    "python-dotenv>=1.0.1",
    "pyyaml-include~=1.3",
    "pyyaml>=6.0",
    "requests>=2.28.1",
    "sqlmodel>=0.0.22",
    "tabulate>=0.9.0",
    "typer>=0.13.0",
]

[project.urls]
    Source = "https://github.com/graphsense/graphsense-tagpack-tool"
    Repository= "https://github.com/graphsense/graphsense-tagpack-tool.git"
    Changelog = "https://github.com/graphsense/graphsense-tagpack-tool/blob/master/CHANGELOG.md"
    Tracker = "https://github.com/graphsense/graphsense-tagpack-tool/issues"
    Download = "https://github.com/graphsense"


[build-system]
requires = ["setuptools>=80.8.0, <81", "setuptools-scm>=8"]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
# For smarter version schemes and other configuration options,
# check out https://github.com/pypa/setuptools_scm
version_scheme = "no-guess-dev"

[options.packages.find]
where = "src"
exclude = "tests"

[tool.setuptools.packages.find]
where = ["src"]  # list of folders that contain the packages (["."] by default)
include = ["tagstore*","tagpack*","tagstore.web.statics"]  # package names should match these glob patterns (["*"] by default)
exclude = ["tagstore.tests*", "tagpack.tests*", "tests*", "admin-ui*"]  # exclude packages matching these glob patterns (empty by default)
namespaces = false  # to disable scanning PEP 420 namespaces (true by default)

[dependency-groups]
dev = [
    "build>=1.2.2.post1",
    "pdbpp>=0.10.3",
    "pre-commit>=4.1.0",
    "pytest-cov>=6.0.0",
    "pytest>=8.3.4",
    "ruff>=0.9.2",
    "setuptools-scm>=8.1.0",
    "setuptools>=80.8.0",
    "testcontainers[postgres]>=4.9.1",
    "tox-uv>=1.16.0",
    "tox>=4.24.1",
    "pytest-asyncio>=0.26.0",
]

[project.scripts]
tagpack-tool = "tagpack.cli:main"
gs-tagstore-cli = "tagstore.cli.main:main"



[tool.tox]
legacy_tox_ini = """
[tox]
skipsdist=True
envlist = py39,py310,py311,py312
;requires=tox-venv

[gh-actions]
python =
    3.9: py39
    3.10: py310
    3.11: py311
    3.12: py312

[testenv]
runner = uv-venv-lock-runner
uv_sync_flags=
with_dev=True
passenv=*
commands=
    pytest -x -rx -vv --cov=tagpack --cov=tagstore

[testenv:{lint}]
ignore =
deps = .[dev]
commands = ruff check tests src

[testenv:{build,clean}]
description =
    build: Build the package in isolation according to PEP517, see https://github.com/pypa/build
    clean: Remove old distribution files and temporary build artifacts (./build and ./dist)
# https://setuptools.pypa.io/en/stable/build_meta.html#how-to-use-it
skip_install = True
changedir = {toxinidir}
deps =
    build: build[virtualenv]
passenv =
    SETUPTOOLS_*
commands =
    clean: python -c 'import shutil; [shutil.rmtree(p, True) for p in ("build", "dist", "docs/_build")]'
    clean: python -c 'import pathlib, shutil; [shutil.rmtree(p, True) for p in pathlib.Path("src").glob("*.egg-info")]'
    build: python -m build {posargs}
"""

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "openapi_server",
    "tests/test_*.py",
    "setup.py"
]
