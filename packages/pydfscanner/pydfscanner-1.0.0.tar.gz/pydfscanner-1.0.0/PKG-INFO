Metadata-Version: 2.4
Name: pydfscanner
Version: 1.0.0
Summary: PDF scanner and collator
Author-email: Emmet Weyman <emmetweyman@vt.edu>
License: MIT License
        
        Copyright (c) 2020 alvarorga 
        Copyright (c) 2025 Emmet Weyman
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Classifier: Programming Language :: Python :: 3
Classifier: Operating System :: POSIX :: Linux
Requires-Python: >=3.11
Description-Content-Type: text/markdown
License-File: LICENSE.txt
Requires-Dist: imutils
Requires-Dist: numpy
Requires-Dist: opencv-python
Requires-Dist: pillow
Requires-Dist: matplotlib
Dynamic: license-file

# Pyscan

Create a PDF file from a list of images using [OpenCV](https://opencv.org/).

---

## Usage

    $ pydfscanner "image_paths" -o "output_pdf_path"

If the document was not correctly scanned there is a way to find where the
process failed. Just run:

    $ pydfscanner --debug "image_paths" -o "output_pdf_path"

Along the final (although incorrect) scanned document there will be an
additional file with the original image with the detected document's corners and
edges -- red dots and lines -- and all detected edges in the image -- blue lines
--. 

Run `pydfscanner -h` for additional flags and help.
