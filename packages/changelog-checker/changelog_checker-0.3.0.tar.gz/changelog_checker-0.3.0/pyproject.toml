[build-system]
requires = ["hatchling", "hatch-fancy-pypi-readme"]
build-backend = "hatchling.build"

[project]
name = "changelog-checker"
dynamic = ["version", "readme"]
requires-python = ">=3.11"
description = "A tool for analyzing dependency updates and their changelogs."
license = "MIT"
authors = [{ name = "MrNaif2018", email = "chuff184@gmail.com" }]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Quality Assurance",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
]
keywords = ["changelog", "checker", "dependency", "update", "analysis"]
dependencies = [
    "click>=8.2.1",
    "distlib>=0.3.9",
    "googlesearch-python>=1.3.0",
    "requests>=2.32.4",
    "rich>=14.0.0",
]
scripts = { changelog-checker = "changelog_checker.cli:main" }

[project.optional-dependencies]
rst = ["rich-rst>=1.3.1"]
beautiful-html = ["docutils>=0.21.2", "markdown>=3.8.2"]

[project.urls]
Homepage = "https://github.com/MrNaif2018/changelog-checker"
Source = "https://github.com/MrNaif2018/changelog-checker"
Changelog = "https://github.com/MrNaif2018/changelog-checker/blob/master/CHANGELOG.md"

[dependency-groups]
dev = [
    "mypy>=1.16.1",
    "pre-commit>=4.2.0",
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "ruff>=0.12.3",
    "taskipy>=1.14.1",
    "types-docutils>=0.21.0.20250710",
    "types-markdown>=3.8.0.20250708",
    "types-requests>=2.32.4.20250611",
]

[tool.hatch.metadata.hooks.fancy-pypi-readme]
content-type = "text/markdown"
fragments = [{ path = "README.md" }]
# relative links to absolute
substitutions = [
    { pattern = '\[(.+?)\]\(((?!https?://)\S+?)\)', replacement = '[\1](https://raw.githubusercontent.com/MrNaif2018/changelog-checker/master\g<2>)' },
]


[tool.taskipy.tasks]
lint = { cmd = "ruff format . && ruff check --fix .", help = "run linters with autofix" }
lint_check = { cmd = "ruff format --check . && ruff check .", help = "run ruff linter" }
lint_types = { cmd = "mypy changelog_checker", help = "run mypy type verify" }
test = { cmd = "pytest ${TEST_ARGS}", help = "run tests" }
ci = { cmd = "task lint_check && task lint_types && task test", help = "run ci checks" }

[tool.hatch.version]
path = "changelog_checker/version.py"

[tool.hatch.build.targets.wheel]
packages = ["changelog_checker"]

[tool.hatch.build.targets.sdist]
include = ["changelog_checker"]

[tool.ruff]
target-version = "py311"
line-length = 127

[tool.ruff.lint]
select = [
    "F",
    "E",
    "I",
    "UP",
    "YTT",
    "B",
    "T10",
    "C",
    "SIM",
    "RUF100",
    "RET",
    "A",
    "S",
    "ASYNC",
    "TID",
]
unfixable = ["F401"]
ignore = ["RET502", "RET503", "S104", "S507", "ASYNC110"]
mccabe = { max-complexity = 12 }

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S"]

[tool.mypy]
ignore_missing_imports = true
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true
strict_equality = true
disallow_untyped_defs = true
skip_cache_mtime_checks = true
exclude = ["tests"]

[tool.pytest.ini_options]
addopts = [
    "--cov=changelog_checker",
    "--cov-report",
    "term-missing",
    "--disable-network",
]
filterwarnings = [
    "error::DeprecationWarning",
    "error::PendingDeprecationWarning",
]
markers = ["live: mark tests as needing an internet connection to run."]
