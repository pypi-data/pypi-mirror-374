# coding: utf-8

"""
    Kalshi Trading API

    Complete API for the Kalshi trading platform including all handlers for SDK generation

    The version of the OpenAPI document: 2.0.0
    Contact: support@kalshi.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from kalshi_python.models.market import Market

class TestMarket(unittest.TestCase):
    """Market unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Market:
        """Test Market
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Market`
        """
        model = Market()
        if include_optional:
            return Market(
                ticker = '',
                series_ticker = '',
                event_ticker = '',
                title = '',
                subtitle = '',
                open_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                close_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                expiration_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                status = 'initialized',
                yes_bid = 1.337,
                yes_ask = 1.337,
                no_bid = 1.337,
                no_ask = 1.337,
                last_price = 1.337,
                volume = 56,
                volume_24h = 56,
                result = 'yes',
                can_close_early = True,
                cap_count = 56
            )
        else:
            return Market(
        )
        """

    def testMarket(self):
        """Test Market"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
