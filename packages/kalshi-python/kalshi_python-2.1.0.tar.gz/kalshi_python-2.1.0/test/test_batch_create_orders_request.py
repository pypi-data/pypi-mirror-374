# coding: utf-8

"""
    Kalshi Trading API

    Complete API for the Kalshi trading platform including all handlers for SDK generation

    The version of the OpenAPI document: 2.0.0
    Contact: support@kalshi.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from kalshi_api_v2_external.models.batch_create_orders_request import BatchCreateOrdersRequest

class TestBatchCreateOrdersRequest(unittest.TestCase):
    """BatchCreateOrdersRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BatchCreateOrdersRequest:
        """Test BatchCreateOrdersRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BatchCreateOrdersRequest`
        """
        model = BatchCreateOrdersRequest()
        if include_optional:
            return BatchCreateOrdersRequest(
                orders = [
                    kalshi_api_v2_external.models.create_order_request.CreateOrderRequest(
                        ticker = '', 
                        client_order_id = '', 
                        side = 'yes', 
                        action = 'buy', 
                        count = 1, 
                        type = 'limit', 
                        yes_price = 1, 
                        no_price = 1, 
                        expiration_ts = 56, 
                        sell_position_floor = 56, 
                        buy_max_cost = 56, )
                    ]
            )
        else:
            return BatchCreateOrdersRequest(
                orders = [
                    kalshi_api_v2_external.models.create_order_request.CreateOrderRequest(
                        ticker = '', 
                        client_order_id = '', 
                        side = 'yes', 
                        action = 'buy', 
                        count = 1, 
                        type = 'limit', 
                        yes_price = 1, 
                        no_price = 1, 
                        expiration_ts = 56, 
                        sell_position_floor = 56, 
                        buy_max_cost = 56, )
                    ],
        )
        """

    def testBatchCreateOrdersRequest(self):
        """Test BatchCreateOrdersRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
