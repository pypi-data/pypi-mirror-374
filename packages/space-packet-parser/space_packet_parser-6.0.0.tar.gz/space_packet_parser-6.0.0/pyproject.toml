[project]
name = "space_packet_parser"
version = "6.0.0"
description = "A CCSDS telemetry packet decoding library based on the XTCE packet format description standard."
license = { text = "BSD-3-Clause" }
readme = "README.md"
requires-python = ">=3.9"
authors = [
    { name = "Gavin Medley", email = "gavin.medley@lasp.colorado.edu" },
    { name = "Greg Lucas", email = "greg.lucas@lasp.colorado.edu" },
    { name = "Michael Chambliss", email = "michael.chambliss@lasp.colorado.edu" }
]
maintainers = [
    { name = "Gavin Medley", email = "gavin.medley@lasp.colorado.edu" },
    { name = "Greg Lucas", email = "greg.lucas@lasp.colorado.edu" }
]
keywords = [
    "ccsds",
    "xtce",
    "space data systems",
    "space packet protocol",
    "packet parsing",
    "lasp",
    "university of colorado",
    "data processing",
    "data extraction",
    "data manipulation",
    "data transformation",
    "data encoding",
    "data decoding",
    "packet inspection",
    "binary data",
    "python"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
    "License :: OSI Approved :: BSD License"
]
# These are the dependencies used for metadata when building the project
dependencies = [
    "lxml>=4.8.0",
    "click>=8.0",
    "rich>=13.0"
]

[project.urls]
repository = "https://github.com/lasp/space_packet_parser"
homepage = "https://github.com/lasp/space_packet_parser"
documentation = "https://space-packet-parser.readthedocs.io"

[project.scripts]
spp = "space_packet_parser.cli:spp"

# These are the project extras used for metadata when building the project
[project.optional-dependencies]
xarray = [
    "xarray>2024.0.0",
    "numpy>=1.26.0"
]
examples = [
    "matplotlib>=3.4"
]
test = [
    "pre-commit",
    "pytest",
    "pytest-benchmark",
    "pytest-randomly",
    "pytest-cov",
    "pyyaml",  # needed by check_metadata.py
    "ruff",
    "tomli",  # for support of python<3.11 toml parsing in check_metadata.py
    "xarray",  # for testing extra
    "numpy"  # for testing extra
]
docs = [
    "pyyaml",
    "sphinx",
    "myst-parser",
    "sphinx-autoapi",
    "sphinx-rtd-theme"
]

[tool.poetry]
packages = [
    { include = "space_packet_parser" }
]
include = [
    "LICENSE.txt",
    "CITATION.cff"
]

[tool.poetry.group.xarray.dependencies]
xarray = ">2024.0.0"
numpy = ">=2.0.0"

[tool.poetry.group.examples.dependencies]
matplotlib = ">=3.4"

[tool.poetry.group.test.dependencies]
pre-commit = "*"
pytest = "*"
pytest-benchmark = "*"
pytest-randomly = "*"
pytest-cov = "*"
pyyaml = "*"
ruff = "*"
tomli = "*"

[tool.poetry.group.docs.dependencies]
pyyaml = "*"
sphinx = "*"
myst-parser = "*"
sphinx-autoapi = "*"
sphinx-rtd-theme = "*"

[build-system]
requires = ["poetry-core>=2.0.1"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
filterwarnings = [
    "error",
    "ignore:You are encoding a BooleanParameterType:UserWarning"
]

# Note: Ruff uses the "nearest" configuration file at runtime so configurations may be overridden
[tool.ruff]
line-length = 120  # Target line length. ruff format "does its best" to respect this.
extend-include = [
    "space_packet_parser/**/*.py",
    "examples/**/*.py",
    "tests/**/*.py"
]
extend-exclude = []

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort import sorting
    "S",  # flake8-bandit security
    "PT",  # flake8-pytest-style
    "UP"  # pyupgrade syntax upgrader
]
per-file-ignores = { "tests/*" = ["S"] }
ignore = [
    "E501", # Ignore line length errors, as we trust ruff format to handle this.
    "F541" # Allow f strings as docstrings
]
