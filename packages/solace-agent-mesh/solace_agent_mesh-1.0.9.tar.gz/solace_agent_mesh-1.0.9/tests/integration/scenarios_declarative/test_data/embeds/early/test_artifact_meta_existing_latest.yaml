test_case_id: "embed_artifact_meta_existing_latest_001"
description: "Tests «artifact_meta:file1.txt» resolves to the latest version's metadata."
tags: ["all","common","embeds"]
skip_intermediate_events: true

setup_artifacts:
  - filename: "file1.txt"
    mime_type: "text/plain"
    content: "Version 0 content"
    metadata: {"description": "Initial version of file1.txt"} # ADDED metadata for v0
  - filename: "file1.txt" # Same filename, new version
    mime_type: "text/markdown"
    content: "## Version 1 Content"
    # version: 1 # Implicitly version 1
    metadata: {"source": "latest_upload", "status": "final"}
gateway_input:
  target_agent_name: "TestAgent"
  user_identity: "embed_tester@example.com"
  parts: [{type: "text", text: "Get metadata for file1.txt"}]
  external_context:
    a2a_session_id: "fixed_session_for_artifact_meta_latest_test_001"
llm_interactions:
  - static_response:
      choices: [{message: {role: "assistant", content: "Metadata: «artifact_meta:file1.txt»"}}]
expected_gateway_output:
  - type: "final_response"
    content_parts:
      - type: "text"
        text_contains: "--- Metadata for artifact 'file1.txt' (v1) ---"
      - type: "text"
        text_contains: "*   **Source:** latest_upload"
      - type: "text"
        text_contains: "status: final"
      - type: "text"
        text_contains: "*   **Type:** text/markdown"
      - type: "text"
        text_contains: "*   **Schema Type:** text/markdown" # Defaults to MIME type if no explicit schema
      - type: "text"
        text_matches_regex: "\\*   size: \\d+" # Check for size presence with formatting
