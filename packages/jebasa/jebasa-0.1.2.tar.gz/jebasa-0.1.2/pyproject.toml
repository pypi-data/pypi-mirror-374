[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "jebasa"
dynamic = ["version"]
description = "Japanese ebook audio subtitle aligner - Create synchronized subtitles from Japanese audiobooks and EPUB files"
readme = "README.md"
license = "MIT"
requires-python = ">=3.8"
authors = [
    {name = "OCboy5", email = "your.email@example.com"},
]
keywords = ["japanese", "nlp", "audio", "alignment", "subtitles", "epub", "mfa"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia :: Sound/Audio :: Analysis",
    "Topic :: Text Processing :: Linguistic",
    "Topic :: Scientific/Engineering :: Information Analysis",
]
dependencies = [
    "click>=8.0.0",
    "pydantic>=2.0.0",
    "fugashi>=1.2.0",
    "unidic-lite",
    "beautifulsoup4>=4.9.0",
    "lxml>=4.6.0",
    "tqdm>=4.60.0",
    "rich>=10.0.0",
    "pathlib-mate>=1.0.0",
    "pydub>=0.25.0",
    "textgrid>=1.5",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=2.20.0",
]
docs = [
    "mkdocs>=1.4.0",
    "mkdocs-material>=8.0.0",
    "mkdocstrings[python]>=0.18.0",
]

[project.urls]
Homepage = "https://github.com/OCboy5/jebasa"
Documentation = "https://jebasa.readthedocs.io"
Repository = "https://github.com/OCboy5/jebasa"
"Bug Tracker" = "https://github.com/OCboy5/jebasa/issues"

[project.scripts]
jebasa = "jebasa.cli:main"

[tool.hatch.version]
path = "src/jebasa/__init__.py"

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/docs",
    "/examples",
]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["jebasa"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "fugashi.*",
    "textgrid.*",
    "pydub.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = "--cov=jebasa --cov-report=term-missing --cov-report=html"

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/test_*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
