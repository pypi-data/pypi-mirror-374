"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enode.types import BaseModel
from enum import Enum
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class TariffRateIntervalWeekday(int, Enum):
    ZERO = 0
    ONE = 1
    TWO = 2
    THREE = 3
    FOUR = 4
    FIVE = 5
    SIX = 6


class TariffRateIntervalTypedDict(TypedDict):
    name: str
    r"""Rate name"""
    from_: str
    r"""Interval from time (inclusive), format `HH:mm`. Interpreted in the timezone specified in the `timezoneName` field of the Location."""
    to: str
    r"""Interval to time (exclusive), format `HH:mm`. Interpreted in the timezone specified in the `timezoneName` field of the Location."""
    weekdays: NotRequired[List[TariffRateIntervalWeekday]]
    r"""An array of weekdays to apply the named tariff. A weekday starts with 0 for Monday, and ends with 6 for Sunday. If not specified, named tariff is applied for entire week"""


class TariffRateInterval(BaseModel):
    name: str
    r"""Rate name"""

    from_: Annotated[str, pydantic.Field(alias="from")]
    r"""Interval from time (inclusive), format `HH:mm`. Interpreted in the timezone specified in the `timezoneName` field of the Location."""

    to: str
    r"""Interval to time (exclusive), format `HH:mm`. Interpreted in the timezone specified in the `timezoneName` field of the Location."""

    weekdays: Optional[List[TariffRateIntervalWeekday]] = None
    r"""An array of weekdays to apply the named tariff. A weekday starts with 0 for Monday, and ends with 6 for Sunday. If not specified, named tariff is applied for entire week"""
