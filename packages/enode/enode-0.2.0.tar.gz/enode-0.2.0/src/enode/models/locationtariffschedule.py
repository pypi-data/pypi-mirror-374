"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enode.types import BaseModel
from enum import Enum
import pydantic
from typing_extensions import Annotated, TypedDict


class LocationTariffScheduleWeekday(int, Enum):
    r"""Weekday to apply the named tariff. A weekday starts with 0 for Monday, and ends with 6 for Sunday. If not specified, named tariff is applied for entire week"""

    ZERO = 0
    ONE = 1
    TWO = 2
    THREE = 3
    FOUR = 4
    FIVE = 5
    SIX = 6


class LocationTariffScheduleTypedDict(TypedDict):
    weekday: LocationTariffScheduleWeekday
    r"""Weekday to apply the named tariff. A weekday starts with 0 for Monday, and ends with 6 for Sunday. If not specified, named tariff is applied for entire week"""
    from_hour_minute: str
    r"""Interval from time (inclusive, UTC)"""
    to_hour_minute: str
    r"""Interval to time (exclusive, UTC)"""
    tariff_id: str
    r"""Energy Provider Tariff ID"""
    tariff_name: str
    r"""Rate name"""


class LocationTariffSchedule(BaseModel):
    weekday: LocationTariffScheduleWeekday
    r"""Weekday to apply the named tariff. A weekday starts with 0 for Monday, and ends with 6 for Sunday. If not specified, named tariff is applied for entire week"""

    from_hour_minute: Annotated[str, pydantic.Field(alias="fromHourMinute")]
    r"""Interval from time (inclusive, UTC)"""

    to_hour_minute: Annotated[str, pydantic.Field(alias="toHourMinute")]
    r"""Interval to time (exclusive, UTC)"""

    tariff_id: Annotated[str, pydantic.Field(alias="tariffId")]
    r"""Energy Provider Tariff ID"""

    tariff_name: Annotated[str, pydantic.Field(alias="tariffName")]
    r"""Rate name"""
