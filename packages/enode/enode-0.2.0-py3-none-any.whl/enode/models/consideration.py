"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enode.types import BaseModel
import pydantic
from typing_extensions import Annotated, TypedDict


class ConsiderationTypedDict(TypedDict):
    is_plugged_in: bool
    r"""The vehicle is plugged in"""
    is_charging: bool
    r"""The vehicle is charging"""
    at_charging_location: bool
    r"""The vehicle is located at a configured Charging Location"""
    has_time_estimate: bool
    r"""A good estimate is available of how much time it will take to charge."""


class Consideration(BaseModel):
    is_plugged_in: Annotated[bool, pydantic.Field(alias="isPluggedIn")]
    r"""The vehicle is plugged in"""

    is_charging: Annotated[bool, pydantic.Field(alias="isCharging")]
    r"""The vehicle is charging"""

    at_charging_location: Annotated[bool, pydantic.Field(alias="atChargingLocation")]
    r"""The vehicle is located at a configured Charging Location"""

    has_time_estimate: Annotated[bool, pydantic.Field(alias="hasTimeEstimate")]
    r"""A good estimate is available of how much time it will take to charge."""
