"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .autotargetstate import AutoTargetState, AutoTargetStateTypedDict
from .cooltargetstate import CoolTargetState, CoolTargetStateTypedDict
from .heattargetstate import HeatTargetState, HeatTargetStateTypedDict
from .offtargetstate import OffTargetState, OffTargetStateTypedDict
from enode.utils import get_discriminator
from pydantic import Discriminator, Tag
from typing import Union
from typing_extensions import Annotated, TypeAliasType


PermanentHoldTargetStateTypedDict = TypeAliasType(
    "PermanentHoldTargetStateTypedDict",
    Union[
        OffTargetStateTypedDict,
        CoolTargetStateTypedDict,
        HeatTargetStateTypedDict,
        AutoTargetStateTypedDict,
    ],
)


PermanentHoldTargetState = Annotated[
    Union[
        Annotated[CoolTargetState, Tag("COOL")],
        Annotated[HeatTargetState, Tag("HEAT")],
        Annotated[AutoTargetState, Tag("AUTO")],
        Annotated[OffTargetState, Tag("OFF")],
    ],
    Discriminator(lambda m: get_discriminator(m, "mode", "mode")),
]
