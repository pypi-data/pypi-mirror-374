"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .capability import Capability, CapabilityTypedDict
from enode.types import BaseModel
import pydantic
from typing import Any
from typing_extensions import Annotated, TypedDict


class ChargerCapabilitiesTypedDict(TypedDict):
    r"""A collection of descriptors that describe the capabilities of this specific charger"""

    information: CapabilityTypedDict
    charge_state: Any
    start_charging: CapabilityTypedDict
    stop_charging: CapabilityTypedDict
    set_max_current: CapabilityTypedDict


class ChargerCapabilities(BaseModel):
    r"""A collection of descriptors that describe the capabilities of this specific charger"""

    information: Capability

    charge_state: Annotated[Any, pydantic.Field(alias="chargeState")]

    start_charging: Annotated[Capability, pydantic.Field(alias="startCharging")]

    stop_charging: Annotated[Capability, pydantic.Field(alias="stopCharging")]

    set_max_current: Annotated[Capability, pydantic.Field(alias="setMaxCurrent")]
