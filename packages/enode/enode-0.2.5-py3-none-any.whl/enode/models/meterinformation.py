"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from datetime import datetime
from enode.types import BaseModel
import pydantic
from typing_extensions import Annotated, TypedDict


class MeterInformationTypedDict(TypedDict):
    r"""Descriptive information about the meter"""

    brand: str
    r"""A formatted and properly cased OEM brand name, suitable for reading by humans. May contain special characters."""
    model: str
    r"""Meter model"""
    site_name: str
    r"""Name of the site, as set by the user on the device/vendor. If no user-specified name is available, we construct a fallback name using the vendor/device/model names."""
    installation_date: datetime
    r"""Meter installation date"""


class MeterInformation(BaseModel):
    r"""Descriptive information about the meter"""

    brand: str
    r"""A formatted and properly cased OEM brand name, suitable for reading by humans. May contain special characters."""

    model: str
    r"""Meter model"""

    site_name: Annotated[str, pydantic.Field(alias="siteName")]
    r"""Name of the site, as set by the user on the device/vendor. If no user-specified name is available, we construct a fallback name using the vendor/device/model names."""

    installation_date: Annotated[datetime, pydantic.Field(alias="installationDate")]
    r"""Meter installation date"""
