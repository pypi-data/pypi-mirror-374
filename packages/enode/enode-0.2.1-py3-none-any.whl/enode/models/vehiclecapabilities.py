"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .capability import Capability, CapabilityTypedDict
from enode.types import BaseModel
import pydantic
from typing_extensions import Annotated, TypedDict


class VehicleCapabilitiesTypedDict(TypedDict):
    r"""A collection of descriptors that describe the capabilities of this specific vehicle"""

    information: CapabilityTypedDict
    charge_state: CapabilityTypedDict
    location: CapabilityTypedDict
    odometer: CapabilityTypedDict
    set_max_current: CapabilityTypedDict
    start_charging: CapabilityTypedDict
    stop_charging: CapabilityTypedDict
    smart_charging: CapabilityTypedDict


class VehicleCapabilities(BaseModel):
    r"""A collection of descriptors that describe the capabilities of this specific vehicle"""

    information: Capability

    charge_state: Annotated[Capability, pydantic.Field(alias="chargeState")]

    location: Capability

    odometer: Capability

    set_max_current: Annotated[Capability, pydantic.Field(alias="setMaxCurrent")]

    start_charging: Annotated[Capability, pydantic.Field(alias="startCharging")]

    stop_charging: Annotated[Capability, pydantic.Field(alias="stopCharging")]

    smart_charging: Annotated[Capability, pydantic.Field(alias="smartCharging")]
