"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .scopes import Scopes
from enode.types import BaseModel
from enum import Enum
import pydantic
from typing import List, Union
from typing_extensions import Annotated, TypeAliasType, TypedDict


class VendorEnum6(str, Enum):
    ACURA = "ACURA"
    AUDI = "AUDI"
    BMW = "BMW"
    HONDA = "HONDA"
    HYUNDAI = "HYUNDAI"
    JAGUAR = "JAGUAR"
    LANDROVER = "LANDROVER"
    KIA = "KIA"
    MERCEDES = "MERCEDES"
    MINI = "MINI"
    NISSAN = "NISSAN"
    PEUGEOT = "PEUGEOT"
    PORSCHE = "PORSCHE"
    RENAULT = "RENAULT"
    SEAT = "SEAT"
    SKODA = "SKODA"
    TESLA = "TESLA"
    VOLKSWAGEN = "VOLKSWAGEN"
    VOLVO = "VOLVO"
    FORD = "FORD"
    OPEL = "OPEL"
    DS = "DS"
    TOYOTA = "TOYOTA"
    LEXUS = "LEXUS"
    CITROEN = "CITROEN"
    CUPRA = "CUPRA"
    VAUXHALL = "VAUXHALL"
    FIAT = "FIAT"
    RIVIAN = "RIVIAN"
    NIO = "NIO"
    CHEVROLET = "CHEVROLET"
    GMC = "GMC"
    CADILLAC = "CADILLAC"
    XPENG = "XPENG"
    POLESTAR = "POLESTAR"
    SUBARU = "SUBARU"
    JEEP = "JEEP"
    MAZDA = "MAZDA"
    MG = "MG"
    CHRYSLER = "CHRYSLER"
    DODGE = "DODGE"
    RAM = "RAM"
    ALFAROMEO = "ALFAROMEO"
    LANCIA = "LANCIA"
    LUCID = "LUCID"
    BYD = "BYD"
    DACIA = "DACIA"
    ALPINE = "ALPINE"


class VendorEnum5(str, Enum):
    ENPHASE = "ENPHASE"
    GIVENERGY = "GIVENERGY"
    HUAWEI = "HUAWEI"
    TESLA = "TESLA"
    SMA = "SMA"
    SOLAREDGE = "SOLAREDGE"
    FOXESS = "FOXESS"
    SOLAX = "SOLAX"
    SOLIS = "SOLIS"


class VendorEnum4(str, Enum):
    AFORE = "AFORE"
    APSYSTEMS = "APSYSTEMS"
    CSI_SOLAR = "CSISolar"
    DEYE = "Deye"
    ENPHASE = "ENPHASE"
    FOXESS = "FOXESS"
    FRONIUS = "FRONIUS"
    GIVENERGY = "GIVENERGY"
    GOODWE = "GOODWE"
    GROWATT = "GROWATT"
    HOYMILES = "Hoymiles"
    HUAWEI = "HUAWEI"
    INVT = "INVT"
    SMA = "SMA"
    SOFAR = "SOFAR"
    SOLAREDGE = "SOLAREDGE"
    SOLARK = "SOLARK"
    SOLAX = "SOLAX"
    SOLIS = "SOLIS"
    SOLPLANET = "SOLPLANET"
    SUNGROW = "SUNGROW"
    SUNSYNK = "SUNSYNK"
    TESLA = "TESLA"
    TSUN = "TSUN"


class VendorEnum3(str, Enum):
    TADO = "TADO"
    MILL = "MILL"
    ADAX = "ADAX"
    ECOBEE = "ECOBEE"
    SENSIBO = "SENSIBO"
    HONEYWELL = "HONEYWELL"
    RESIDEO = "RESIDEO"
    MITSUBISHI = "MITSUBISHI"
    MICROMATIC = "MICROMATIC"
    NIBE = "NIBE"
    PANASONIC = "PANASONIC"
    TOSHIBA = "TOSHIBA"
    DAIKIN = "DAIKIN"
    NEST = "NEST"
    FUJITSU = "FUJITSU"
    BOSCH = "BOSCH"
    NETATMO = "NETATMO"


class VendorEnum2(str, Enum):
    ZAPTEC = "ZAPTEC"
    EASEE = "EASEE"
    WALLBOX = "WALLBOX"
    EO = "EO"
    CHARGEAMPS = "CHARGEAMPS"
    EVBOX = "EVBOX"
    GOE = "GOE"
    CHARGEPOINT = "CHARGEPOINT"
    ENELX = "ENELX"
    TESLA = "TESLA"
    OHME = "OHME"
    GARO = "GARO"
    SCHNEIDER = "SCHNEIDER"
    PODPOINT = "PODPOINT"
    KEBA = "KEBA"
    HYPERVOLT = "HYPERVOLT"
    MYENERGI = "MYENERGI"
    HEIDELBERG = "HEIDELBERG"


class VendorEnum1(str, Enum):
    TESLA = "TESLA"
    ENPHASE = "ENPHASE"
    GIVENERGY = "GIVENERGY"
    HUAWEI = "HUAWEI"
    SOLAREDGE = "SOLAREDGE"
    SMA = "SMA"
    FOXESS = "FOXESS"
    SOLAX = "SOLAX"
    SOLIS = "SOLIS"


IntegrationVendorUnionTypedDict = TypeAliasType(
    "IntegrationVendorUnionTypedDict",
    Union[VendorEnum1, VendorEnum2, VendorEnum3, VendorEnum4, VendorEnum5, VendorEnum6],
)


IntegrationVendorUnion = TypeAliasType(
    "IntegrationVendorUnion",
    Union[VendorEnum1, VendorEnum2, VendorEnum3, VendorEnum4, VendorEnum5, VendorEnum6],
)


class AssetType(str, Enum):
    VEHICLE = "vehicle"
    CHARGER = "charger"
    HVAC = "hvac"
    INVERTER = "inverter"
    BATTERY = "battery"
    METER = "meter"


class IntegrationStatus(str, Enum):
    r"""Ready-state of the Vendor. Currently always `READY`."""

    READY = "READY"
    ELEVATED_ERROR_RATE = "ELEVATED_ERROR_RATE"
    OUTAGE = "OUTAGE"


class IntegrationLinkingStatus(str, Enum):
    r"""Ready-state for linking with the Vendor.

    * `READY`: The Vendor is ready to be linked with.
    * `ELEVATED_ERROR_RATE`: Multiple attempts may be needed to link successfully. We are showing a warning in Link UI.
    * `OUTAGE`: The Vendor is currently not available for linking. We will show an error in Link UI and not let the user attempt to link with the Vendor.
    """

    READY = "READY"
    ELEVATED_ERROR_RATE = "ELEVATED_ERROR_RATE"
    OUTAGE = "OUTAGE"


class IntegrationTypedDict(TypedDict):
    vendor: IntegrationVendorUnionTypedDict
    display_name: str
    r"""A formatted and properly cased OEM brand name, suitable for reading by humans. May contain special characters."""
    asset_types: List[AssetType]
    scopes: List[Scopes]
    status: IntegrationStatus
    r"""Ready-state of the Vendor. Currently always `READY`."""
    portal_name: str
    r"""The name of the first party service or app that the user normally logs into."""
    linking_status: IntegrationLinkingStatus
    r"""Ready-state for linking with the Vendor.

    * `READY`: The Vendor is ready to be linked with.
    * `ELEVATED_ERROR_RATE`: Multiple attempts may be needed to link successfully. We are showing a warning in Link UI.
    * `OUTAGE`: The Vendor is currently not available for linking. We will show an error in Link UI and not let the user attempt to link with the Vendor.
    """


class Integration(BaseModel):
    vendor: IntegrationVendorUnion

    display_name: Annotated[str, pydantic.Field(alias="displayName")]
    r"""A formatted and properly cased OEM brand name, suitable for reading by humans. May contain special characters."""

    asset_types: Annotated[List[AssetType], pydantic.Field(alias="assetTypes")]

    scopes: List[Scopes]

    status: IntegrationStatus
    r"""Ready-state of the Vendor. Currently always `READY`."""

    portal_name: Annotated[str, pydantic.Field(alias="portalName")]
    r"""The name of the first party service or app that the user normally logs into."""

    linking_status: Annotated[
        IntegrationLinkingStatus, pydantic.Field(alias="linkingStatus")
    ]
    r"""Ready-state for linking with the Vendor.

    * `READY`: The Vendor is ready to be linked with.
    * `ELEVATED_ERROR_RATE`: Multiple attempts may be needed to link successfully. We are showing a warning in Link UI.
    * `OUTAGE`: The Vendor is currently not available for linking. We will show an error in Link UI and not let the user attempt to link with the Vendor.
    """
