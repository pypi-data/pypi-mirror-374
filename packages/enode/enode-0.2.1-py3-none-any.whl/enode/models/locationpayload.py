"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enode.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class LocationPayloadTypedDict(TypedDict):
    name: str
    r"""User-supplied name for the Location"""
    latitude: float
    r"""Latitude in degrees"""
    longitude: float
    r"""Longitude in degrees"""
    timezone_name: NotRequired[str]
    r"""An IANA TZ database timezone name. This value will be used to convert rules and deadlines for tariffs, smart charging, and schedules into local time. Defaults to `UTC`."""


class LocationPayload(BaseModel):
    name: str
    r"""User-supplied name for the Location"""

    latitude: float
    r"""Latitude in degrees"""

    longitude: float
    r"""Longitude in degrees"""

    timezone_name: Annotated[Optional[str], pydantic.Field(alias="timezoneName")] = (
        "UTC"
    )
    r"""An IANA TZ database timezone name. This value will be used to convert rules and deadlines for tariffs, smart charging, and schedules into local time. Defaults to `UTC`."""
