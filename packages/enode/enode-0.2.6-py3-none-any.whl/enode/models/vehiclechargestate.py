"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .vehiclepowerdeliverystate import VehiclePowerDeliveryState
from datetime import datetime
from enode.types import BaseModel, Nullable, OptionalNullable, UNSET, UNSET_SENTINEL
import pydantic
from pydantic import model_serializer
from typing_extensions import Annotated, NotRequired, TypedDict


class VehicleChargeStateTypedDict(TypedDict):
    r"""Latest information about the electric or hybrid battery. `null` values indicate we are unable to determine a value for the field based on the information coming from the vendor."""

    battery_level: Nullable[float]
    r"""Remaining battery in percent"""
    range: Nullable[float]
    r"""Estimated remaining kilometers"""
    is_plugged_in: Nullable[bool]
    r"""Indicates whether the vehicle is connected to a charging box (regardless of whether it is actually charging)"""
    is_charging: Nullable[bool]
    r"""Indicates whether the vehicle is currently receiving power from the charger and actively charging its battery."""
    is_fully_charged: Nullable[bool]
    r"""Indicates whether the vehicle is fully charged. 'Fully charged' may be a `batteryLevel` of less than 100 if a `chargeLimit` has been configured in the vehicle."""
    battery_capacity: Nullable[float]
    r"""Vehicle's usable battery capacity in kWh."""
    charge_limit: Nullable[float]
    r"""Charge limit, as a percent of `batteryCapacity`.

    When `null`, the vendor did not report a charge limit when we last received data from them. We recommend assuming the limit is 100%.
    """
    charge_rate: Nullable[float]
    r"""The current charge rate in kW.

    This property is only available when the vehicle is charging, and is `null` any other time.
    """
    charge_time_remaining: Nullable[float]
    r"""Estimated time until the current charging intent is completed, in minutes.

    This property is only available when the vehicle is charging, and is `null` any other time.
    """
    last_updated: Nullable[datetime]
    r"""Time of last received charge state update"""
    max_current: Nullable[float]
    r"""The maximum current that the vehicle can draw from the charger, in amps."""
    power_delivery_state: VehiclePowerDeliveryState
    r"""The current state of power delivery between the vehicle and charger.

    * `UNKNOWN`: The state of power delivery is currently unknown.
    * `UNPLUGGED`: The vehicle is not connected to the charger.
    * `PLUGGED_IN:INITIALIZING`: The charging station is preparing to deliver power to the vehicle. It is expected for this state to shortly transition into PLUGGED_IN:CHARGING.
    * `PLUGGED_IN:CHARGING`: The vehicle is actively receiving power from the charger, causing the battery level to increase.
    * `PLUGGED_IN:COMPLETE`: The charging process has finished and the vehicle's battery has reached the target charge limit.
    * `PLUGGED_IN:STOPPED`: The charging process has been intentionally stopped by either the vehicle or the charger. The vehicle is still plugged in and waiting for the charging process to resume.
    * `PLUGGED_IN:NO_POWER`: The vehicle attempted to initialize charging, however no external power was available. It is not possible to transition into a charging state with a remote command until there is some user intervention to resolve the issue.
    * `PLUGGED_IN:FAULT`: A malfunction in the charging process is preventing power from being delivered. Possible causes include a charging cable not being properly locked, extreme temperatures, or malfunctions in either the charging station or the vehicle's internal system. It is not possible to transition into a charging state with a remote command until there is some user intervention to resolve the issue.
    * `PLUGGED_IN:DISCHARGING`: The vehicle is actively discharging by giving power to the home/grid, causing the battery level to decrease.
    """
    plugged_in_charger_id: NotRequired[Nullable[str]]
    r"""ID of the charger currently plugged into the vehicle. By default, this attribute will be `null` and will only be populated if:
    * The charger and the vehicle are linked to the same Enode `userId`.
    * AND Enode has determined that the vehicle and charger are **currently** plugged into each other.
    """


class VehicleChargeState(BaseModel):
    r"""Latest information about the electric or hybrid battery. `null` values indicate we are unable to determine a value for the field based on the information coming from the vendor."""

    battery_level: Annotated[Nullable[float], pydantic.Field(alias="batteryLevel")]
    r"""Remaining battery in percent"""

    range: Nullable[float]
    r"""Estimated remaining kilometers"""

    is_plugged_in: Annotated[Nullable[bool], pydantic.Field(alias="isPluggedIn")]
    r"""Indicates whether the vehicle is connected to a charging box (regardless of whether it is actually charging)"""

    is_charging: Annotated[Nullable[bool], pydantic.Field(alias="isCharging")]
    r"""Indicates whether the vehicle is currently receiving power from the charger and actively charging its battery."""

    is_fully_charged: Annotated[Nullable[bool], pydantic.Field(alias="isFullyCharged")]
    r"""Indicates whether the vehicle is fully charged. 'Fully charged' may be a `batteryLevel` of less than 100 if a `chargeLimit` has been configured in the vehicle."""

    battery_capacity: Annotated[
        Nullable[float], pydantic.Field(alias="batteryCapacity")
    ]
    r"""Vehicle's usable battery capacity in kWh."""

    charge_limit: Annotated[Nullable[float], pydantic.Field(alias="chargeLimit")]
    r"""Charge limit, as a percent of `batteryCapacity`.

    When `null`, the vendor did not report a charge limit when we last received data from them. We recommend assuming the limit is 100%.
    """

    charge_rate: Annotated[Nullable[float], pydantic.Field(alias="chargeRate")]
    r"""The current charge rate in kW.

    This property is only available when the vehicle is charging, and is `null` any other time.
    """

    charge_time_remaining: Annotated[
        Nullable[float], pydantic.Field(alias="chargeTimeRemaining")
    ]
    r"""Estimated time until the current charging intent is completed, in minutes.

    This property is only available when the vehicle is charging, and is `null` any other time.
    """

    last_updated: Annotated[Nullable[datetime], pydantic.Field(alias="lastUpdated")]
    r"""Time of last received charge state update"""

    max_current: Annotated[Nullable[float], pydantic.Field(alias="maxCurrent")]
    r"""The maximum current that the vehicle can draw from the charger, in amps."""

    power_delivery_state: Annotated[
        VehiclePowerDeliveryState, pydantic.Field(alias="powerDeliveryState")
    ]
    r"""The current state of power delivery between the vehicle and charger.

    * `UNKNOWN`: The state of power delivery is currently unknown.
    * `UNPLUGGED`: The vehicle is not connected to the charger.
    * `PLUGGED_IN:INITIALIZING`: The charging station is preparing to deliver power to the vehicle. It is expected for this state to shortly transition into PLUGGED_IN:CHARGING.
    * `PLUGGED_IN:CHARGING`: The vehicle is actively receiving power from the charger, causing the battery level to increase.
    * `PLUGGED_IN:COMPLETE`: The charging process has finished and the vehicle's battery has reached the target charge limit.
    * `PLUGGED_IN:STOPPED`: The charging process has been intentionally stopped by either the vehicle or the charger. The vehicle is still plugged in and waiting for the charging process to resume.
    * `PLUGGED_IN:NO_POWER`: The vehicle attempted to initialize charging, however no external power was available. It is not possible to transition into a charging state with a remote command until there is some user intervention to resolve the issue.
    * `PLUGGED_IN:FAULT`: A malfunction in the charging process is preventing power from being delivered. Possible causes include a charging cable not being properly locked, extreme temperatures, or malfunctions in either the charging station or the vehicle's internal system. It is not possible to transition into a charging state with a remote command until there is some user intervention to resolve the issue.
    * `PLUGGED_IN:DISCHARGING`: The vehicle is actively discharging by giving power to the home/grid, causing the battery level to decrease.
    """

    plugged_in_charger_id: Annotated[
        OptionalNullable[str], pydantic.Field(alias="pluggedInChargerId")
    ] = UNSET
    r"""ID of the charger currently plugged into the vehicle. By default, this attribute will be `null` and will only be populated if:
    * The charger and the vehicle are linked to the same Enode `userId`.
    * AND Enode has determined that the vehicle and charger are **currently** plugged into each other.
    """

    @model_serializer(mode="wrap")
    def serialize_model(self, handler):
        optional_fields = ["pluggedInChargerId"]
        nullable_fields = [
            "batteryLevel",
            "range",
            "isPluggedIn",
            "isCharging",
            "isFullyCharged",
            "batteryCapacity",
            "chargeLimit",
            "chargeRate",
            "chargeTimeRemaining",
            "lastUpdated",
            "maxCurrent",
            "pluggedInChargerId",
        ]
        null_default_fields = []

        serialized = handler(self)

        m = {}

        for n, f in type(self).model_fields.items():
            k = f.alias or n
            val = serialized.get(k)
            serialized.pop(k, None)

            optional_nullable = k in optional_fields and k in nullable_fields
            is_set = (
                self.__pydantic_fields_set__.intersection({n})
                or k in null_default_fields
            )  # pylint: disable=no-member

            if val is not None and val != UNSET_SENTINEL:
                m[k] = val
            elif val != UNSET_SENTINEL and (
                not k in optional_fields or (optional_nullable and is_set)
            ):
                m[k] = val

        return m
