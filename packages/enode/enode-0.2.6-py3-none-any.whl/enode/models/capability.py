"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enode.types import BaseModel
import pydantic
from typing import List
from typing_extensions import Annotated, TypedDict


class CapabilityTypedDict(TypedDict):
    r"""Supports EXPORT_FOCUS operation mode."""

    is_capable: bool
    r"""The entity is fully capable of providing this data or functionality. If false, support is partial or missing."""
    intervention_ids: List[str]
    r"""IDs of interventions the user can make to alter the availability of this capability. Please refer to [the interventions guide](/docs/interventions#accessing-interventions-via-our-api) for more information."""


class Capability(BaseModel):
    r"""Supports EXPORT_FOCUS operation mode."""

    is_capable: Annotated[bool, pydantic.Field(alias="isCapable")]
    r"""The entity is fully capable of providing this data or functionality. If false, support is partial or missing."""

    intervention_ids: Annotated[List[str], pydantic.Field(alias="interventionIds")]
    r"""IDs of interventions the user can make to alter the availability of this capability. Please refer to [the interventions guide](/docs/interventions#accessing-interventions-via-our-api) for more information."""
