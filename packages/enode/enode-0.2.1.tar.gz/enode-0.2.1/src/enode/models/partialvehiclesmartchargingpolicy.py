"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enode.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class PartialVehicleSmartChargingPolicyTypedDict(TypedDict):
    is_enabled: NotRequired[bool]
    r"""When enabled, this vehicle's charging status may be controlled by [Smart Charging](/docs/smart-charging/introduction)"""
    deadline: NotRequired[str]
    r"""The hour-minute deadline for fully charging the vehicle. Smart charging does not work without setting a deadline. If a timezone is set on the location at which the smart charging occurs, the deadline is interpreted in that timezone, otherwise UTC is used."""
    minimum_charge_limit: NotRequired[float]
    r"""Proceed to charge promptly, disregarding energy prices, until the vehicle achieves this preset minimum limit. Please note that this limit cannot exceed the vehicle's maximum charge limit. The default setting is zero. The unit of measure is percentage."""


class PartialVehicleSmartChargingPolicy(BaseModel):
    is_enabled: Annotated[Optional[bool], pydantic.Field(alias="isEnabled")] = False
    r"""When enabled, this vehicle's charging status may be controlled by [Smart Charging](/docs/smart-charging/introduction)"""

    deadline: Optional[str] = None
    r"""The hour-minute deadline for fully charging the vehicle. Smart charging does not work without setting a deadline. If a timezone is set on the location at which the smart charging occurs, the deadline is interpreted in that timezone, otherwise UTC is used."""

    minimum_charge_limit: Annotated[
        Optional[float], pydantic.Field(alias="minimumChargeLimit")
    ] = 0
    r"""Proceed to charge promptly, disregarding energy prices, until the vehicle achieves this preset minimum limit. Please note that this limit cannot exceed the vehicle's maximum charge limit. The default setting is zero. The unit of measure is percentage."""
