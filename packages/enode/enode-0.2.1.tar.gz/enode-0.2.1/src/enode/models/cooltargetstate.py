"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enode.types import BaseModel
from enum import Enum
import pydantic
from typing_extensions import Annotated, TypedDict


class CoolTargetStateMode(str, Enum):
    COOL = "COOL"


class CoolTargetStateHoldType(str, Enum):
    PERMANENT = "PERMANENT"


class CoolTargetStateTypedDict(TypedDict):
    r"""Target mode for an HVAC unit"""

    cool_setpoint: float
    mode: CoolTargetStateMode
    hold_type: CoolTargetStateHoldType


class CoolTargetState(BaseModel):
    r"""Target mode for an HVAC unit"""

    cool_setpoint: Annotated[float, pydantic.Field(alias="coolSetpoint")]

    mode: CoolTargetStateMode

    hold_type: Annotated[CoolTargetStateHoldType, pydantic.Field(alias="holdType")]
