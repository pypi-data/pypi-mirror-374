"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .autopermanenthold import AutoPermanentHold, AutoPermanentHoldTypedDict
from .coolpermanenthold import CoolPermanentHold, CoolPermanentHoldTypedDict
from .heatpermanenthold import HeatPermanentHold, HeatPermanentHoldTypedDict
from .offpermanenthold import OffPermanentHold, OffPermanentHoldTypedDict
from enode.utils import get_discriminator
from pydantic import Discriminator, Tag
from typing import Union
from typing_extensions import Annotated, TypeAliasType


HVACSetPermanentHoldPayloadTypedDict = TypeAliasType(
    "HVACSetPermanentHoldPayloadTypedDict",
    Union[
        OffPermanentHoldTypedDict,
        CoolPermanentHoldTypedDict,
        HeatPermanentHoldTypedDict,
        AutoPermanentHoldTypedDict,
    ],
)


HVACSetPermanentHoldPayload = Annotated[
    Union[
        Annotated[CoolPermanentHold, Tag("COOL")],
        Annotated[HeatPermanentHold, Tag("HEAT")],
        Annotated[AutoPermanentHold, Tag("AUTO")],
        Annotated[OffPermanentHold, Tag("OFF")],
    ],
    Discriminator(lambda m: get_discriminator(m, "mode", "mode")),
]
