"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .invertervendor import InverterVendor
from enode.types import BaseModel
from enum import Enum
import pydantic
from typing_extensions import Annotated, TypedDict


class InverterHealthStatus(str, Enum):
    r"""Ready-state of the Vendor. Currently always `READY`."""

    READY = "READY"
    ELEVATED_ERROR_RATE = "ELEVATED_ERROR_RATE"
    OUTAGE = "OUTAGE"


class InverterHealthLinkingStatus(str, Enum):
    r"""Ready-state for linking with the Vendor.

    * `READY`: The Vendor is ready to be linked with.
    * `ELEVATED_ERROR_RATE`: Multiple attempts may be needed to link successfully. We are showing a warning in Link UI.
    * `OUTAGE`: The Vendor is currently not available for linking. We will show an error in Link UI and not let the user attempt to link with the Vendor.
    """

    READY = "READY"
    ELEVATED_ERROR_RATE = "ELEVATED_ERROR_RATE"
    OUTAGE = "OUTAGE"


class InverterHealthTypedDict(TypedDict):
    vendor: InverterVendor
    r"""Machine-friendly name of the vendor. Use this in API requests."""
    display_name: str
    r"""A formatted and properly cased OEM brand name, suitable for reading by humans. May contain special characters."""
    status: InverterHealthStatus
    r"""Ready-state of the Vendor. Currently always `READY`."""
    portal_name: str
    r"""The name of the first party service or app that the user normally logs into."""
    linking_status: InverterHealthLinkingStatus
    r"""Ready-state for linking with the Vendor.

    * `READY`: The Vendor is ready to be linked with.
    * `ELEVATED_ERROR_RATE`: Multiple attempts may be needed to link successfully. We are showing a warning in Link UI.
    * `OUTAGE`: The Vendor is currently not available for linking. We will show an error in Link UI and not let the user attempt to link with the Vendor.
    """


class InverterHealth(BaseModel):
    vendor: InverterVendor
    r"""Machine-friendly name of the vendor. Use this in API requests."""

    display_name: Annotated[str, pydantic.Field(alias="displayName")]
    r"""A formatted and properly cased OEM brand name, suitable for reading by humans. May contain special characters."""

    status: InverterHealthStatus
    r"""Ready-state of the Vendor. Currently always `READY`."""

    portal_name: Annotated[str, pydantic.Field(alias="portalName")]
    r"""The name of the first party service or app that the user normally logs into."""

    linking_status: Annotated[
        InverterHealthLinkingStatus, pydantic.Field(alias="linkingStatus")
    ]
    r"""Ready-state for linking with the Vendor.

    * `READY`: The Vendor is ready to be linked with.
    * `ELEVATED_ERROR_RATE`: Multiple attempts may be needed to link successfully. We are showing a warning in Link UI.
    * `OUTAGE`: The Vendor is currently not available for linking. We will show an error in Link UI and not let the user attempt to link with the Vendor.
    """
