"""empty message

Revision ID: 8d99f2f348fc
Revises:
Create Date: 2025-08-19 20:42:35.707643

"""

from __future__ import annotations

import traceback
from typing import Text

import sqlalchemy as sa
from alembic import context, op
from edgy import monkay, run_sync
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "8d99f2f348fc"
down_revision = None
branch_labels = None
depends_on = None


def hash_to_identifier(key: str | bytes) -> str:
    from base64 import b32encode
    from hashlib import blake2b

    if isinstance(key, str):
        key = key.encode()
    return f"_{b32encode(blake2b(key, digest_size=16).digest()).decode().rstrip('=')}"


force_fields_nullable: list[tuple[str, str]] = []


def upgrade(engine_name: str = "") -> None:
    # hash_to_identifier adds already an "_"
    fn = globals().get(f"upgrade{hash_to_identifier(engine_name)}")
    if fn is not None:
        fn()


def downgrade(engine_name: str = "") -> None:
    # hash_to_identifier adds already an "_"
    fn = globals().get(f"downgrade{hash_to_identifier(engine_name)}")
    if fn is not None:
        fn()


def upgrade_ZLTGSQOZ566UATSNRB2Y5JTWOA():
    # Migration of:
    # main database
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "auths",
        sa.Column("id", sa.Uuid(), autoincrement=False, nullable=False),
        sa.Column("token", sa.String(length=255), autoincrement=False, nullable=False),
        sa.Column("file", sa.String(length=255), autoincrement=False, nullable=False),
        sa.Column(
            "file_storage",
            sa.String(length=20),
            server_default=sa.text("('')"),
            nullable=True,
        ),
        sa.Column("date", sa.Date(), autoincrement=False, nullable=False),
        sa.Column("binary", sa.LargeBinary(), autoincrement=False, nullable=False),
        sa.Column("image", sa.String(length=255), autoincrement=False, nullable=False),
        sa.Column(
            "image_storage",
            sa.String(length=20),
            server_default=sa.text("('')"),
            nullable=True,
        ),
        sa.Column(
            "password", sa.String(length=255), autoincrement=False, nullable=False
        ),
        sa.Column("url", sa.String(length=255), autoincrement=False, nullable=False),
        sa.Column("float_field", sa.Float(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("image_size", sa.BigInteger(), autoincrement=False, nullable=False),
        sa.Column(
            "image_ok",
            sa.Boolean(),
            server_default=sa.text("(false)"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "image_mname",
            sa.JSON()
            .with_variant(postgresql.JSONB(), "postgres")
            .with_variant(postgresql.JSONB(astext_type=Text()), "postgresql"),
            server_default=sa.text("'{}'"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("file_size", sa.BigInteger(), autoincrement=False, nullable=False),
        sa.Column(
            "file_mname",
            sa.JSON()
            .with_variant(postgresql.JSONB(), "postgres")
            .with_variant(postgresql.JSONB(astext_type=Text()), "postgresql"),
            server_default=sa.text("'{}'"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("token"),
    )
    op.create_table(
        "users",
        sa.Column("id", sa.Uuid(), autoincrement=False, nullable=False),
        sa.Column(
            "is_active",
            sa.Boolean(),
            server_default=sa.text("1"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "first_name", sa.String(length=50), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_name", sa.String(length=50), autoincrement=False, nullable=True
        ),
        sa.Column("email", sa.String(length=255), autoincrement=False, nullable=False),
        sa.Column(
            "password", sa.String(length=100), autoincrement=False, nullable=True
        ),
        sa.Column(
            "status",
            sa.Enum("Active", "Disabled", name="status"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "posts",
        sa.Column("id", sa.Uuid(), autoincrement=False, nullable=False),
        sa.Column(
            "title",
            sa.String(length=256),
            server_default=sa.text("('')"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("user", sa.Uuid(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user"],
            ["users.id"],
            name="fk_posts_users_user",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "profiles",
        sa.Column("user", sa.Uuid(), autoincrement=False, nullable=False),
        sa.Column(
            "id",
            sa.BigInteger().with_variant(sa.Integer(), "sqlite"),
            autoincrement=True,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user"],
            ["users.id"],
            name="fk_profiles_users_user",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "postreactionthrough",
        sa.Column("post", sa.Uuid(), autoincrement=False, nullable=False),
        sa.Column("user", sa.Uuid(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["post"],
            ["posts.id"],
            name="fk_postreactionthrough_posts_post",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["user"],
            ["users.id"],
            name="fk_postreactionthrough_users_user",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("post", "user"),
    )
    op.create_table(
        "userreact_poststhrough",
        sa.Column("user", sa.Uuid(), autoincrement=False, nullable=False),
        sa.Column("post", sa.Uuid(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["post"],
            ["posts.id"],
            name="fk_userreact_poststhrough_posts_post",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["user"],
            ["users.id"],
            name="fk_userreact_poststhrough_users_user",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("user", "post"),
    )
    # ### end Alembic commands ###
    if not context.is_offline_mode():
        try:
            with monkay.instance.registry.with_async_env():
                run_sync(
                    monkay.instance.registry.apply_default_force_nullable_fields(
                        force_fields_nullable=force_fields_nullable,
                        filter_db_name="",
                        model_defaults={},
                    )
                )
        except Exception as exc:
            print("failure migrating defaults", exc)
            traceback.print_exception(exc)


def downgrade_ZLTGSQOZ566UATSNRB2Y5JTWOA():
    # Migration of:
    # main database
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("userreact_poststhrough")
    op.drop_table("postreactionthrough")
    op.drop_table("profiles")
    op.drop_table("posts")
    op.drop_table("users")
    op.drop_table("auths")
    # ### end Alembic commands ###
