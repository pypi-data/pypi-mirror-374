# -*- coding: utf-8 -*-
"""
Django settings for moo project.

Generated by 'django-admin startproject' using Django 4.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

from celery.signals import setup_logging


@setup_logging.connect
def configure_celery_logging(**_kwargs):
    from logging.config import dictConfig

    dictConfig(CELERY_LOGGING)


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

ALLOWED_HOSTS = []


# Application definition
DEFAULT_GIT_REPO_URL = "https://gitlab.com/bubblehouse/django-moo.git"
DEFAULT_PERMISSIONS = (
    "anything",
    "read",
    "write",
    "entrust",
    "grant",
    "execute",
    "move",
    "transmute",
    "derive",
    "develop",
    "administer",
)

ALLOWED_MODULES = (
    "moo.core",
    "hashlib",
    "string",
)

ALLOWED_BUILTINS = ("dir", "getattr", "hasattr", "dict", "list", "set")

# Here are all our supported prepositions
PREPOSITIONS = [
    ["with", "using"],
    ["at", "to"],
    ["in front of"],
    ["in", "inside", "into", "within"],
    ["on top of", "on", "onto", "upon", "above"],
    ["out of", "from inside", "from"],
    ["over"],
    ["through"],
    ["under", "underneath", "beneath", "below"],
    ["around", "round"],
    ["between", "among"],
    ["behind", "past"],
    ["beside", "by", "near", "next to", "along"],
    ["for", "about"],
    # ['is'],
    ["as"],
    ["off", "off of"],
]

OBJECT_SPECIFIER_CHOICES = (("this", "this"), ("any", "any"), ("none", "none"), ("either", "either"))

PREPOSITION_SPECIFIER_CHOICES = (("any", "any"), ("none", "none"))

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django_ace",
    "simplesshkey",
    "django_celery_results",
    "django_celery_beat",
    "moo.core",
    "moo.shell",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "moo.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "moo.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# Cache
# https://docs.djangoproject.com/en/4.2/ref/settings/#caches

CACHES = {
    "default": {
        "BACKEND": "django.core.cache.backends.redis.RedisCache",
        "LOCATION": "redis://localhost:6379",
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "admin/static/"

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "filters": {
        "require_debug_false": {
            "()": "django.utils.log.RequireDebugFalse",
        },
        "require_debug_true": {
            "()": "django.utils.log.RequireDebugTrue",
        },
    },
    "formatters": {
        "simple": {
            "format": "%(asctime)s: %(levelname)s %(message)s",
        },
    },
    "handlers": {
        "console": {
            "level": "DEBUG",
            "class": "logging.StreamHandler",
            "formatter": "simple",
        },
    },
    "loggers": {
        "": {
            "handlers": ["console"],
            "level": "INFO",
            "propagate": False,
        }
    },
}

# Celery configuration
# https://docs.celeryq.dev/en/stable/userguide/configuration.html

CELERY_BROKER_URL = "redis://localhost:6379/0"
CELERY_ACCEPT_CONTENT = ["moojson", "json"]
CELERY_EVENT_SERIALIZER = "moojson"
CELERY_TASK_SERIALIZER = "moojson"
CELERY_RESULT_SERIALIZER = "moojson"
CELERY_RESULT_BACKEND = "django-db"
CELERY_CACHE_BACKEND = "default"
CELERY_BEAT_SCHEDULER = "django_celery_beat.schedulers:DatabaseScheduler"
CELERY_TASK_TIME_LIMIT = 3
CELERY_BROKER_CONNECTION_RETRY_ON_STARTUP = True

CELERY_LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "formatters": {  # Sets up the format of the logging output
        "simple": {
            "format": "%(asctime)s: %(levelname)s %(message)s",
        },
        "celeryTask": {
            "()": "celery.app.log.TaskFormatter",
            "fmt": "%(asctime)s: %(levelname)s %(task_name)s[%(task_id)s]: %(message)s",
        },
        "celeryProcess": {"()": "celery.utils.log.ColorFormatter", "fmt": "%(asctime)s: %(levelname)s %(message)s"},
    },
    "filters": {
        "celeryTask": {
            "()": "moo.logging.CeleryTaskFilter",
        },
        "celeryProcess": {
            "()": "moo.logging.CeleryProcessFilter",
        },
        "notCelery": {
            "()": "moo.logging.NotCeleryFilter",
        },
    },
    "handlers": {
        "console": {
            "level": "DEBUG",
            "class": "logging.StreamHandler",
            "formatter": "simple",
            "filters": ["notCelery"],
        },
        "console2": {
            "level": "DEBUG",
            "class": "logging.StreamHandler",
            "formatter": "celeryTask",
            "filters": ["celeryTask"],
        },
        "console3": {
            "level": "DEBUG",
            "class": "logging.StreamHandler",
            "formatter": "celeryProcess",
            "filters": ["celeryProcess"],
        },
    },
    "loggers": {
        "": {
            "handlers": ["console", "console2", "console3"],
            "level": "INFO",
            "propagate": False,
        }
    },
}
