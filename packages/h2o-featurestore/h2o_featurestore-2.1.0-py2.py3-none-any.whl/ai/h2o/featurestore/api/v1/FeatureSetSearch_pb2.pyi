"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class TextualFilter(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FIELD_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    OPERATOR_FIELD_NUMBER: builtins.int
    field: builtins.str
    @property
    def value(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    operator: builtins.str
    def __init__(
        self,
        *,
        field: builtins.str = ...,
        value: collections.abc.Iterable[builtins.str] | None = ...,
        operator: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["field", b"field", "operator", b"operator", "value", b"value"]) -> None: ...

global___TextualFilter = TextualFilter

@typing_extensions.final
class NumericalFilter(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FIELD_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    OPERATOR_FIELD_NUMBER: builtins.int
    field: builtins.str
    value: builtins.float
    operator: builtins.str
    def __init__(
        self,
        *,
        field: builtins.str = ...,
        value: builtins.float = ...,
        operator: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["field", b"field", "operator", b"operator", "value", b"value"]) -> None: ...

global___NumericalFilter = NumericalFilter

@typing_extensions.final
class BooleanFilter(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FIELD_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    OPERATOR_FIELD_NUMBER: builtins.int
    field: builtins.str
    value: builtins.bool
    operator: builtins.str
    def __init__(
        self,
        *,
        field: builtins.str = ...,
        value: builtins.bool = ...,
        operator: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["field", b"field", "operator", b"operator", "value", b"value"]) -> None: ...

global___BooleanFilter = BooleanFilter

@typing_extensions.final
class Filter(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TEXT_FIELD_NUMBER: builtins.int
    NUMERIC_FIELD_NUMBER: builtins.int
    BOOLEAN_FIELD_NUMBER: builtins.int
    @property
    def text(self) -> global___TextualFilter: ...
    @property
    def numeric(self) -> global___NumericalFilter: ...
    @property
    def boolean(self) -> global___BooleanFilter: ...
    def __init__(
        self,
        *,
        text: global___TextualFilter | None = ...,
        numeric: global___NumericalFilter | None = ...,
        boolean: global___BooleanFilter | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["boolean", b"boolean", "condition", b"condition", "numeric", b"numeric", "text", b"text"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["boolean", b"boolean", "condition", b"condition", "numeric", b"numeric", "text", b"text"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["condition", b"condition"]) -> typing_extensions.Literal["text", "numeric", "boolean"] | None: ...

global___Filter = Filter
