# coding: utf-8

"""
Trading API

API for automated trading and exchange interface. This API is used to trade on the exchange and manage bots, API keys, orders, and more.

The version of the OpenAPI document: 1.0.0
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations

import json
from enum import Enum

from typing_extensions import Self


class Exchange(str, Enum):
    """
    All exchanges used in the crypticorn ecosystem. Refer to the APIs for support for a specific usecase (data, trading, etc.).
    """

    """
    allowed enum values
    """
    KUCOIN = "kucoin"
    BINGX = "bingx"
    BINANCE = "binance"
    BYBIT = "bybit"
    HYPERLIQUID = "hyperliquid"
    BITGET = "bitget"
    GATEIO = "gateio"
    BITSTAMP = "bitstamp"

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of Exchange from a JSON string"""
        return cls(json.loads(json_str))
