{"title":"aligner.Aligner","markdown":{"headingText":"aligner.Aligner","headingAttr":{"id":"brdr.aligner.Aligner","classes":[],"keyvalue":[]},"containsRefs":false,"markdown":"\n```python\naligner.Aligner(\n    self,\n    *,\n    feedback=None,\n    relevant_distance=1,\n    threshold_overlap_percentage=50,\n    od_strategy=OpenbaarDomeinStrategy.SNAP_SINGLE_SIDE,\n    crs='EPSG:31370',\n)\n```\n\nThis class is used to compare the thematic data with the reference data.\nThe reference data can be loaded in different ways, for example by using the GRB data.\nThe thematic data can be loaded by using a geojson file.\nThe class can be used to compare the thematic data with the reference data.\n\n## Methods\n\n| Name | Description |\n| --- | --- |\n| [add_multi_polygons_from_geom_to_array](#brdr.aligner.Aligner.add_multi_polygons_from_geom_to_array) | Append valid polygons and multipolygons extracted from a given geometry to an |\n| [get_formula](#brdr.aligner.Aligner.get_formula) | Calculates formula-related information based on the input geometry. |\n| [get_reference_data_dict_grb_actual](#brdr.aligner.Aligner.get_reference_data_dict_grb_actual) | Gets a dict of the reference data: |\n| [partition](#brdr.aligner.Aligner.partition) | Filters a computed grid of partitions (generated by `_grid_bounds`) based on |\n| [process_dict_thematic](#brdr.aligner.Aligner.process_dict_thematic) | Aligns a thematic dictionary of geometries to the reference layer based on |\n| [process_geometry](#brdr.aligner.Aligner.process_geometry) | method to align a geometry to the reference layer |\n| [process_series](#brdr.aligner.Aligner.process_series) | Calculates percentage differences for thematic data based on a series of relevant |\n\n### add_multi_polygons_from_geom_to_array { #brdr.aligner.Aligner.add_multi_polygons_from_geom_to_array }\n\n```python\naligner.Aligner.add_multi_polygons_from_geom_to_array(geom, array)\n```\n\nAppend valid polygons and multipolygons extracted from a given geometry to an\nexisting array.\n\nArgs:\n    geom (BaseGeometry): The input geometry to process.\n    array (list): An existing list to store valid polygons and multipolygons.\n\nReturns:\n    list: A list containing valid polygons and multipolygons extracted from the\n        input geometry.\n\n### get_formula { #brdr.aligner.Aligner.get_formula }\n\n```python\naligner.Aligner.get_formula(geometry, with_geom=False)\n```\n\nCalculates formula-related information based on the input geometry.\n\nArgs:\n    geometry (shapely.geometry object): The input geometry.\n    with_geom (bool, optional): Whether to include geometry information in the\n        output. Defaults to False.\n\nReturns:\n    dict: A dictionary containing formula-related data:\n\n        -   'full': True if the intersection is the same as the reference\n            geometry, else False.\n        -   'area': Area of the intersection or reference geometry.\n        -   'percentage': Percentage of intersection area relative to the\n            reference geometry.\n        -   'geometry': GeoJSON representation of the intersection (if\n            with_geom is True).\n\n### get_reference_data_dict_grb_actual { #brdr.aligner.Aligner.get_reference_data_dict_grb_actual }\n\n```python\naligner.Aligner.get_reference_data_dict_grb_actual(\n    grb_type=GRBType.ADP,\n    partition=0,\n)\n```\n\nGets a dict of the reference data:\nadministrative plots (adp), buildings (gbg) or artwork (knw) from GRB,\ngeographically based around the previously loaded thematic dictionary.\n\n### partition { #brdr.aligner.Aligner.partition }\n\n```python\naligner.Aligner.partition(geom, delta)\n```\n\nFilters a computed grid of partitions (generated by `_grid_bounds`) based on\nintersection with a geometric object (`geom`).\n\nArgs:\n    geom (BaseGeometry): The geometric object to check for intersection\n        with partitions.\n    delta (float): The distance between partitions (same value used in\n        `_grid_bounds`).\n\nReturns:\n    list: A filtered list of Polygon objects representing the partitions\n        overlapping the original geometric object.\n\n### process_dict_thematic { #brdr.aligner.Aligner.process_dict_thematic }\n\n```python\naligner.Aligner.process_dict_thematic(\n    relevant_distance=1,\n    od_strategy=OpenbaarDomeinStrategy.SNAP_SINGLE_SIDE,\n    full_overlap_percentage=50,\n)\n```\n\nAligns a thematic dictionary of geometries to the reference layer based on\nspecified parameters. - method to align a thematic dictionary to the reference\nlayer\n\nArgs:\n    relevant_distance (float, optional): The relevant distance (in meters) for\n        processing. Defaults to 1.\n    od_strategy (int, optional): The strategy for overlap detection.\n        Defaults to 1.\n    full_overlap_percentage (float, optional): The threshold percentage for\n        considering full overlap. Defaults to 50.\n\nReturns:\n    tuple: A tuple containing dictionaries with processed data:\n        - dict_r: Aligned thematic data for each thematic key.\n        - dict_rd: global differences between thematic data and reference data.\n        - dict_rdp: Positive differences.\n        - dict_rdm: Negative differences.\n        - dict_si: relevant intersections.\n        - dict_sd: relevant differences.\n\n### process_geometry { #brdr.aligner.Aligner.process_geometry }\n\n```python\naligner.Aligner.process_geometry(\n    geometry,\n    relevant_distance=1,\n    od_strategy=OpenbaarDomeinStrategy.SNAP_SINGLE_SIDE,\n    full_overlap_percentage=50,\n)\n```\n\nmethod to align a geometry to the reference layer\n\nArgs:\n    geometry (BaseGeometry): The input geometric object.\n    relevant_distance\n    od_strategy\n    full_overlap_percentage (float): The buffer distance (positive or negative).\n\nReturns:\n    tuple[BaseGeometry...] : A tuple containing the resulting geometries:\n\n    *   result (BaseGeometry): The resulting output geometry\n    *   result_diff (BaseGeometry): The resulting difference output geometry\n    *   result_diff_plus (BaseGeometry): The resulting positive difference output\n        geometry\n    *   result_diff_min (BaseGeometry): The resulting negative difference output\n        geometry\n    *   relevant_intersection (BaseGeometry): The relevant_intersection\n    *   relevant_difference (BaseGeometry): The relevant_difference\n\n#### Notes: {.doc-section .doc-section-notes}\n\nExample:\n\n### process_series { #brdr.aligner.Aligner.process_series }\n\n```python\naligner.Aligner.process_series(\n    relevant_distances,\n    od_strategy=OpenbaarDomeinStrategy.SNAP_SINGLE_SIDE,\n    full_overlap_percentage=50,\n)\n```\n\nCalculates percentage differences for thematic data based on a series of relevant\n    distances.\n\nArgs:\n    relevant_distances (list): A list of relevant distances (in meters) to\n        process.\n    od_strategy (int, optional): The strategy for overlap detection.\n        Defaults to 1.\n    full_overlap_percentage (float, optional): The threshold percentage for\n        considering full overlap. Defaults to 50.\n\nReturns:\n    dict: A dictionary containing percentage differences for each thematic key:\n\n        {\n            'thematic_key1': {\n                distance1: percentage1,\n                distance2: percentage2,\n                ...\n            },\n            'thematic_key2': {\n                distance1: percentage1,\n                distance2: percentage2,\n                ...\n            },\n            ...\n        }","srcMarkdownNoYaml":""},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"css":["../reference/_styles-quartodoc.css"],"output-file":"aligner.Aligner.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.7.31","quartodoc":{"package":"brdr","sidebar":"../reference/_sidebar.yml","css":"../reference/_styles-quartodoc.css","sections":[{"title":"Aligner","package":"brdr.aligner","desc":"Aligner class of the brdr package.","contents":["Aligner"]},{"title":"Loaders","package":"brdr.loader","desc":"Loaders to load data","contents":["Loader","DictLoader","GeoJsonLoader","GeoJsonFileLoader","GeoJsonUrlLoader"]},{"title":"GRB","package":"brdr.grb","desc":"GRB specific loaders - grb.GRBActualLoader - grb.GRBFiscalParcelLoader - grb.GRBSpecificDateParcelLoader"}]},"theme":"cosmo"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}