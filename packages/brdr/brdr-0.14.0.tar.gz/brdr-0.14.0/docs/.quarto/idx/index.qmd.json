{"title":"`brdr`","markdown":{"headingText":"`brdr`","containsRefs":false,"markdown":"\na Python library to assist in realigning (multi-)polygons (OGC Simple Features) to reference borders\n\n<!-- badges: start -->\n\n![PyPI - Version](https://img.shields.io/pypi/v/brdr)\n\n[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.11385644.svg)](https://doi.org/10.5281/zenodo.11385644)\n\n<!-- badges: end -->\n\nQuick links:\n\n- [Installation](#installation)\n- [Development](#development)\n- [Issues, questions, comments and contributions](#comments-and-contributions)\n\n## Description\n\n### Intro\n\n`brdr` is a Python package that assists in aligning geometric boundaries to reference boundaries. This is an important\ntask in geographic data management to enhance data quality.\n\n* In the context of geographic data management, it is important to have accurate and consistent boundaries for a variety\n  of applications such as calculating areas, analyzing spatial relationships, and visualizing and querying geographic\n  information.\n* When creating geographic data, it is often more efficient to derive boundaries from existing reference data rather\n  than collecting new data in the field.\n* `brdr` can be used to align boundaries from new data to reference data, ensuring that the boundaries are accurate and\n  consistent.\n\n### Example\n\nThe figure below shows:\n\n* the original thematic geometry (blue),\n* A reference layer (yellow-black).\n* The resulting geometry after alignment with `brdr` (green)\n\n![](figures/example.png)\n\n### Functionalities\n\n`brdr` provides a variety of functionalities in the Aligner-class to assist in aligning boundaries, including:\n\n* Loaders:\n    * aligner.load_thematic_data():Loading thematic data ((Multi-)Polygons) as a dictionary (DictLoader) or geojson (\n      GeoJsonFileLoader,GeoJsonUrlLoader)\n    * aligner.load_reference_data():Loading reference data ((Multi-)Polygons) as a dictionary (DictLoader) or geojson (\n      GeoJsonFileLoader,GeoJsonUrlLoader)\n\n* Processors:\n    * aligner.process(): Align thematic boundaries to reference boundaries with a specific relevant\n      distance or a range of relevant distances\n    * aligner.predictor(): Searches all 'stable' (=predicted) processresults in a range of relevant distances\n    * aligner.get_brdr_formula(): Calculating a descriptive formula of a thematic boundary based on a reference layer\n    * evaluate(): Compares & evaluates input geometries with another version and adds a EVALUATION_FIELD_NAME\n* Exporters:\n    * aligner.get_results_as_geojson(): Returns a collection of geojson-dictionaries with the processresults (resulting\n      geometry, differences,...): This can be used for all processresults or only the 'predicted' results\n    * aligner.get_input_as_geojson(): Returns a geojson-featurecollection from input-dictionaries (thematic or\n      reference)\n    * aligner.save_results(): Exports the resuling geojson-files to a specified path:This can be used for all\n      processresults or only the 'predicted' results\n\nBesides the generic functionalities, a range of Flanders-specific functionalities are provided:\n\n* Loaders:\n    * GRBActualLoader: Loading actual GRB (parcels, buildings)\n    * GRBFiscalParcelLoader: Loading fiscal GRB-parcels of a specific year\n* Processors:\n    * grb.get_geoms_affected_by_grb_change(): get thematic geometries that are possibly affected by GRB-changes during a\n      specific timespan\n    * grb.update_to_actual_grb(): aligns the boundaries of thematic features to the actual GRB-boundaries\n\n### Possible application fields\n\n* Geodata-management:\n    * Implementation of `brdr` in business-processes and tooling\n    * Bulk geodata-alignment\n    * Alignment after reprojection of data\n    * Cleaning data: In a postprocessing-phase, the algorithm executes sliver-cleanup and validity-cleaning on the\n      resulting geometries\n    * ...\n* Data-Analysis: Investigate the pattern in deviation and change between thematic and reference boundaries\n* Update-detection: Investigate the descriptive formula before and after alignment to check for (automatic)\n  alignment of geodata\n* ...\n\n### QGIS-script\n\nAn implementation of `brdr` for QGIS can be found at [GitHub-brdrQ](https://github.com/OnroerendErfgoed/brdrQ/).\nThis QGIS- script provides a User Interface to align thematic data to a reference layer, showing the results in the QGIS\nTable of Contents.\n\n## Installation\n\nYou can install the latest release of `brdr` from\n[GitHub](https://github.com/OnroerendErfgoed/brdr/) or\n[PyPi](https://pypi.org/project/brdr/):\n\n``` python\npip install brdr\n```\n\n## Basic example\n\n``` python\nfrom brdr.aligner import Aligner\nfrom brdr.enums import OpenbaarDomeinStrategy\nfrom brdr.geometry_utils import geom_from_wkt\nfrom brdr.loader import DictLoader\n\n# CREATE AN ALIGNER\naligner = Aligner(\n    crs=\"EPSG:31370\",\n)\n# ADD A THEMATIC POLYGON TO THEMATIC DICTIONARY and LOAD into Aligner\nthematic_dict = {\"theme_id_1\": geom_from_wkt(\"POLYGON ((0 0, 0 9, 5 10, 10 0, 0 0))\")}\nloader = DictLoader(thematic_dict)\naligner.load_thematic_data(loader)\n# ADD A REFERENCE POLYGON TO REFERENCE DICTIONARY and LOAD into Aligner\nreference_dict = {\"ref_id_1\": geom_from_wkt(\"POLYGON ((0 1, 0 10,8 10,10 1,0 1))\")}\nloader = DictLoader(reference_dict)\naligner.load_reference_data(loader)\n# EXECUTE THE ALIGNMENT\nrelevant_distance = 1\nprocess_result = aligner.process(\n    relevant_distance=relevant_distance,\n    od_strategy=OpenbaarDomeinStrategy.SNAP_SINGLE_SIDE,\n    threshold_overlap_percentage=50,\n)\n# PRINT RESULTS IN WKT\nprint(\"result: \" + process_result[\"theme_id_1\"][relevant_distance][\"result\"].wkt)\nprint(\n    \"added area: \"\n    + process_result[\"theme_id_1\"][relevant_distance][\"result_diff_plus\"].wkt\n)\nprint(\n    \"removed area: \"\n    + process_result[\"theme_id_1\"][relevant_distance][\"result_diff_min\"].wkt\n)\n```\n\nThe resulting figure shows:\n\n* the reference polygon (yellow-black)\n* the original geometry (blue)\n* the resulting geometry (green line)\n* the added zone (green squares)\n* the removed zone (red squares)\n  <img src=\"figures/basic_example.png\" width=\"100%\" />\n\nMore examples can be found in [Examples](https://github.com/OnroerendErfgoed/brdr/tree/main/examples)\n\n## Workflow\n\n(see also Basic example)\n\nTo use `brdr`, follow these steps:\n\n* Create a Aligner-class with specific parameters:\n    * relevant_distance (m) (default: 1): Distance-parameter used to decide which parts will be aligned, and which parts\n      remain unchanged.\n    * od_strategy (enum) (default: SNAP_SINGLE_SIDE): Strategy to align geodata that is not covered by reference-data\n    * threshold_overlap_percentage (%)(0-100) (default 50)\n    * crs: The Coordinate Reference System (CRS) (default: EPSG:31370 - Belgian Lambert72)\n* Load thematic data\n* Load reference data\n* Process (align) the thematic data\n* Results are returned:\n    * Resulting geometry\n    * Differences: parts that are 'different' from the original geometry (positive or negative)\n    * Positive differences: parts that are added to the original geometry\n    * Negative differences: parts that are removed form the original geometry\n    * Relevant intersections: relevant intersecting parts of the reference geometries\n    * Relevant differences: relevant differences of the reference geometries\n\n## The `brdr`-algorithm\n\nThe algorithm for alignment is based on 2 main principles:\n\n* Principle of intentionality: Thematic boundaries can consciously or unconsciously deviate from the reference borders.\n  The algorithm should keep notice of that.\n* Selective spatial conservation of shape: The resulting geometry should re-use the shape of the reference borders where\n  aligned is of relevance.\n\nThe figure below shows a schematic overview of the algorithm:\n![](figures/algorithm.png)\n\nThe algorithm can be split into 3 main phases:\n\n* Initialisation:\n    * Deciding which reference polygons are candidate-polygons to re-use its shape.\n      The reference candidate polygons are selected based on spatial intersection with the thematic geometry.\n* Processing:\n    * Process all candidate-reference polygons one-by-one\n    * Calculate relevant zones for each candidate-reference-polygon\n        * relevant intersections: zones that must be present in the final result\n        * relevant differences: zones that must be excluded from the final result\n          ![](figures/relevant_zones.png)\n    * Evaluate each candidate based on their relative zones: which parts must be kept and which parts must be excluded\n      ![](figures/evaluate_candidates.png)\n    * Union all kept parts to recompose a resulting geometry\n* Post-processing:\n    * Validation/correction of differences between the original input geometry and the composed intermediate resulting\n      geometry after processing the algorithm\n    * Technical validation of inner holes and multipolygons that are created by processing the algorithm\n    * Clean-up slivers\n    * Make the resulting geometry valid\n\nRESULT:\n\nA new resulting output geometry, aligned to the reference-polygons\n\n## Development\n\n### pip-compile\n\n```sh\nPIP_COMPILE_ARGS=\"-v --strip-extras --no-header --resolver=backtracking --no-emit-options --no-emit-find-links\"\npip-compile $PIP_COMPILE_ARGS\npip-compile $PIP_COMPILE_ARGS -o requirements-dev.txt --all-extras\n```\n\n### tests\n\n```python\npython - m\npytest - -cov = brdr\ntests / --cov - report\nterm - missing\n```\n\n### Docker\n\nAs an example-usage (proof-of-concept), a Dockerfile is created to set up a GRB-specific webservice that 'predicts' one\nor multiple actual geometries for a input-geometry based on the reference source GRB.\nThis webservice is based on 'brdr'.\n\nThis POC can be found at [brdr-webservice (GRB-actualisator)](<https://github.com/dieuska/brdr-webservice>).\n\n```bat\ndocker build -f Dockerfile . -t grb_webservice\ndocker run --rm -p 80:80 --name grb_webservice grb_webservice\n\n\nexample can be found at: http://localhost:80/docs#/default/actualiser_actualiser_post\n```\n\n## Motivation & citation\n\nA more in-depth description of the algorithm can be found in the following article (in dutch):\n\n- Dieussaert, K., Vanvinckenroye, M., Vermeyen, M., & Van Daele, K. (2024). Grenzen verleggen.\n  Automatische correcties van geografische afbakeningen op verschuivende\n  onderlagen *Onderzoeksrapporten Agentschap Onroerend Erfgoed*,\n    332. <https://doi.org/10.55465/SXCW6218>.\n\n## Comments and contributions\n\nWe would love to hear from you and your experiences with\n`brdr` or its sister project [`brdrQ`](https://github.com/OnroerendErfgoed/brdrQ).\nThe [discussions forum](https://github.com/OnroerendErfgoed/brdr/discussions/) is the place to be when:\n\n- You have any questions on using `brdr` or `brdrQ` or their\n  applicability to your use cases\n- Want to share your experiences with the library\n- Have any suggestions for improvements or feature requests\n\nIf you have discovered a bug in the `brdr` library you can report it here:\n\n<https://github.com/OnroerendErfgoed/brdr/issues>\n\nWe try to keep the list of issues as clean as possible. If\nyou're unsure whether something is a bug, or whether the bug is in `brdr`\nor `brdrQ`, we encourage you to go through the [discussions forum](https://github.com/OnroerendErfgoed/brdr/discussions)\nfirst.\n\n## Acknowledgement\n\nThis software was created by [Athumi](https://athumi.be/en/), the Flemish data utility company,\nand [Flanders Heritage Agency](https://www.onroerenderfgoed.be/flanders-heritage-agency).\n\n![https://athumi.be/en/](figures/athumi_logo-250x84.png)\n![https://www.onroerenderfgoed.be/flanders-heritage-agency](figures/Vlaanderen_is_erfgoed-250x97.png)\n","srcMarkdownNoYaml":""},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"css":["reference/_styles-quartodoc.css"],"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.7.31","quartodoc":{"package":"brdr","sidebar":"reference/_sidebar.yml","css":"reference/_styles-quartodoc.css","sections":[{"title":"Aligner","package":"brdr.aligner","desc":"Aligner class of the brdr package.","contents":["Aligner"]},{"title":"Loaders","package":"brdr.loader","desc":"Loaders to load data","contents":["Loader","DictLoader","GeoJsonLoader","GeoJsonFileLoader","GeoJsonUrlLoader"]},{"title":"GRB","package":"brdr.grb","desc":"GRB specific loaders - grb.GRBActualLoader - grb.GRBFiscalParcelLoader - grb.GRBSpecificDateParcelLoader"}]},"theme":"cosmo"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}