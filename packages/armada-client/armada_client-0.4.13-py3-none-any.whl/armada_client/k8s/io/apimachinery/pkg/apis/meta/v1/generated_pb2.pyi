"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
This file was autogenerated by go-to-protobuf. Do not edit it manually!"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import armada_client.k8s.io.apimachinery.pkg.runtime.generated_pb2
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class APIGroup(google.protobuf.message.Message):
    """APIGroup contains the name, the supported versions, and the preferred version
    of a group.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    VERSIONS_FIELD_NUMBER: builtins.int
    PREFERREDVERSION_FIELD_NUMBER: builtins.int
    SERVERADDRESSBYCLIENTCIDRS_FIELD_NUMBER: builtins.int
    name: builtins.str
    """name is the name of the group."""
    @property
    def versions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___GroupVersionForDiscovery]:
        """versions are the versions supported in this group."""

    @property
    def preferredVersion(self) -> global___GroupVersionForDiscovery:
        """preferredVersion is the version preferred by the API server, which
        probably is the storage version.
        +optional
        """

    @property
    def serverAddressByClientCIDRs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ServerAddressByClientCIDR]:
        """a map of client CIDR to server address that is serving this group.
        This is to help clients reach servers in the most network-efficient way possible.
        Clients can use the appropriate server address as per the CIDR that they match.
        In case of multiple matches, clients should use the longest matching CIDR.
        The server returns only those CIDRs that it thinks that the client can match.
        For example: the master will return an internal IP CIDR only, if the client reaches the server using an internal IP.
        Server looks at X-Forwarded-For header or X-Real-Ip header or request.RemoteAddr (in that order) to get the client IP.
        +optional
        """

    def __init__(
        self,
        *,
        name: builtins.str | None = ...,
        versions: collections.abc.Iterable[global___GroupVersionForDiscovery] | None = ...,
        preferredVersion: global___GroupVersionForDiscovery | None = ...,
        serverAddressByClientCIDRs: collections.abc.Iterable[global___ServerAddressByClientCIDR] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["name", b"name", "preferredVersion", b"preferredVersion"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["name", b"name", "preferredVersion", b"preferredVersion", "serverAddressByClientCIDRs", b"serverAddressByClientCIDRs", "versions", b"versions"]) -> None: ...

global___APIGroup = APIGroup

@typing.final
class APIGroupList(google.protobuf.message.Message):
    """APIGroupList is a list of APIGroup, to allow clients to discover the API at
    /apis.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    GROUPS_FIELD_NUMBER: builtins.int
    @property
    def groups(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___APIGroup]:
        """groups is a list of APIGroup."""

    def __init__(
        self,
        *,
        groups: collections.abc.Iterable[global___APIGroup] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["groups", b"groups"]) -> None: ...

global___APIGroupList = APIGroupList

@typing.final
class APIResource(google.protobuf.message.Message):
    """APIResource specifies the name of a resource and whether it is namespaced."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    SINGULARNAME_FIELD_NUMBER: builtins.int
    NAMESPACED_FIELD_NUMBER: builtins.int
    GROUP_FIELD_NUMBER: builtins.int
    VERSION_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    VERBS_FIELD_NUMBER: builtins.int
    SHORTNAMES_FIELD_NUMBER: builtins.int
    CATEGORIES_FIELD_NUMBER: builtins.int
    STORAGEVERSIONHASH_FIELD_NUMBER: builtins.int
    name: builtins.str
    """name is the plural name of the resource."""
    singularName: builtins.str
    """singularName is the singular name of the resource.  This allows clients to handle plural and singular opaquely.
    The singularName is more correct for reporting status on a single item and both singular and plural are allowed
    from the kubectl CLI interface.
    """
    namespaced: builtins.bool
    """namespaced indicates if a resource is namespaced or not."""
    group: builtins.str
    """group is the preferred group of the resource.  Empty implies the group of the containing resource list.
    For subresources, this may have a different value, for example: Scale".
    """
    version: builtins.str
    """version is the preferred version of the resource.  Empty implies the version of the containing resource list
    For subresources, this may have a different value, for example: v1 (while inside a v1beta1 version of the core resource's group)".
    """
    kind: builtins.str
    """kind is the kind for the resource (e.g. 'Foo' is the kind for a resource 'foo')"""
    storageVersionHash: builtins.str
    """The hash value of the storage version, the version this resource is
    converted to when written to the data store. Value must be treated
    as opaque by clients. Only equality comparison on the value is valid.
    This is an alpha feature and may change or be removed in the future.
    The field is populated by the apiserver only if the
    StorageVersionHash feature gate is enabled.
    This field will remain optional even if it graduates.
    +optional
    """
    @property
    def verbs(self) -> global___Verbs:
        """verbs is a list of supported kube verbs (this includes get, list, watch, create,
        update, patch, delete, deletecollection, and proxy)
        """

    @property
    def shortNames(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """shortNames is a list of suggested short names of the resource."""

    @property
    def categories(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """categories is a list of the grouped resources this resource belongs to (e.g. 'all')"""

    def __init__(
        self,
        *,
        name: builtins.str | None = ...,
        singularName: builtins.str | None = ...,
        namespaced: builtins.bool | None = ...,
        group: builtins.str | None = ...,
        version: builtins.str | None = ...,
        kind: builtins.str | None = ...,
        verbs: global___Verbs | None = ...,
        shortNames: collections.abc.Iterable[builtins.str] | None = ...,
        categories: collections.abc.Iterable[builtins.str] | None = ...,
        storageVersionHash: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["group", b"group", "kind", b"kind", "name", b"name", "namespaced", b"namespaced", "singularName", b"singularName", "storageVersionHash", b"storageVersionHash", "verbs", b"verbs", "version", b"version"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["categories", b"categories", "group", b"group", "kind", b"kind", "name", b"name", "namespaced", b"namespaced", "shortNames", b"shortNames", "singularName", b"singularName", "storageVersionHash", b"storageVersionHash", "verbs", b"verbs", "version", b"version"]) -> None: ...

global___APIResource = APIResource

@typing.final
class APIResourceList(google.protobuf.message.Message):
    """APIResourceList is a list of APIResource, it is used to expose the name of the
    resources supported in a specific group and version, and if the resource
    is namespaced.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    GROUPVERSION_FIELD_NUMBER: builtins.int
    RESOURCES_FIELD_NUMBER: builtins.int
    groupVersion: builtins.str
    """groupVersion is the group and version this APIResourceList is for."""
    @property
    def resources(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___APIResource]:
        """resources contains the name of the resources and if they are namespaced."""

    def __init__(
        self,
        *,
        groupVersion: builtins.str | None = ...,
        resources: collections.abc.Iterable[global___APIResource] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["groupVersion", b"groupVersion"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["groupVersion", b"groupVersion", "resources", b"resources"]) -> None: ...

global___APIResourceList = APIResourceList

@typing.final
class APIVersions(google.protobuf.message.Message):
    """APIVersions lists the versions that are available, to allow clients to
    discover the API at /api, which is the root path of the legacy v1 API.

    +protobuf.options.(gogoproto.goproto_stringer)=false
    +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VERSIONS_FIELD_NUMBER: builtins.int
    SERVERADDRESSBYCLIENTCIDRS_FIELD_NUMBER: builtins.int
    @property
    def versions(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """versions are the api versions that are available."""

    @property
    def serverAddressByClientCIDRs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ServerAddressByClientCIDR]:
        """a map of client CIDR to server address that is serving this group.
        This is to help clients reach servers in the most network-efficient way possible.
        Clients can use the appropriate server address as per the CIDR that they match.
        In case of multiple matches, clients should use the longest matching CIDR.
        The server returns only those CIDRs that it thinks that the client can match.
        For example: the master will return an internal IP CIDR only, if the client reaches the server using an internal IP.
        Server looks at X-Forwarded-For header or X-Real-Ip header or request.RemoteAddr (in that order) to get the client IP.
        """

    def __init__(
        self,
        *,
        versions: collections.abc.Iterable[builtins.str] | None = ...,
        serverAddressByClientCIDRs: collections.abc.Iterable[global___ServerAddressByClientCIDR] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["serverAddressByClientCIDRs", b"serverAddressByClientCIDRs", "versions", b"versions"]) -> None: ...

global___APIVersions = APIVersions

@typing.final
class ApplyOptions(google.protobuf.message.Message):
    """ApplyOptions may be provided when applying an API object.
    FieldManager is required for apply requests.
    ApplyOptions is equivalent to PatchOptions. It is provided as a convenience with documentation
    that speaks specifically to how the options fields relate to apply.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DRYRUN_FIELD_NUMBER: builtins.int
    FORCE_FIELD_NUMBER: builtins.int
    FIELDMANAGER_FIELD_NUMBER: builtins.int
    force: builtins.bool
    """Force is going to "force" Apply requests. It means user will
    re-acquire conflicting fields owned by other people.
    """
    fieldManager: builtins.str
    """fieldManager is a name associated with the actor or entity
    that is making these changes. The value must be less than or
    128 characters long, and only contain printable characters,
    as defined by https://golang.org/pkg/unicode/#IsPrint. This
    field is required.
    """
    @property
    def dryRun(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """When present, indicates that modifications should not be
        persisted. An invalid or unrecognized dryRun directive will
        result in an error response and no further processing of the
        request. Valid values are:
        - All: all dry run stages will be processed
        +optional
        """

    def __init__(
        self,
        *,
        dryRun: collections.abc.Iterable[builtins.str] | None = ...,
        force: builtins.bool | None = ...,
        fieldManager: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["fieldManager", b"fieldManager", "force", b"force"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["dryRun", b"dryRun", "fieldManager", b"fieldManager", "force", b"force"]) -> None: ...

global___ApplyOptions = ApplyOptions

@typing.final
class Condition(google.protobuf.message.Message):
    """Condition contains details for one aspect of the current state of this API Resource.
    ---
    This struct is intended for direct use as an array at the field path .status.conditions.  For example,

    	type FooStatus struct{
    	    // Represents the observations of a foo's current state.
    	    // Known .status.conditions.type are: "Available", "Progressing", and "Degraded"
    	    // +patchMergeKey=type
    	    // +patchStrategy=merge
    	    // +listType=map
    	    // +listMapKey=type
    	    Conditions []metav1.Condition `json:"conditions,omitempty" patchStrategy:"merge" patchMergeKey:"type" protobuf:"bytes,1,rep,name=conditions"`

    	    // other fields
    	}
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TYPE_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    OBSERVEDGENERATION_FIELD_NUMBER: builtins.int
    LASTTRANSITIONTIME_FIELD_NUMBER: builtins.int
    REASON_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    type: builtins.str
    """type of condition in CamelCase or in foo.example.com/CamelCase.
    ---
    Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
    useful (see .node.status.conditions), the ability to deconflict is important.
    The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
    +required
    +kubebuilder:validation:Required
    +kubebuilder:validation:Pattern=`^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$`
    +kubebuilder:validation:MaxLength=316
    """
    status: builtins.str
    """status of the condition, one of True, False, Unknown.
    +required
    +kubebuilder:validation:Required
    +kubebuilder:validation:Enum=True;False;Unknown
    """
    observedGeneration: builtins.int
    """observedGeneration represents the .metadata.generation that the condition was set based upon.
    For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
    with respect to the current state of the instance.
    +optional
    +kubebuilder:validation:Minimum=0
    """
    reason: builtins.str
    """reason contains a programmatic identifier indicating the reason for the condition's last transition.
    Producers of specific condition types may define expected values and meanings for this field,
    and whether the values are considered a guaranteed API.
    The value should be a CamelCase string.
    This field may not be empty.
    +required
    +kubebuilder:validation:Required
    +kubebuilder:validation:MaxLength=1024
    +kubebuilder:validation:MinLength=1
    +kubebuilder:validation:Pattern=`^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$`
    """
    message: builtins.str
    """message is a human readable message indicating details about the transition.
    This may be an empty string.
    +required
    +kubebuilder:validation:Required
    +kubebuilder:validation:MaxLength=32768
    """
    @property
    def lastTransitionTime(self) -> global___Time:
        """lastTransitionTime is the last time the condition transitioned from one status to another.
        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
        +required
        +kubebuilder:validation:Required
        +kubebuilder:validation:Type=string
        +kubebuilder:validation:Format=date-time
        """

    def __init__(
        self,
        *,
        type: builtins.str | None = ...,
        status: builtins.str | None = ...,
        observedGeneration: builtins.int | None = ...,
        lastTransitionTime: global___Time | None = ...,
        reason: builtins.str | None = ...,
        message: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["lastTransitionTime", b"lastTransitionTime", "message", b"message", "observedGeneration", b"observedGeneration", "reason", b"reason", "status", b"status", "type", b"type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["lastTransitionTime", b"lastTransitionTime", "message", b"message", "observedGeneration", b"observedGeneration", "reason", b"reason", "status", b"status", "type", b"type"]) -> None: ...

global___Condition = Condition

@typing.final
class CreateOptions(google.protobuf.message.Message):
    """CreateOptions may be provided when creating an API object."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DRYRUN_FIELD_NUMBER: builtins.int
    FIELDMANAGER_FIELD_NUMBER: builtins.int
    FIELDVALIDATION_FIELD_NUMBER: builtins.int
    fieldManager: builtins.str
    """fieldManager is a name associated with the actor or entity
    that is making these changes. The value must be less than or
    128 characters long, and only contain printable characters,
    as defined by https://golang.org/pkg/unicode/#IsPrint.
    +optional
    """
    fieldValidation: builtins.str
    """fieldValidation instructs the server on how to handle
    objects in the request (POST/PUT/PATCH) containing unknown
    or duplicate fields. Valid values are:
    - Ignore: This will ignore any unknown fields that are silently
    dropped from the object, and will ignore all but the last duplicate
    field that the decoder encounters. This is the default behavior
    prior to v1.23.
    - Warn: This will send a warning via the standard warning response
    header for each unknown field that is dropped from the object, and
    for each duplicate field that is encountered. The request will
    still succeed if there are no other errors, and will only persist
    the last of any duplicate fields. This is the default in v1.23+
    - Strict: This will fail the request with a BadRequest error if
    any unknown fields would be dropped from the object, or if any
    duplicate fields are present. The error returned from the server
    will contain all unknown and duplicate fields encountered.
    +optional
    """
    @property
    def dryRun(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """When present, indicates that modifications should not be
        persisted. An invalid or unrecognized dryRun directive will
        result in an error response and no further processing of the
        request. Valid values are:
        - All: all dry run stages will be processed
        +optional
        """

    def __init__(
        self,
        *,
        dryRun: collections.abc.Iterable[builtins.str] | None = ...,
        fieldManager: builtins.str | None = ...,
        fieldValidation: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["fieldManager", b"fieldManager", "fieldValidation", b"fieldValidation"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["dryRun", b"dryRun", "fieldManager", b"fieldManager", "fieldValidation", b"fieldValidation"]) -> None: ...

global___CreateOptions = CreateOptions

@typing.final
class DeleteOptions(google.protobuf.message.Message):
    """DeleteOptions may be provided when deleting an API object."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    GRACEPERIODSECONDS_FIELD_NUMBER: builtins.int
    PRECONDITIONS_FIELD_NUMBER: builtins.int
    ORPHANDEPENDENTS_FIELD_NUMBER: builtins.int
    PROPAGATIONPOLICY_FIELD_NUMBER: builtins.int
    DRYRUN_FIELD_NUMBER: builtins.int
    gracePeriodSeconds: builtins.int
    """The duration in seconds before the object should be deleted. Value must be non-negative integer.
    The value zero indicates delete immediately. If this value is nil, the default grace period for the
    specified type will be used.
    Defaults to a per object value if not specified. zero means delete immediately.
    +optional
    """
    orphanDependents: builtins.bool
    """Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7.
    Should the dependent objects be orphaned. If true/false, the "orphan"
    finalizer will be added to/removed from the object's finalizers list.
    Either this field or PropagationPolicy may be set, but not both.
    +optional
    """
    propagationPolicy: builtins.str
    """Whether and how garbage collection will be performed.
    Either this field or OrphanDependents may be set, but not both.
    The default policy is decided by the existing finalizer set in the
    metadata.finalizers and the resource-specific default policy.
    Acceptable values are: 'Orphan' - orphan the dependents; 'Background' -
    allow the garbage collector to delete the dependents in the background;
    'Foreground' - a cascading policy that deletes all dependents in the
    foreground.
    +optional
    """
    @property
    def preconditions(self) -> global___Preconditions:
        """Must be fulfilled before a deletion is carried out. If not possible, a 409 Conflict status will be
        returned.
        +k8s:conversion-gen=false
        +optional
        """

    @property
    def dryRun(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """When present, indicates that modifications should not be
        persisted. An invalid or unrecognized dryRun directive will
        result in an error response and no further processing of the
        request. Valid values are:
        - All: all dry run stages will be processed
        +optional
        """

    def __init__(
        self,
        *,
        gracePeriodSeconds: builtins.int | None = ...,
        preconditions: global___Preconditions | None = ...,
        orphanDependents: builtins.bool | None = ...,
        propagationPolicy: builtins.str | None = ...,
        dryRun: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["gracePeriodSeconds", b"gracePeriodSeconds", "orphanDependents", b"orphanDependents", "preconditions", b"preconditions", "propagationPolicy", b"propagationPolicy"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["dryRun", b"dryRun", "gracePeriodSeconds", b"gracePeriodSeconds", "orphanDependents", b"orphanDependents", "preconditions", b"preconditions", "propagationPolicy", b"propagationPolicy"]) -> None: ...

global___DeleteOptions = DeleteOptions

@typing.final
class Duration(google.protobuf.message.Message):
    """Duration is a wrapper around time.Duration which supports correct
    marshaling to YAML and JSON. In particular, it marshals into strings, which
    can be used as map keys in json.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DURATION_FIELD_NUMBER: builtins.int
    duration: builtins.int
    def __init__(
        self,
        *,
        duration: builtins.int | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["duration", b"duration"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["duration", b"duration"]) -> None: ...

global___Duration = Duration

@typing.final
class FieldsV1(google.protobuf.message.Message):
    """FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.

    Each key is either a '.' representing the field itself, and will always map to an empty set,
    or a string representing a sub-field or item. The string will follow one of these four formats:
    'f:<name>', where <name> is the name of a field in a struct, or key in a map
    'v:<value>', where <value> is the exact json formatted value of a list item
    'i:<index>', where <index> is position of a item in a list
    'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values
    If a key maps to an empty Fields value, the field that key represents is part of the set.

    The exact format is defined in sigs.k8s.io/structured-merge-diff
    +protobuf.options.(gogoproto.goproto_stringer)=false
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RAW_FIELD_NUMBER: builtins.int
    Raw: builtins.bytes
    """Raw is the underlying serialization of this object."""
    def __init__(
        self,
        *,
        Raw: builtins.bytes | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["Raw", b"Raw"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["Raw", b"Raw"]) -> None: ...

global___FieldsV1 = FieldsV1

@typing.final
class GetOptions(google.protobuf.message.Message):
    """GetOptions is the standard query options to the standard REST get call."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESOURCEVERSION_FIELD_NUMBER: builtins.int
    resourceVersion: builtins.str
    """resourceVersion sets a constraint on what resource versions a request may be served from.
    See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for
    details.

    Defaults to unset
    +optional
    """
    def __init__(
        self,
        *,
        resourceVersion: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["resourceVersion", b"resourceVersion"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["resourceVersion", b"resourceVersion"]) -> None: ...

global___GetOptions = GetOptions

@typing.final
class GroupKind(google.protobuf.message.Message):
    """GroupKind specifies a Group and a Kind, but does not force a version.  This is useful for identifying
    concepts during lookup stages without having partially valid types

    +protobuf.options.(gogoproto.goproto_stringer)=false
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    GROUP_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    group: builtins.str
    kind: builtins.str
    def __init__(
        self,
        *,
        group: builtins.str | None = ...,
        kind: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["group", b"group", "kind", b"kind"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["group", b"group", "kind", b"kind"]) -> None: ...

global___GroupKind = GroupKind

@typing.final
class GroupResource(google.protobuf.message.Message):
    """GroupResource specifies a Group and a Resource, but does not force a version.  This is useful for identifying
    concepts during lookup stages without having partially valid types

    +protobuf.options.(gogoproto.goproto_stringer)=false
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    GROUP_FIELD_NUMBER: builtins.int
    RESOURCE_FIELD_NUMBER: builtins.int
    group: builtins.str
    resource: builtins.str
    def __init__(
        self,
        *,
        group: builtins.str | None = ...,
        resource: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["group", b"group", "resource", b"resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["group", b"group", "resource", b"resource"]) -> None: ...

global___GroupResource = GroupResource

@typing.final
class GroupVersion(google.protobuf.message.Message):
    """GroupVersion contains the "group" and the "version", which uniquely identifies the API.

    +protobuf.options.(gogoproto.goproto_stringer)=false
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    GROUP_FIELD_NUMBER: builtins.int
    VERSION_FIELD_NUMBER: builtins.int
    group: builtins.str
    version: builtins.str
    def __init__(
        self,
        *,
        group: builtins.str | None = ...,
        version: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["group", b"group", "version", b"version"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["group", b"group", "version", b"version"]) -> None: ...

global___GroupVersion = GroupVersion

@typing.final
class GroupVersionForDiscovery(google.protobuf.message.Message):
    """GroupVersion contains the "group/version" and "version" string of a version.
    It is made a struct to keep extensibility.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    GROUPVERSION_FIELD_NUMBER: builtins.int
    VERSION_FIELD_NUMBER: builtins.int
    groupVersion: builtins.str
    """groupVersion specifies the API group and version in the form "group/version" """
    version: builtins.str
    """version specifies the version in the form of "version". This is to save
    the clients the trouble of splitting the GroupVersion.
    """
    def __init__(
        self,
        *,
        groupVersion: builtins.str | None = ...,
        version: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["groupVersion", b"groupVersion", "version", b"version"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["groupVersion", b"groupVersion", "version", b"version"]) -> None: ...

global___GroupVersionForDiscovery = GroupVersionForDiscovery

@typing.final
class GroupVersionKind(google.protobuf.message.Message):
    """GroupVersionKind unambiguously identifies a kind.  It doesn't anonymously include GroupVersion
    to avoid automatic coercion.  It doesn't use a GroupVersion to avoid custom marshalling

    +protobuf.options.(gogoproto.goproto_stringer)=false
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    GROUP_FIELD_NUMBER: builtins.int
    VERSION_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    group: builtins.str
    version: builtins.str
    kind: builtins.str
    def __init__(
        self,
        *,
        group: builtins.str | None = ...,
        version: builtins.str | None = ...,
        kind: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["group", b"group", "kind", b"kind", "version", b"version"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["group", b"group", "kind", b"kind", "version", b"version"]) -> None: ...

global___GroupVersionKind = GroupVersionKind

@typing.final
class GroupVersionResource(google.protobuf.message.Message):
    """GroupVersionResource unambiguously identifies a resource.  It doesn't anonymously include GroupVersion
    to avoid automatic coercion.  It doesn't use a GroupVersion to avoid custom marshalling

    +protobuf.options.(gogoproto.goproto_stringer)=false
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    GROUP_FIELD_NUMBER: builtins.int
    VERSION_FIELD_NUMBER: builtins.int
    RESOURCE_FIELD_NUMBER: builtins.int
    group: builtins.str
    version: builtins.str
    resource: builtins.str
    def __init__(
        self,
        *,
        group: builtins.str | None = ...,
        version: builtins.str | None = ...,
        resource: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["group", b"group", "resource", b"resource", "version", b"version"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["group", b"group", "resource", b"resource", "version", b"version"]) -> None: ...

global___GroupVersionResource = GroupVersionResource

@typing.final
class LabelSelector(google.protobuf.message.Message):
    """A label selector is a label query over a set of resources. The result of matchLabels and
    matchExpressions are ANDed. An empty label selector matches all objects. A null
    label selector matches no objects.
    +structType=atomic
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class MatchLabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str | None = ...,
            value: builtins.str | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    MATCHLABELS_FIELD_NUMBER: builtins.int
    MATCHEXPRESSIONS_FIELD_NUMBER: builtins.int
    @property
    def matchLabels(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]:
        """matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
        map is equivalent to an element of matchExpressions, whose key field is "key", the
        operator is "In", and the values array contains only "value". The requirements are ANDed.
        +optional
        """

    @property
    def matchExpressions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___LabelSelectorRequirement]:
        """matchExpressions is a list of label selector requirements. The requirements are ANDed.
        +optional
        """

    def __init__(
        self,
        *,
        matchLabels: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        matchExpressions: collections.abc.Iterable[global___LabelSelectorRequirement] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["matchExpressions", b"matchExpressions", "matchLabels", b"matchLabels"]) -> None: ...

global___LabelSelector = LabelSelector

@typing.final
class LabelSelectorRequirement(google.protobuf.message.Message):
    """A label selector requirement is a selector that contains values, a key, and an operator that
    relates the key and values.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    KEY_FIELD_NUMBER: builtins.int
    OPERATOR_FIELD_NUMBER: builtins.int
    VALUES_FIELD_NUMBER: builtins.int
    key: builtins.str
    """key is the label key that the selector applies to."""
    operator: builtins.str
    """operator represents a key's relationship to a set of values.
    Valid operators are In, NotIn, Exists and DoesNotExist.
    """
    @property
    def values(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """values is an array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. This array is replaced during a strategic
        merge patch.
        +optional
        """

    def __init__(
        self,
        *,
        key: builtins.str | None = ...,
        operator: builtins.str | None = ...,
        values: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["key", b"key", "operator", b"operator"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["key", b"key", "operator", b"operator", "values", b"values"]) -> None: ...

global___LabelSelectorRequirement = LabelSelectorRequirement

@typing.final
class List(google.protobuf.message.Message):
    """List holds a list of objects, which may not be known by the server."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    METADATA_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    @property
    def metadata(self) -> global___ListMeta:
        """Standard list metadata.
        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
        +optional
        """

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[armada_client.k8s.io.apimachinery.pkg.runtime.generated_pb2.RawExtension]:
        """List of objects"""

    def __init__(
        self,
        *,
        metadata: global___ListMeta | None = ...,
        items: collections.abc.Iterable[armada_client.k8s.io.apimachinery.pkg.runtime.generated_pb2.RawExtension] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["metadata", b"metadata"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["items", b"items", "metadata", b"metadata"]) -> None: ...

global___List = List

@typing.final
class ListMeta(google.protobuf.message.Message):
    """ListMeta describes metadata that synthetic resources must have, including lists and
    various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SELFLINK_FIELD_NUMBER: builtins.int
    RESOURCEVERSION_FIELD_NUMBER: builtins.int
    CONTINUE_FIELD_NUMBER: builtins.int
    REMAININGITEMCOUNT_FIELD_NUMBER: builtins.int
    selfLink: builtins.str
    """Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.
    +optional
    """
    resourceVersion: builtins.str
    """String that identifies the server's internal version of this object that
    can be used by clients to determine when objects have changed.
    Value must be treated as opaque by clients and passed unmodified back to the server.
    Populated by the system.
    Read-only.
    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    +optional
    """
    remainingItemCount: builtins.int
    """remainingItemCount is the number of subsequent items in the list which are not included in this
    list response. If the list request contained label or field selectors, then the number of
    remaining items is unknown and the field will be left unset and omitted during serialization.
    If the list is complete (either because it is not chunking or because this is the last chunk),
    then there are no more remaining items and this field will be left unset and omitted during
    serialization.
    Servers older than v1.15 do not set this field.
    The intended use of the remainingItemCount is *estimating* the size of a collection. Clients
    should not rely on the remainingItemCount to be set or to be exact.
    +optional
    """
    def __init__(
        self,
        *,
        selfLink: builtins.str | None = ...,
        resourceVersion: builtins.str | None = ...,
        remainingItemCount: builtins.int | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["continue", b"continue", "remainingItemCount", b"remainingItemCount", "resourceVersion", b"resourceVersion", "selfLink", b"selfLink"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["continue", b"continue", "remainingItemCount", b"remainingItemCount", "resourceVersion", b"resourceVersion", "selfLink", b"selfLink"]) -> None: ...

global___ListMeta = ListMeta

@typing.final
class ListOptions(google.protobuf.message.Message):
    """ListOptions is the query options to a standard REST list call."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LABELSELECTOR_FIELD_NUMBER: builtins.int
    FIELDSELECTOR_FIELD_NUMBER: builtins.int
    WATCH_FIELD_NUMBER: builtins.int
    ALLOWWATCHBOOKMARKS_FIELD_NUMBER: builtins.int
    RESOURCEVERSION_FIELD_NUMBER: builtins.int
    RESOURCEVERSIONMATCH_FIELD_NUMBER: builtins.int
    TIMEOUTSECONDS_FIELD_NUMBER: builtins.int
    LIMIT_FIELD_NUMBER: builtins.int
    CONTINUE_FIELD_NUMBER: builtins.int
    SENDINITIALEVENTS_FIELD_NUMBER: builtins.int
    labelSelector: builtins.str
    """A selector to restrict the list of returned objects by their labels.
    Defaults to everything.
    +optional
    """
    fieldSelector: builtins.str
    """A selector to restrict the list of returned objects by their fields.
    Defaults to everything.
    +optional
    """
    watch: builtins.bool
    """Watch for changes to the described resources and return them as a stream of
    add, update, and remove notifications. Specify resourceVersion.
    +optional
    """
    allowWatchBookmarks: builtins.bool
    """allowWatchBookmarks requests watch events with type "BOOKMARK".
    Servers that do not implement bookmarks may ignore this flag and
    bookmarks are sent at the server's discretion. Clients should not
    assume bookmarks are returned at any specific interval, nor may they
    assume the server will send any BOOKMARK event during a session.
    If this is not a watch, this field is ignored.
    +optional
    """
    resourceVersion: builtins.str
    """resourceVersion sets a constraint on what resource versions a request may be served from.
    See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for
    details.

    Defaults to unset
    +optional
    """
    resourceVersionMatch: builtins.str
    """resourceVersionMatch determines how resourceVersion is applied to list calls.
    It is highly recommended that resourceVersionMatch be set for list calls where
    resourceVersion is set
    See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for
    details.

    Defaults to unset
    +optional
    """
    timeoutSeconds: builtins.int
    """Timeout for the list/watch call.
    This limits the duration of the call, regardless of any activity or inactivity.
    +optional
    """
    limit: builtins.int
    """limit is a maximum number of responses to return for a list call. If more items exist, the
    server will set the `continue` field on the list metadata to a value that can be used with the
    same initial query to retrieve the next set of results. Setting a limit may return fewer than
    the requested amount of items (up to zero items) in the event all requested objects are
    filtered out and clients should only use the presence of the continue field to determine whether
    more results are available. Servers may choose not to support the limit argument and will return
    all of the available results. If limit is specified and the continue field is empty, clients may
    assume that no more results are available. This field is not supported if watch is true.

    The server guarantees that the objects returned when using continue will be identical to issuing
    a single list call without a limit - that is, no objects created, modified, or deleted after the
    first request is issued will be included in any subsequent continued requests. This is sometimes
    referred to as a consistent snapshot, and ensures that a client that is using limit to receive
    smaller chunks of a very large result can ensure they see all possible objects. If objects are
    updated during a chunked list the version of the object that was present at the time the first list
    result was calculated is returned.
    """
    sendInitialEvents: builtins.bool
    """`sendInitialEvents=true` may be set together with `watch=true`.
    In that case, the watch stream will begin with synthetic events to
    produce the current state of objects in the collection. Once all such
    events have been sent, a synthetic "Bookmark" event  will be sent.
    The bookmark will report the ResourceVersion (RV) corresponding to the
    set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation.
    Afterwards, the watch stream will proceed as usual, sending watch events
    corresponding to changes (subsequent to the RV) to objects watched.

    When `sendInitialEvents` option is set, we require `resourceVersionMatch`
    option to also be set. The semantic of the watch request is as following:
    - `resourceVersionMatch` = NotOlderThan
      is interpreted as "data at least as new as the provided `resourceVersion`"
      and the bookmark event is send when the state is synced
      to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
      If `resourceVersion` is unset, this is interpreted as "consistent read" and the
      bookmark event is send when the state is synced at least to the moment
      when request started being processed.
    - `resourceVersionMatch` set to any other value or unset
      Invalid error is returned.

    Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward
    compatibility reasons) and to false otherwise.
    +optional
    """
    def __init__(
        self,
        *,
        labelSelector: builtins.str | None = ...,
        fieldSelector: builtins.str | None = ...,
        watch: builtins.bool | None = ...,
        allowWatchBookmarks: builtins.bool | None = ...,
        resourceVersion: builtins.str | None = ...,
        resourceVersionMatch: builtins.str | None = ...,
        timeoutSeconds: builtins.int | None = ...,
        limit: builtins.int | None = ...,
        sendInitialEvents: builtins.bool | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["allowWatchBookmarks", b"allowWatchBookmarks", "continue", b"continue", "fieldSelector", b"fieldSelector", "labelSelector", b"labelSelector", "limit", b"limit", "resourceVersion", b"resourceVersion", "resourceVersionMatch", b"resourceVersionMatch", "sendInitialEvents", b"sendInitialEvents", "timeoutSeconds", b"timeoutSeconds", "watch", b"watch"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["allowWatchBookmarks", b"allowWatchBookmarks", "continue", b"continue", "fieldSelector", b"fieldSelector", "labelSelector", b"labelSelector", "limit", b"limit", "resourceVersion", b"resourceVersion", "resourceVersionMatch", b"resourceVersionMatch", "sendInitialEvents", b"sendInitialEvents", "timeoutSeconds", b"timeoutSeconds", "watch", b"watch"]) -> None: ...

global___ListOptions = ListOptions

@typing.final
class ManagedFieldsEntry(google.protobuf.message.Message):
    """ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource
    that the fieldset applies to.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MANAGER_FIELD_NUMBER: builtins.int
    OPERATION_FIELD_NUMBER: builtins.int
    APIVERSION_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    FIELDSTYPE_FIELD_NUMBER: builtins.int
    FIELDSV1_FIELD_NUMBER: builtins.int
    SUBRESOURCE_FIELD_NUMBER: builtins.int
    manager: builtins.str
    """Manager is an identifier of the workflow managing these fields."""
    operation: builtins.str
    """Operation is the type of operation which lead to this ManagedFieldsEntry being created.
    The only valid values for this field are 'Apply' and 'Update'.
    """
    apiVersion: builtins.str
    """APIVersion defines the version of this resource that this field set
    applies to. The format is "group/version" just like the top-level
    APIVersion field. It is necessary to track the version of a field
    set because it cannot be automatically converted.
    """
    fieldsType: builtins.str
    """FieldsType is the discriminator for the different fields format and version.
    There is currently only one possible value: "FieldsV1"
    """
    subresource: builtins.str
    """Subresource is the name of the subresource used to update that object, or
    empty string if the object was updated through the main resource. The
    value of this field is used to distinguish between managers, even if they
    share the same name. For example, a status update will be distinct from a
    regular update using the same manager name.
    Note that the APIVersion field is not related to the Subresource field and
    it always corresponds to the version of the main resource.
    """
    @property
    def time(self) -> global___Time:
        """Time is the timestamp of when the ManagedFields entry was added. The
        timestamp will also be updated if a field is added, the manager
        changes any of the owned fields value or removes a field. The
        timestamp does not update when a field is removed from the entry
        because another manager took it over.
        +optional
        """

    @property
    def fieldsV1(self) -> global___FieldsV1:
        """FieldsV1 holds the first JSON version format as described in the "FieldsV1" type.
        +optional
        """

    def __init__(
        self,
        *,
        manager: builtins.str | None = ...,
        operation: builtins.str | None = ...,
        apiVersion: builtins.str | None = ...,
        time: global___Time | None = ...,
        fieldsType: builtins.str | None = ...,
        fieldsV1: global___FieldsV1 | None = ...,
        subresource: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["apiVersion", b"apiVersion", "fieldsType", b"fieldsType", "fieldsV1", b"fieldsV1", "manager", b"manager", "operation", b"operation", "subresource", b"subresource", "time", b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["apiVersion", b"apiVersion", "fieldsType", b"fieldsType", "fieldsV1", b"fieldsV1", "manager", b"manager", "operation", b"operation", "subresource", b"subresource", "time", b"time"]) -> None: ...

global___ManagedFieldsEntry = ManagedFieldsEntry

@typing.final
class MicroTime(google.protobuf.message.Message):
    """MicroTime is version of Time with microsecond level precision.

    +protobuf.options.marshal=false
    +protobuf.as=Timestamp
    +protobuf.options.(gogoproto.goproto_stringer)=false
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SECONDS_FIELD_NUMBER: builtins.int
    NANOS_FIELD_NUMBER: builtins.int
    seconds: builtins.int
    """Represents seconds of UTC time since Unix epoch
    1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
    9999-12-31T23:59:59Z inclusive.
    """
    nanos: builtins.int
    """Non-negative fractions of a second at nanosecond resolution. Negative
    second values with fractions must still have non-negative nanos values
    that count forward in time. Must be from 0 to 999,999,999
    inclusive. This field may be limited in precision depending on context.
    """
    def __init__(
        self,
        *,
        seconds: builtins.int | None = ...,
        nanos: builtins.int | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["nanos", b"nanos", "seconds", b"seconds"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["nanos", b"nanos", "seconds", b"seconds"]) -> None: ...

global___MicroTime = MicroTime

@typing.final
class ObjectMeta(google.protobuf.message.Message):
    """ObjectMeta is metadata that all persisted resources must have, which includes all objects
    users must create.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str | None = ...,
            value: builtins.str | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    @typing.final
    class AnnotationsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str | None = ...,
            value: builtins.str | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    GENERATENAME_FIELD_NUMBER: builtins.int
    NAMESPACE_FIELD_NUMBER: builtins.int
    SELFLINK_FIELD_NUMBER: builtins.int
    UID_FIELD_NUMBER: builtins.int
    RESOURCEVERSION_FIELD_NUMBER: builtins.int
    GENERATION_FIELD_NUMBER: builtins.int
    CREATIONTIMESTAMP_FIELD_NUMBER: builtins.int
    DELETIONTIMESTAMP_FIELD_NUMBER: builtins.int
    DELETIONGRACEPERIODSECONDS_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    ANNOTATIONS_FIELD_NUMBER: builtins.int
    OWNERREFERENCES_FIELD_NUMBER: builtins.int
    FINALIZERS_FIELD_NUMBER: builtins.int
    MANAGEDFIELDS_FIELD_NUMBER: builtins.int
    name: builtins.str
    """Name must be unique within a namespace. Is required when creating resources, although
    some resources may allow a client to request the generation of an appropriate name
    automatically. Name is primarily intended for creation idempotence and configuration
    definition.
    Cannot be updated.
    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
    +optional
    """
    generateName: builtins.str
    """GenerateName is an optional prefix, used by the server, to generate a unique
    name ONLY IF the Name field has not been provided.
    If this field is used, the name returned to the client will be different
    than the name passed. This value will also be combined with a unique suffix.
    The provided value has the same validation rules as the Name field,
    and may be truncated by the length of the suffix required to make the value
    unique on the server.

    If this field is specified and the generated name exists, the server will return a 409.

    Applied only if Name is not specified.
    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency
    +optional
    """
    namespace: builtins.str
    """Namespace defines the space within which each name must be unique. An empty namespace is
    equivalent to the "default" namespace, but "default" is the canonical representation.
    Not all objects are required to be scoped to a namespace - the value of this field for
    those objects will be empty.

    Must be a DNS_LABEL.
    Cannot be updated.
    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces
    +optional
    """
    selfLink: builtins.str
    """Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.
    +optional
    """
    uid: builtins.str
    """UID is the unique in time and space value for this object. It is typically generated by
    the server on successful creation of a resource and is not allowed to change on PUT
    operations.

    Populated by the system.
    Read-only.
    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids
    +optional
    """
    resourceVersion: builtins.str
    """An opaque value that represents the internal version of this object that can
    be used by clients to determine when objects have changed. May be used for optimistic
    concurrency, change detection, and the watch operation on a resource or set of resources.
    Clients must treat these values as opaque and passed unmodified back to the server.
    They may only be valid for a particular resource or set of resources.

    Populated by the system.
    Read-only.
    Value must be treated as opaque by clients and .
    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    +optional
    """
    generation: builtins.int
    """A sequence number representing a specific generation of the desired state.
    Populated by the system. Read-only.
    +optional
    """
    deletionGracePeriodSeconds: builtins.int
    """Number of seconds allowed for this object to gracefully terminate before
    it will be removed from the system. Only set when deletionTimestamp is also set.
    May only be shortened.
    Read-only.
    +optional
    """
    @property
    def creationTimestamp(self) -> global___Time:
        """CreationTimestamp is a timestamp representing the server time when this object was
        created. It is not guaranteed to be set in happens-before order across separate operations.
        Clients may not set this value. It is represented in RFC3339 form and is in UTC.

        Populated by the system.
        Read-only.
        Null for lists.
        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
        +optional
        """

    @property
    def deletionTimestamp(self) -> global___Time:
        """DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This
        field is set by the server when a graceful deletion is requested by the user, and is not
        directly settable by a client. The resource is expected to be deleted (no longer visible
        from resource lists, and not reachable by name) after the time in this field, once the
        finalizers list is empty. As long as the finalizers list contains items, deletion is blocked.
        Once the deletionTimestamp is set, this value may not be unset or be set further into the
        future, although it may be shortened or the resource may be deleted prior to this time.
        For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react
        by sending a graceful termination signal to the containers in the pod. After that 30 seconds,
        the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,
        remove the pod from the API. In the presence of network partitions, this object may still
        exist after this timestamp, until an administrator or automated process can determine the
        resource is fully terminated.
        If not set, graceful deletion of the object has not been requested.

        Populated by the system when a graceful deletion is requested.
        Read-only.
        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
        +optional
        """

    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]:
        """Map of string keys and values that can be used to organize and categorize
        (scope and select) objects. May match selectors of replication controllers
        and services.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
        +optional
        """

    @property
    def annotations(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]:
        """Annotations is an unstructured key value map stored with a resource that may be
        set by external tools to store and retrieve arbitrary metadata. They are not
        queryable and should be preserved when modifying objects.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
        +optional
        """

    @property
    def ownerReferences(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___OwnerReference]:
        """List of objects depended by this object. If ALL objects in the list have
        been deleted, this object will be garbage collected. If this object is managed by a controller,
        then an entry in this list will point to this controller, with the controller field set to true.
        There cannot be more than one managing controller.
        +optional
        +patchMergeKey=uid
        +patchStrategy=merge
        """

    @property
    def finalizers(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Must be empty before the object is deleted from the registry. Each entry
        is an identifier for the responsible component that will remove the entry
        from the list. If the deletionTimestamp of the object is non-nil, entries
        in this list can only be removed.
        Finalizers may be processed and removed in any order.  Order is NOT enforced
        because it introduces significant risk of stuck finalizers.
        finalizers is a shared field, any actor with permission can reorder it.
        If the finalizer list is processed in order, then this can lead to a situation
        in which the component responsible for the first finalizer in the list is
        waiting for a signal (field value, external system, or other) produced by a
        component responsible for a finalizer later in the list, resulting in a deadlock.
        Without enforced ordering finalizers are free to order amongst themselves and
        are not vulnerable to ordering changes in the list.
        +optional
        +patchStrategy=merge
        """

    @property
    def managedFields(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ManagedFieldsEntry]:
        """ManagedFields maps workflow-id and version to the set of fields
        that are managed by that workflow. This is mostly for internal
        housekeeping, and users typically shouldn't need to set or
        understand this field. A workflow can be the user's name, a
        controller's name, or the name of a specific apply path like
        "ci-cd". The set of fields is always in the version that the
        workflow used when modifying the object.

        +optional
        """

    def __init__(
        self,
        *,
        name: builtins.str | None = ...,
        generateName: builtins.str | None = ...,
        namespace: builtins.str | None = ...,
        selfLink: builtins.str | None = ...,
        uid: builtins.str | None = ...,
        resourceVersion: builtins.str | None = ...,
        generation: builtins.int | None = ...,
        creationTimestamp: global___Time | None = ...,
        deletionTimestamp: global___Time | None = ...,
        deletionGracePeriodSeconds: builtins.int | None = ...,
        labels: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        annotations: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        ownerReferences: collections.abc.Iterable[global___OwnerReference] | None = ...,
        finalizers: collections.abc.Iterable[builtins.str] | None = ...,
        managedFields: collections.abc.Iterable[global___ManagedFieldsEntry] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["creationTimestamp", b"creationTimestamp", "deletionGracePeriodSeconds", b"deletionGracePeriodSeconds", "deletionTimestamp", b"deletionTimestamp", "generateName", b"generateName", "generation", b"generation", "name", b"name", "namespace", b"namespace", "resourceVersion", b"resourceVersion", "selfLink", b"selfLink", "uid", b"uid"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["annotations", b"annotations", "creationTimestamp", b"creationTimestamp", "deletionGracePeriodSeconds", b"deletionGracePeriodSeconds", "deletionTimestamp", b"deletionTimestamp", "finalizers", b"finalizers", "generateName", b"generateName", "generation", b"generation", "labels", b"labels", "managedFields", b"managedFields", "name", b"name", "namespace", b"namespace", "ownerReferences", b"ownerReferences", "resourceVersion", b"resourceVersion", "selfLink", b"selfLink", "uid", b"uid"]) -> None: ...

global___ObjectMeta = ObjectMeta

@typing.final
class OwnerReference(google.protobuf.message.Message):
    """OwnerReference contains enough information to let you identify an owning
    object. An owning object must be in the same namespace as the dependent, or
    be cluster-scoped, so there is no namespace field.
    +structType=atomic
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    APIVERSION_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    UID_FIELD_NUMBER: builtins.int
    CONTROLLER_FIELD_NUMBER: builtins.int
    BLOCKOWNERDELETION_FIELD_NUMBER: builtins.int
    apiVersion: builtins.str
    """API version of the referent."""
    kind: builtins.str
    """Kind of the referent.
    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    """
    name: builtins.str
    """Name of the referent.
    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
    """
    uid: builtins.str
    """UID of the referent.
    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids
    """
    controller: builtins.bool
    """If true, this reference points to the managing controller.
    +optional
    """
    blockOwnerDeletion: builtins.bool
    """If true, AND if the owner has the "foregroundDeletion" finalizer, then
    the owner cannot be deleted from the key-value store until this
    reference is removed.
    See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion
    for how the garbage collector interacts with this field and enforces the foreground deletion.
    Defaults to false.
    To set this field, a user needs "delete" permission of the owner,
    otherwise 422 (Unprocessable Entity) will be returned.
    +optional
    """
    def __init__(
        self,
        *,
        apiVersion: builtins.str | None = ...,
        kind: builtins.str | None = ...,
        name: builtins.str | None = ...,
        uid: builtins.str | None = ...,
        controller: builtins.bool | None = ...,
        blockOwnerDeletion: builtins.bool | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["apiVersion", b"apiVersion", "blockOwnerDeletion", b"blockOwnerDeletion", "controller", b"controller", "kind", b"kind", "name", b"name", "uid", b"uid"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["apiVersion", b"apiVersion", "blockOwnerDeletion", b"blockOwnerDeletion", "controller", b"controller", "kind", b"kind", "name", b"name", "uid", b"uid"]) -> None: ...

global___OwnerReference = OwnerReference

@typing.final
class PartialObjectMetadata(google.protobuf.message.Message):
    """PartialObjectMetadata is a generic representation of any object with ObjectMeta. It allows clients
    to get access to a particular ObjectMeta schema without knowing the details of the version.
    +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    METADATA_FIELD_NUMBER: builtins.int
    @property
    def metadata(self) -> global___ObjectMeta:
        """Standard object's metadata.
        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
        +optional
        """

    def __init__(
        self,
        *,
        metadata: global___ObjectMeta | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["metadata", b"metadata"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["metadata", b"metadata"]) -> None: ...

global___PartialObjectMetadata = PartialObjectMetadata

@typing.final
class PartialObjectMetadataList(google.protobuf.message.Message):
    """PartialObjectMetadataList contains a list of objects containing only their metadata
    +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    METADATA_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    @property
    def metadata(self) -> global___ListMeta:
        """Standard list metadata.
        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
        +optional
        """

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PartialObjectMetadata]:
        """items contains each of the included items."""

    def __init__(
        self,
        *,
        metadata: global___ListMeta | None = ...,
        items: collections.abc.Iterable[global___PartialObjectMetadata] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["metadata", b"metadata"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["items", b"items", "metadata", b"metadata"]) -> None: ...

global___PartialObjectMetadataList = PartialObjectMetadataList

@typing.final
class Patch(google.protobuf.message.Message):
    """Patch is provided to give a concrete name and type to the Kubernetes PATCH request body."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___Patch = Patch

@typing.final
class PatchOptions(google.protobuf.message.Message):
    """PatchOptions may be provided when patching an API object.
    PatchOptions is meant to be a superset of UpdateOptions.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DRYRUN_FIELD_NUMBER: builtins.int
    FORCE_FIELD_NUMBER: builtins.int
    FIELDMANAGER_FIELD_NUMBER: builtins.int
    FIELDVALIDATION_FIELD_NUMBER: builtins.int
    force: builtins.bool
    """Force is going to "force" Apply requests. It means user will
    re-acquire conflicting fields owned by other people. Force
    flag must be unset for non-apply patch requests.
    +optional
    """
    fieldManager: builtins.str
    """fieldManager is a name associated with the actor or entity
    that is making these changes. The value must be less than or
    128 characters long, and only contain printable characters,
    as defined by https://golang.org/pkg/unicode/#IsPrint. This
    field is required for apply requests
    (application/apply-patch) but optional for non-apply patch
    types (JsonPatch, MergePatch, StrategicMergePatch).
    +optional
    """
    fieldValidation: builtins.str
    """fieldValidation instructs the server on how to handle
    objects in the request (POST/PUT/PATCH) containing unknown
    or duplicate fields. Valid values are:
    - Ignore: This will ignore any unknown fields that are silently
    dropped from the object, and will ignore all but the last duplicate
    field that the decoder encounters. This is the default behavior
    prior to v1.23.
    - Warn: This will send a warning via the standard warning response
    header for each unknown field that is dropped from the object, and
    for each duplicate field that is encountered. The request will
    still succeed if there are no other errors, and will only persist
    the last of any duplicate fields. This is the default in v1.23+
    - Strict: This will fail the request with a BadRequest error if
    any unknown fields would be dropped from the object, or if any
    duplicate fields are present. The error returned from the server
    will contain all unknown and duplicate fields encountered.
    +optional
    """
    @property
    def dryRun(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """When present, indicates that modifications should not be
        persisted. An invalid or unrecognized dryRun directive will
        result in an error response and no further processing of the
        request. Valid values are:
        - All: all dry run stages will be processed
        +optional
        """

    def __init__(
        self,
        *,
        dryRun: collections.abc.Iterable[builtins.str] | None = ...,
        force: builtins.bool | None = ...,
        fieldManager: builtins.str | None = ...,
        fieldValidation: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["fieldManager", b"fieldManager", "fieldValidation", b"fieldValidation", "force", b"force"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["dryRun", b"dryRun", "fieldManager", b"fieldManager", "fieldValidation", b"fieldValidation", "force", b"force"]) -> None: ...

global___PatchOptions = PatchOptions

@typing.final
class Preconditions(google.protobuf.message.Message):
    """Preconditions must be fulfilled before an operation (update, delete, etc.) is carried out."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    UID_FIELD_NUMBER: builtins.int
    RESOURCEVERSION_FIELD_NUMBER: builtins.int
    uid: builtins.str
    """Specifies the target UID.
    +optional
    """
    resourceVersion: builtins.str
    """Specifies the target ResourceVersion
    +optional
    """
    def __init__(
        self,
        *,
        uid: builtins.str | None = ...,
        resourceVersion: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["resourceVersion", b"resourceVersion", "uid", b"uid"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["resourceVersion", b"resourceVersion", "uid", b"uid"]) -> None: ...

global___Preconditions = Preconditions

@typing.final
class RootPaths(google.protobuf.message.Message):
    """RootPaths lists the paths available at root.
    For example: "/healthz", "/apis".
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PATHS_FIELD_NUMBER: builtins.int
    @property
    def paths(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """paths are the paths available at root."""

    def __init__(
        self,
        *,
        paths: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["paths", b"paths"]) -> None: ...

global___RootPaths = RootPaths

@typing.final
class ServerAddressByClientCIDR(google.protobuf.message.Message):
    """ServerAddressByClientCIDR helps the client to determine the server address that they should use, depending on the clientCIDR that they match."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CLIENTCIDR_FIELD_NUMBER: builtins.int
    SERVERADDRESS_FIELD_NUMBER: builtins.int
    clientCIDR: builtins.str
    """The CIDR with which clients can match their IP to figure out the server address that they should use."""
    serverAddress: builtins.str
    """Address of this server, suitable for a client that matches the above CIDR.
    This can be a hostname, hostname:port, IP or IP:port.
    """
    def __init__(
        self,
        *,
        clientCIDR: builtins.str | None = ...,
        serverAddress: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["clientCIDR", b"clientCIDR", "serverAddress", b"serverAddress"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["clientCIDR", b"clientCIDR", "serverAddress", b"serverAddress"]) -> None: ...

global___ServerAddressByClientCIDR = ServerAddressByClientCIDR

@typing.final
class Status(google.protobuf.message.Message):
    """Status is a return value for calls that don't return other objects."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    METADATA_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    REASON_FIELD_NUMBER: builtins.int
    DETAILS_FIELD_NUMBER: builtins.int
    CODE_FIELD_NUMBER: builtins.int
    status: builtins.str
    """Status of the operation.
    One of: "Success" or "Failure".
    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
    +optional
    """
    message: builtins.str
    """A human-readable description of the status of this operation.
    +optional
    """
    reason: builtins.str
    """A machine-readable description of why this operation is in the
    "Failure" status. If this value is empty there
    is no information available. A Reason clarifies an HTTP status
    code but does not override it.
    +optional
    """
    code: builtins.int
    """Suggested HTTP return code for this status, 0 if not set.
    +optional
    """
    @property
    def metadata(self) -> global___ListMeta:
        """Standard list metadata.
        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
        +optional
        """

    @property
    def details(self) -> global___StatusDetails:
        """Extended data associated with the reason.  Each reason may define its
        own extended details. This field is optional and the data returned
        is not guaranteed to conform to any schema except that defined by
        the reason type.
        +optional
        """

    def __init__(
        self,
        *,
        metadata: global___ListMeta | None = ...,
        status: builtins.str | None = ...,
        message: builtins.str | None = ...,
        reason: builtins.str | None = ...,
        details: global___StatusDetails | None = ...,
        code: builtins.int | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["code", b"code", "details", b"details", "message", b"message", "metadata", b"metadata", "reason", b"reason", "status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["code", b"code", "details", b"details", "message", b"message", "metadata", b"metadata", "reason", b"reason", "status", b"status"]) -> None: ...

global___Status = Status

@typing.final
class StatusCause(google.protobuf.message.Message):
    """StatusCause provides more information about an api.Status failure, including
    cases when multiple errors are encountered.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REASON_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    FIELD_FIELD_NUMBER: builtins.int
    reason: builtins.str
    """A machine-readable description of the cause of the error. If this value is
    empty there is no information available.
    +optional
    """
    message: builtins.str
    """A human-readable description of the cause of the error.  This field may be
    presented as-is to a reader.
    +optional
    """
    field: builtins.str
    """The field of the resource that has caused this error, as named by its JSON
    serialization. May include dot and postfix notation for nested attributes.
    Arrays are zero-indexed.  Fields may appear more than once in an array of
    causes due to fields having multiple errors.
    Optional.

    Examples:
      "name" - the field "name" on the current resource
      "items[0].name" - the field "name" on the first array entry in "items"
    +optional
    """
    def __init__(
        self,
        *,
        reason: builtins.str | None = ...,
        message: builtins.str | None = ...,
        field: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["field", b"field", "message", b"message", "reason", b"reason"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["field", b"field", "message", b"message", "reason", b"reason"]) -> None: ...

global___StatusCause = StatusCause

@typing.final
class StatusDetails(google.protobuf.message.Message):
    """StatusDetails is a set of additional properties that MAY be set by the
    server to provide additional information about a response. The Reason
    field of a Status object defines what attributes will be set. Clients
    must ignore fields that do not match the defined type of each attribute,
    and should assume that any attribute may be empty, invalid, or under
    defined.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    GROUP_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    UID_FIELD_NUMBER: builtins.int
    CAUSES_FIELD_NUMBER: builtins.int
    RETRYAFTERSECONDS_FIELD_NUMBER: builtins.int
    name: builtins.str
    """The name attribute of the resource associated with the status StatusReason
    (when there is a single name which can be described).
    +optional
    """
    group: builtins.str
    """The group attribute of the resource associated with the status StatusReason.
    +optional
    """
    kind: builtins.str
    """The kind attribute of the resource associated with the status StatusReason.
    On some operations may differ from the requested resource Kind.
    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    +optional
    """
    uid: builtins.str
    """UID of the resource.
    (when there is a single resource which can be described).
    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids
    +optional
    """
    retryAfterSeconds: builtins.int
    """If specified, the time in seconds before the operation should be retried. Some errors may indicate
    the client must take an alternate action - for those errors this field may indicate how long to wait
    before taking the alternate action.
    +optional
    """
    @property
    def causes(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___StatusCause]:
        """The Causes array includes more details associated with the StatusReason
        failure. Not all StatusReasons may provide detailed causes.
        +optional
        """

    def __init__(
        self,
        *,
        name: builtins.str | None = ...,
        group: builtins.str | None = ...,
        kind: builtins.str | None = ...,
        uid: builtins.str | None = ...,
        causes: collections.abc.Iterable[global___StatusCause] | None = ...,
        retryAfterSeconds: builtins.int | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["group", b"group", "kind", b"kind", "name", b"name", "retryAfterSeconds", b"retryAfterSeconds", "uid", b"uid"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["causes", b"causes", "group", b"group", "kind", b"kind", "name", b"name", "retryAfterSeconds", b"retryAfterSeconds", "uid", b"uid"]) -> None: ...

global___StatusDetails = StatusDetails

@typing.final
class TableOptions(google.protobuf.message.Message):
    """TableOptions are used when a Table is requested by the caller.
    +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    INCLUDEOBJECT_FIELD_NUMBER: builtins.int
    includeObject: builtins.str
    """includeObject decides whether to include each object along with its columnar information.
    Specifying "None" will return no object, specifying "Object" will return the full object contents, and
    specifying "Metadata" (the default) will return the object's metadata in the PartialObjectMetadata kind
    in version v1beta1 of the meta.k8s.io API group.
    """
    def __init__(
        self,
        *,
        includeObject: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["includeObject", b"includeObject"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["includeObject", b"includeObject"]) -> None: ...

global___TableOptions = TableOptions

@typing.final
class Time(google.protobuf.message.Message):
    """Time is a wrapper around time.Time which supports correct
    marshaling to YAML and JSON.  Wrappers are provided for many
    of the factory methods that the time package offers.

    +protobuf.options.marshal=false
    +protobuf.as=Timestamp
    +protobuf.options.(gogoproto.goproto_stringer)=false
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SECONDS_FIELD_NUMBER: builtins.int
    NANOS_FIELD_NUMBER: builtins.int
    seconds: builtins.int
    """Represents seconds of UTC time since Unix epoch
    1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
    9999-12-31T23:59:59Z inclusive.
    """
    nanos: builtins.int
    """Non-negative fractions of a second at nanosecond resolution. Negative
    second values with fractions must still have non-negative nanos values
    that count forward in time. Must be from 0 to 999,999,999
    inclusive. This field may be limited in precision depending on context.
    """
    def __init__(
        self,
        *,
        seconds: builtins.int | None = ...,
        nanos: builtins.int | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["nanos", b"nanos", "seconds", b"seconds"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["nanos", b"nanos", "seconds", b"seconds"]) -> None: ...

global___Time = Time

@typing.final
class Timestamp(google.protobuf.message.Message):
    """Timestamp is a struct that is equivalent to Time, but intended for
    protobuf marshalling/unmarshalling. It is generated into a serialization
    that matches Time. Do not use in Go structs.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SECONDS_FIELD_NUMBER: builtins.int
    NANOS_FIELD_NUMBER: builtins.int
    seconds: builtins.int
    """Represents seconds of UTC time since Unix epoch
    1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
    9999-12-31T23:59:59Z inclusive.
    """
    nanos: builtins.int
    """Non-negative fractions of a second at nanosecond resolution. Negative
    second values with fractions must still have non-negative nanos values
    that count forward in time. Must be from 0 to 999,999,999
    inclusive. This field may be limited in precision depending on context.
    """
    def __init__(
        self,
        *,
        seconds: builtins.int | None = ...,
        nanos: builtins.int | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["nanos", b"nanos", "seconds", b"seconds"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["nanos", b"nanos", "seconds", b"seconds"]) -> None: ...

global___Timestamp = Timestamp

@typing.final
class TypeMeta(google.protobuf.message.Message):
    """TypeMeta describes an individual object in an API response or request
    with strings representing the type of the object and its API schema version.
    Structures that are versioned or persisted should inline TypeMeta.

    +k8s:deepcopy-gen=false
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    KIND_FIELD_NUMBER: builtins.int
    APIVERSION_FIELD_NUMBER: builtins.int
    kind: builtins.str
    """Kind is a string value representing the REST resource this object represents.
    Servers may infer this from the endpoint the client submits requests to.
    Cannot be updated.
    In CamelCase.
    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    +optional
    """
    apiVersion: builtins.str
    """APIVersion defines the versioned schema of this representation of an object.
    Servers should convert recognized schemas to the latest internal value, and
    may reject unrecognized values.
    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    +optional
    """
    def __init__(
        self,
        *,
        kind: builtins.str | None = ...,
        apiVersion: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["apiVersion", b"apiVersion", "kind", b"kind"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["apiVersion", b"apiVersion", "kind", b"kind"]) -> None: ...

global___TypeMeta = TypeMeta

@typing.final
class UpdateOptions(google.protobuf.message.Message):
    """UpdateOptions may be provided when updating an API object.
    All fields in UpdateOptions should also be present in PatchOptions.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DRYRUN_FIELD_NUMBER: builtins.int
    FIELDMANAGER_FIELD_NUMBER: builtins.int
    FIELDVALIDATION_FIELD_NUMBER: builtins.int
    fieldManager: builtins.str
    """fieldManager is a name associated with the actor or entity
    that is making these changes. The value must be less than or
    128 characters long, and only contain printable characters,
    as defined by https://golang.org/pkg/unicode/#IsPrint.
    +optional
    """
    fieldValidation: builtins.str
    """fieldValidation instructs the server on how to handle
    objects in the request (POST/PUT/PATCH) containing unknown
    or duplicate fields. Valid values are:
    - Ignore: This will ignore any unknown fields that are silently
    dropped from the object, and will ignore all but the last duplicate
    field that the decoder encounters. This is the default behavior
    prior to v1.23.
    - Warn: This will send a warning via the standard warning response
    header for each unknown field that is dropped from the object, and
    for each duplicate field that is encountered. The request will
    still succeed if there are no other errors, and will only persist
    the last of any duplicate fields. This is the default in v1.23+
    - Strict: This will fail the request with a BadRequest error if
    any unknown fields would be dropped from the object, or if any
    duplicate fields are present. The error returned from the server
    will contain all unknown and duplicate fields encountered.
    +optional
    """
    @property
    def dryRun(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """When present, indicates that modifications should not be
        persisted. An invalid or unrecognized dryRun directive will
        result in an error response and no further processing of the
        request. Valid values are:
        - All: all dry run stages will be processed
        +optional
        """

    def __init__(
        self,
        *,
        dryRun: collections.abc.Iterable[builtins.str] | None = ...,
        fieldManager: builtins.str | None = ...,
        fieldValidation: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["fieldManager", b"fieldManager", "fieldValidation", b"fieldValidation"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["dryRun", b"dryRun", "fieldManager", b"fieldManager", "fieldValidation", b"fieldValidation"]) -> None: ...

global___UpdateOptions = UpdateOptions

@typing.final
class Verbs(google.protobuf.message.Message):
    """Verbs masks the value so protobuf can generate

    +protobuf.nullable=true
    +protobuf.options.(gogoproto.goproto_stringer)=false
    items, if empty, will result in an empty slice
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ITEMS_FIELD_NUMBER: builtins.int
    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        items: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["items", b"items"]) -> None: ...

global___Verbs = Verbs

@typing.final
class WatchEvent(google.protobuf.message.Message):
    """Event represents a single event to a watched resource.

    +protobuf=true
    +k8s:deepcopy-gen=true
    +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TYPE_FIELD_NUMBER: builtins.int
    OBJECT_FIELD_NUMBER: builtins.int
    type: builtins.str
    @property
    def object(self) -> armada_client.k8s.io.apimachinery.pkg.runtime.generated_pb2.RawExtension:
        """Object is:
         * If Type is Added or Modified: the new state of the object.
         * If Type is Deleted: the state of the object immediately before deletion.
         * If Type is Error: *Status is recommended; other types may make sense
           depending on context.
        """

    def __init__(
        self,
        *,
        type: builtins.str | None = ...,
        object: armada_client.k8s.io.apimachinery.pkg.runtime.generated_pb2.RawExtension | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["object", b"object", "type", b"type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["object", b"object", "type", b"type"]) -> None: ...

global___WatchEvent = WatchEvent
