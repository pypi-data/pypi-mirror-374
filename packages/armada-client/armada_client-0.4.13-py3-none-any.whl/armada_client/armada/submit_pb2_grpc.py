# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from armada_client.armada import health_pb2 as armada_dot_health__pb2
from armada_client.armada import submit_pb2 as armada_dot_submit__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2

GRPC_GENERATED_VERSION = '1.68.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in armada/submit_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class QueueServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateQueue = channel.unary_unary(
                '/api.QueueService/CreateQueue',
                request_serializer=armada_dot_submit__pb2.Queue.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.CreateQueues = channel.unary_unary(
                '/api.QueueService/CreateQueues',
                request_serializer=armada_dot_submit__pb2.QueueList.SerializeToString,
                response_deserializer=armada_dot_submit__pb2.BatchQueueCreateResponse.FromString,
                _registered_method=True)
        self.UpdateQueue = channel.unary_unary(
                '/api.QueueService/UpdateQueue',
                request_serializer=armada_dot_submit__pb2.Queue.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.UpdateQueues = channel.unary_unary(
                '/api.QueueService/UpdateQueues',
                request_serializer=armada_dot_submit__pb2.QueueList.SerializeToString,
                response_deserializer=armada_dot_submit__pb2.BatchQueueUpdateResponse.FromString,
                _registered_method=True)
        self.DeleteQueue = channel.unary_unary(
                '/api.QueueService/DeleteQueue',
                request_serializer=armada_dot_submit__pb2.QueueDeleteRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.GetQueue = channel.unary_unary(
                '/api.QueueService/GetQueue',
                request_serializer=armada_dot_submit__pb2.QueueGetRequest.SerializeToString,
                response_deserializer=armada_dot_submit__pb2.Queue.FromString,
                _registered_method=True)
        self.GetQueues = channel.unary_stream(
                '/api.QueueService/GetQueues',
                request_serializer=armada_dot_submit__pb2.StreamingQueueGetRequest.SerializeToString,
                response_deserializer=armada_dot_submit__pb2.StreamingQueueMessage.FromString,
                _registered_method=True)
        self.CordonQueue = channel.unary_unary(
                '/api.QueueService/CordonQueue',
                request_serializer=armada_dot_submit__pb2.QueueCordonRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.UncordonQueue = channel.unary_unary(
                '/api.QueueService/UncordonQueue',
                request_serializer=armada_dot_submit__pb2.QueueUncordonRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.PreemptOnQueue = channel.unary_unary(
                '/api.QueueService/PreemptOnQueue',
                request_serializer=armada_dot_submit__pb2.QueuePreemptRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.CancelOnQueue = channel.unary_unary(
                '/api.QueueService/CancelOnQueue',
                request_serializer=armada_dot_submit__pb2.QueueCancelRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)


class QueueServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateQueue(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateQueues(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateQueue(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateQueues(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteQueue(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetQueue(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetQueues(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CordonQueue(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UncordonQueue(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PreemptOnQueue(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelOnQueue(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_QueueServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateQueue': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateQueue,
                    request_deserializer=armada_dot_submit__pb2.Queue.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'CreateQueues': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateQueues,
                    request_deserializer=armada_dot_submit__pb2.QueueList.FromString,
                    response_serializer=armada_dot_submit__pb2.BatchQueueCreateResponse.SerializeToString,
            ),
            'UpdateQueue': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateQueue,
                    request_deserializer=armada_dot_submit__pb2.Queue.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'UpdateQueues': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateQueues,
                    request_deserializer=armada_dot_submit__pb2.QueueList.FromString,
                    response_serializer=armada_dot_submit__pb2.BatchQueueUpdateResponse.SerializeToString,
            ),
            'DeleteQueue': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteQueue,
                    request_deserializer=armada_dot_submit__pb2.QueueDeleteRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetQueue': grpc.unary_unary_rpc_method_handler(
                    servicer.GetQueue,
                    request_deserializer=armada_dot_submit__pb2.QueueGetRequest.FromString,
                    response_serializer=armada_dot_submit__pb2.Queue.SerializeToString,
            ),
            'GetQueues': grpc.unary_stream_rpc_method_handler(
                    servicer.GetQueues,
                    request_deserializer=armada_dot_submit__pb2.StreamingQueueGetRequest.FromString,
                    response_serializer=armada_dot_submit__pb2.StreamingQueueMessage.SerializeToString,
            ),
            'CordonQueue': grpc.unary_unary_rpc_method_handler(
                    servicer.CordonQueue,
                    request_deserializer=armada_dot_submit__pb2.QueueCordonRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'UncordonQueue': grpc.unary_unary_rpc_method_handler(
                    servicer.UncordonQueue,
                    request_deserializer=armada_dot_submit__pb2.QueueUncordonRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'PreemptOnQueue': grpc.unary_unary_rpc_method_handler(
                    servicer.PreemptOnQueue,
                    request_deserializer=armada_dot_submit__pb2.QueuePreemptRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'CancelOnQueue': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelOnQueue,
                    request_deserializer=armada_dot_submit__pb2.QueueCancelRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'api.QueueService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('api.QueueService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class QueueService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateQueue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.QueueService/CreateQueue',
            armada_dot_submit__pb2.Queue.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateQueues(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.QueueService/CreateQueues',
            armada_dot_submit__pb2.QueueList.SerializeToString,
            armada_dot_submit__pb2.BatchQueueCreateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateQueue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.QueueService/UpdateQueue',
            armada_dot_submit__pb2.Queue.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateQueues(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.QueueService/UpdateQueues',
            armada_dot_submit__pb2.QueueList.SerializeToString,
            armada_dot_submit__pb2.BatchQueueUpdateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteQueue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.QueueService/DeleteQueue',
            armada_dot_submit__pb2.QueueDeleteRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetQueue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.QueueService/GetQueue',
            armada_dot_submit__pb2.QueueGetRequest.SerializeToString,
            armada_dot_submit__pb2.Queue.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetQueues(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/api.QueueService/GetQueues',
            armada_dot_submit__pb2.StreamingQueueGetRequest.SerializeToString,
            armada_dot_submit__pb2.StreamingQueueMessage.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CordonQueue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.QueueService/CordonQueue',
            armada_dot_submit__pb2.QueueCordonRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UncordonQueue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.QueueService/UncordonQueue',
            armada_dot_submit__pb2.QueueUncordonRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PreemptOnQueue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.QueueService/PreemptOnQueue',
            armada_dot_submit__pb2.QueuePreemptRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CancelOnQueue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.QueueService/CancelOnQueue',
            armada_dot_submit__pb2.QueueCancelRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class SubmitStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SubmitJobs = channel.unary_unary(
                '/api.Submit/SubmitJobs',
                request_serializer=armada_dot_submit__pb2.JobSubmitRequest.SerializeToString,
                response_deserializer=armada_dot_submit__pb2.JobSubmitResponse.FromString,
                _registered_method=True)
        self.CancelJobs = channel.unary_unary(
                '/api.Submit/CancelJobs',
                request_serializer=armada_dot_submit__pb2.JobCancelRequest.SerializeToString,
                response_deserializer=armada_dot_submit__pb2.CancellationResult.FromString,
                _registered_method=True)
        self.CancelJobSet = channel.unary_unary(
                '/api.Submit/CancelJobSet',
                request_serializer=armada_dot_submit__pb2.JobSetCancelRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.ReprioritizeJobs = channel.unary_unary(
                '/api.Submit/ReprioritizeJobs',
                request_serializer=armada_dot_submit__pb2.JobReprioritizeRequest.SerializeToString,
                response_deserializer=armada_dot_submit__pb2.JobReprioritizeResponse.FromString,
                _registered_method=True)
        self.PreemptJobs = channel.unary_unary(
                '/api.Submit/PreemptJobs',
                request_serializer=armada_dot_submit__pb2.JobPreemptRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.CreateQueue = channel.unary_unary(
                '/api.Submit/CreateQueue',
                request_serializer=armada_dot_submit__pb2.Queue.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.CreateQueues = channel.unary_unary(
                '/api.Submit/CreateQueues',
                request_serializer=armada_dot_submit__pb2.QueueList.SerializeToString,
                response_deserializer=armada_dot_submit__pb2.BatchQueueCreateResponse.FromString,
                _registered_method=True)
        self.UpdateQueue = channel.unary_unary(
                '/api.Submit/UpdateQueue',
                request_serializer=armada_dot_submit__pb2.Queue.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.UpdateQueues = channel.unary_unary(
                '/api.Submit/UpdateQueues',
                request_serializer=armada_dot_submit__pb2.QueueList.SerializeToString,
                response_deserializer=armada_dot_submit__pb2.BatchQueueUpdateResponse.FromString,
                _registered_method=True)
        self.DeleteQueue = channel.unary_unary(
                '/api.Submit/DeleteQueue',
                request_serializer=armada_dot_submit__pb2.QueueDeleteRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.GetQueue = channel.unary_unary(
                '/api.Submit/GetQueue',
                request_serializer=armada_dot_submit__pb2.QueueGetRequest.SerializeToString,
                response_deserializer=armada_dot_submit__pb2.Queue.FromString,
                _registered_method=True)
        self.GetQueues = channel.unary_stream(
                '/api.Submit/GetQueues',
                request_serializer=armada_dot_submit__pb2.StreamingQueueGetRequest.SerializeToString,
                response_deserializer=armada_dot_submit__pb2.StreamingQueueMessage.FromString,
                _registered_method=True)
        self.Health = channel.unary_unary(
                '/api.Submit/Health',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=armada_dot_health__pb2.HealthCheckResponse.FromString,
                _registered_method=True)


class SubmitServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SubmitJobs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelJobs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelJobSet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReprioritizeJobs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PreemptJobs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateQueue(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateQueues(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateQueue(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateQueues(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteQueue(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetQueue(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetQueues(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Health(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SubmitServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SubmitJobs': grpc.unary_unary_rpc_method_handler(
                    servicer.SubmitJobs,
                    request_deserializer=armada_dot_submit__pb2.JobSubmitRequest.FromString,
                    response_serializer=armada_dot_submit__pb2.JobSubmitResponse.SerializeToString,
            ),
            'CancelJobs': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelJobs,
                    request_deserializer=armada_dot_submit__pb2.JobCancelRequest.FromString,
                    response_serializer=armada_dot_submit__pb2.CancellationResult.SerializeToString,
            ),
            'CancelJobSet': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelJobSet,
                    request_deserializer=armada_dot_submit__pb2.JobSetCancelRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'ReprioritizeJobs': grpc.unary_unary_rpc_method_handler(
                    servicer.ReprioritizeJobs,
                    request_deserializer=armada_dot_submit__pb2.JobReprioritizeRequest.FromString,
                    response_serializer=armada_dot_submit__pb2.JobReprioritizeResponse.SerializeToString,
            ),
            'PreemptJobs': grpc.unary_unary_rpc_method_handler(
                    servicer.PreemptJobs,
                    request_deserializer=armada_dot_submit__pb2.JobPreemptRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'CreateQueue': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateQueue,
                    request_deserializer=armada_dot_submit__pb2.Queue.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'CreateQueues': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateQueues,
                    request_deserializer=armada_dot_submit__pb2.QueueList.FromString,
                    response_serializer=armada_dot_submit__pb2.BatchQueueCreateResponse.SerializeToString,
            ),
            'UpdateQueue': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateQueue,
                    request_deserializer=armada_dot_submit__pb2.Queue.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'UpdateQueues': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateQueues,
                    request_deserializer=armada_dot_submit__pb2.QueueList.FromString,
                    response_serializer=armada_dot_submit__pb2.BatchQueueUpdateResponse.SerializeToString,
            ),
            'DeleteQueue': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteQueue,
                    request_deserializer=armada_dot_submit__pb2.QueueDeleteRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetQueue': grpc.unary_unary_rpc_method_handler(
                    servicer.GetQueue,
                    request_deserializer=armada_dot_submit__pb2.QueueGetRequest.FromString,
                    response_serializer=armada_dot_submit__pb2.Queue.SerializeToString,
            ),
            'GetQueues': grpc.unary_stream_rpc_method_handler(
                    servicer.GetQueues,
                    request_deserializer=armada_dot_submit__pb2.StreamingQueueGetRequest.FromString,
                    response_serializer=armada_dot_submit__pb2.StreamingQueueMessage.SerializeToString,
            ),
            'Health': grpc.unary_unary_rpc_method_handler(
                    servicer.Health,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=armada_dot_health__pb2.HealthCheckResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'api.Submit', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('api.Submit', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class Submit(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SubmitJobs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.Submit/SubmitJobs',
            armada_dot_submit__pb2.JobSubmitRequest.SerializeToString,
            armada_dot_submit__pb2.JobSubmitResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CancelJobs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.Submit/CancelJobs',
            armada_dot_submit__pb2.JobCancelRequest.SerializeToString,
            armada_dot_submit__pb2.CancellationResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CancelJobSet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.Submit/CancelJobSet',
            armada_dot_submit__pb2.JobSetCancelRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ReprioritizeJobs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.Submit/ReprioritizeJobs',
            armada_dot_submit__pb2.JobReprioritizeRequest.SerializeToString,
            armada_dot_submit__pb2.JobReprioritizeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PreemptJobs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.Submit/PreemptJobs',
            armada_dot_submit__pb2.JobPreemptRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateQueue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.Submit/CreateQueue',
            armada_dot_submit__pb2.Queue.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateQueues(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.Submit/CreateQueues',
            armada_dot_submit__pb2.QueueList.SerializeToString,
            armada_dot_submit__pb2.BatchQueueCreateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateQueue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.Submit/UpdateQueue',
            armada_dot_submit__pb2.Queue.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateQueues(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.Submit/UpdateQueues',
            armada_dot_submit__pb2.QueueList.SerializeToString,
            armada_dot_submit__pb2.BatchQueueUpdateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteQueue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.Submit/DeleteQueue',
            armada_dot_submit__pb2.QueueDeleteRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetQueue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.Submit/GetQueue',
            armada_dot_submit__pb2.QueueGetRequest.SerializeToString,
            armada_dot_submit__pb2.Queue.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetQueues(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/api.Submit/GetQueues',
            armada_dot_submit__pb2.StreamingQueueGetRequest.SerializeToString,
            armada_dot_submit__pb2.StreamingQueueMessage.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Health(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.Submit/Health',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            armada_dot_health__pb2.HealthCheckResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
