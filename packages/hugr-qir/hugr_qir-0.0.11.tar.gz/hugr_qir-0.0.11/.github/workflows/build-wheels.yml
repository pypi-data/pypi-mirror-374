name: Build/Publish python wheels

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '*'
  merge_group:
    types: [ checks_requested ]
  release:
    types:
      - published
  workflow_dispatch:

permissions:
  contents: read

jobs:
  check-tag:
    name: Check tag
    runs-on: ubuntu-latest
    outputs:
      run: ${{ steps.check-tag.outputs.run }}
    steps:
      - name: Check tag
        id: check-tag
        run: |
          echo "run=$SHOULD_RUN" >> $GITHUB_OUTPUT
        env:
          SHOULD_RUN: ${{ github.event_name != 'release' || ( github.ref_type == 'tag' && startsWith(github.ref, 'refs/tags/hugr-qir-v') ) }}
  build_wheels:
    name: ${{ matrix.os }} wheels
    runs-on: ${{ matrix.os }}
    needs: check-tag
    strategy:
      matrix:
        # macos-13 is an intel runner, macos-14 is apple silicon
        os: [ubuntu-latest, macos-13, macos-14, windows-latest]
      fail-fast: false

    steps:
      - uses: actions/checkout@v4

      - name: Build wheels
        uses: pypa/cibuildwheel@v3.1.2

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl
  sdist:
    needs: check-tag
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [build_wheels, sdist]
    if: ${{ (github.event_name == 'release' && github.ref_type == 'tag' && startsWith(github.ref, 'refs/tags/hugr-qir-v') ) || (github.event_name == 'workflow_dispatch' && github.ref_type == 'tag' && startsWith(github.ref, 'refs/tags/hugr-qir-v') ) }}
    steps:
      - uses: actions/download-artifact@v4
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing wheels-*/*
