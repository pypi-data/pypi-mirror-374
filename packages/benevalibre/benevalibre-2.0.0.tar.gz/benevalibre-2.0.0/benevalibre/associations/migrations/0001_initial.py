# Generated by Django 5.2 on 2025-05-15 12:52

import benevalibre.associations.models
import benevalibre.validators
import django.contrib.auth.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import dynamic_filenames
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('association', '0021_migrate_to_benevalibre_app'),
        ('instance', '0010_migrate_to_benevalibre_app'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.SeparateDatabaseAndState(
            state_operations=[
                migrations.CreateModel(
                    name='ActivityFieldGroup',
                    fields=[
                        ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                        ('name', models.CharField(max_length=255, verbose_name='nom')),
                    ],
                    options={
                        'verbose_name': "groupe de champs d'activité",
                        'verbose_name_plural': "groupes de champs d'activité",
                    },
                ),
                migrations.CreateModel(
                    name='DefaultBenevaloCategory',
                    fields=[
                        ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                        ('name', models.CharField(max_length=255, verbose_name='nom')),
                        ('description', models.TextField(blank=True, verbose_name='description')),
                    ],
                    options={
                        'verbose_name': 'catégorie de bénévolat par défaut',
                        'verbose_name_plural': 'catégories de bénévolat par défaut',
                    },
                ),
                migrations.CreateModel(
                    name='DefaultBenevaloLevel',
                    fields=[
                        ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                        ('name', models.CharField(max_length=255, verbose_name='nom')),
                        ('description', models.TextField(blank=True, verbose_name='description')),
                    ],
                    options={
                        'verbose_name': 'niveau de bénévolat par défaut',
                        'verbose_name_plural': 'niveaux de bénévolat par défaut',
                    },
                ),
                migrations.CreateModel(
                    name='DefaultRole',
                    fields=[
                        ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                        ('name', models.CharField(max_length=255, verbose_name='nom')),
                        ('description', models.TextField(blank=True, verbose_name='description')),
                        ('is_default', models.BooleanField(default=False, help_text='Ce rôle sera attribué automatiquement à chaque nouveau membre.', verbose_name='par défaut')),
                        ('list_members', models.BooleanField(default=False, verbose_name='lister les membres')),
                        ('manage_members', models.BooleanField(default=False, verbose_name='gérer les membres')),
                        ('manage_benevalos', models.BooleanField(default=False, verbose_name='gérer les actions de bénévolat')),
                        ('manage_benevalo_categories', models.BooleanField(default=False, verbose_name='gérer les catégories de bénévolat')),
                        ('manage_benevalo_levels', models.BooleanField(default=False, verbose_name='gérer les niveaux de bénévolat')),
                        ('manage_projects', models.BooleanField(default=False, verbose_name='gérer les projets')),
                        ('manage_roles', models.BooleanField(default=False, verbose_name='gérer les rôles')),
                        ('manage_association', models.BooleanField(default=False, help_text="Cette permission donne à un membre tous les droits de gestion de l'association, entraînant de fait toutes les autres.", verbose_name="gérer l'association")),
                    ],
                    options={
                        'verbose_name': 'rôle par défaut',
                        'verbose_name_plural': 'rôles par défaut',
                    },
                ),
                migrations.CreateModel(
                    name='ActivityField',
                    fields=[
                        ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                        ('name', models.CharField(max_length=255, verbose_name='nom')),
                        ('activity_field_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='activity_fields', related_query_name='activity_field', to='associations.activityfieldgroup', verbose_name="groupe de champs d'activité")),
                    ],
                    options={
                        'verbose_name': "champ d'activité",
                        'verbose_name_plural': "champs d'activité",
                    },
                ),
                migrations.CreateModel(
                    name='Association',
                    fields=[
                        ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                        ('name', models.CharField(max_length=127, verbose_name='nom')),
                        ('description', models.TextField(blank=True, verbose_name='description')),
                        ('website_url', models.URLField(blank=True, verbose_name='adresse du site web')),
                        ('logo', models.ImageField(blank=True, null=True, upload_to=dynamic_filenames.FilePattern(filename_pattern='logos/{uuid:x}{ext}'), verbose_name='logo')),
                        ('is_hidden', models.BooleanField(default=False, help_text="L'association n'apparaitra pas dans la liste, il faudra connaître son URL pour la rejoindre.", verbose_name='cachée')),
                        ('moderate_membership', models.BooleanField(default=False, help_text="Une modération est nécessaire avant qu'un⋅e utilisateur⋅rice ne devienne membre de l'association.", verbose_name="modérer l'inscription des bénévoles")),
                        ('moderate_benevalo', models.BooleanField(default=False, help_text="Une modération est nécessaire avant qu'un⋅e bénévole n'enregistre du bénévolat pour l'association.", verbose_name='modérer la saisie des actions de bénévolats')),
                        ('country', django_countries.fields.CountryField(blank=True, default='FR', max_length=2, verbose_name='pays')),
                        ('postal_code', models.CharField(blank=True, max_length=10, verbose_name='code postal')),
                        ('has_employees', models.BooleanField(blank=True, null=True, verbose_name='a au moins un·e salarié·e')),
                        ('income', models.PositiveIntegerField(blank=True, null=True, verbose_name='revenus moyens annuels (en euros)')),
                        ('is_active', models.BooleanField(default=benevalibre.associations.models.is_registration_opened, editable=False, verbose_name='validée')),
                        ('activity_field', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='associations', related_query_name='association', to='associations.activityfield', verbose_name="champ d'activité")),
                    ],
                    options={
                        'verbose_name': 'association',
                        'verbose_name_plural': 'associations',
                    },
                ),
                migrations.CreateModel(
                    name='AssociationAnonymousMember',
                    fields=[
                        ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                        ('uuid', models.UUIDField(default=uuid.uuid4)),
                        ('name', models.CharField(blank=True, max_length=255, verbose_name='nom')),
                        ('expiration_date', models.DateTimeField(blank=True, null=True, verbose_name="date d'expiration")),
                        ('is_active', models.BooleanField(default=True, help_text="Détermine si l'accès de ce membre anonyme est actif, dans le cas où il n'a pas encore expiré.", verbose_name='actif')),
                        ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='créé le')),
                        ('last_visit', models.DateTimeField(blank=True, null=True, verbose_name='dernière visite')),
                        ('association', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='anonymous_members', related_query_name='anonymous_member', to='associations.association', verbose_name='association')),
                    ],
                    options={
                        'verbose_name': 'membre anonyme',
                        'verbose_name_plural': 'membres anonymes',
                    },
                    bases=(models.Model, django.contrib.auth.models.AnonymousUser),
                ),
                migrations.CreateModel(
                    name='AssociationBenevaloCategory',
                    fields=[
                        ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                        ('name', models.CharField(max_length=255, verbose_name='nom')),
                        ('description', models.TextField(blank=True, verbose_name='description')),
                        ('association', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='benevalo_categories', related_query_name='benevalo_category', to='associations.association', verbose_name='association')),
                        ('default_category', models.ForeignKey(help_text="Ces catégories sont celles proposées par défaut et permettent d'avoir une base commune pour toutes les associations. Si vous êtes amené⋅es à adapter certaines de ces catégories pour votre association, veuillez sélectionner celle dont elle se rattache.", on_delete=django.db.models.deletion.PROTECT, related_name='association_categories', related_query_name='association_category', to='associations.defaultbenevalocategory', verbose_name='catégorie rattachée')),
                    ],
                    options={
                        'verbose_name': 'catégorie de bénévolat',
                        'verbose_name_plural': 'catégories de bénévolat',
                    },
                ),
                migrations.CreateModel(
                    name='AssociationBenevaloLevel',
                    fields=[
                        ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                        ('name', models.CharField(max_length=255, verbose_name='nom')),
                        ('description', models.TextField(blank=True, verbose_name='description')),
                        ('association', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='benevalo_levels', related_query_name='benevalo_level', to='associations.association', verbose_name='association')),
                    ],
                    options={
                        'verbose_name': 'niveau de bénévolat',
                        'verbose_name_plural': 'niveaux de bénévolat',
                    },
                ),
                migrations.CreateModel(
                    name='AssociationMembership',
                    fields=[
                        ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                        ('is_active', models.BooleanField(default=True, editable=False, verbose_name='validé')),
                        ('association', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memberships', related_query_name='membership', to='associations.association', verbose_name='association')),
                        ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memberships', related_query_name='membership', to=settings.AUTH_USER_MODEL, verbose_name='bénévole')),
                    ],
                    options={
                        'verbose_name': "membre d'association",
                        'verbose_name_plural': "membres d'associations",
                    },
                ),
                migrations.AddField(
                    model_name='association',
                    name='members',
                    field=models.ManyToManyField(related_name='associations', related_query_name='association', through='associations.AssociationMembership', to=settings.AUTH_USER_MODEL),
                ),
                migrations.CreateModel(
                    name='AssociationProject',
                    fields=[
                        ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                        ('name', models.CharField(max_length=255, verbose_name='nom')),
                        ('description', models.TextField(blank=True, verbose_name='description')),
                        ('association', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', related_query_name='project', to='associations.association', verbose_name='association')),
                    ],
                    options={
                        'verbose_name': 'projet',
                        'verbose_name_plural': 'projets',
                    },
                ),
                migrations.CreateModel(
                    name='AssociationRole',
                    fields=[
                        ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                        ('name', models.CharField(max_length=255, verbose_name='nom')),
                        ('description', models.TextField(blank=True, verbose_name='description')),
                        ('is_default', models.BooleanField(default=False, help_text='Ce rôle sera attribué automatiquement à chaque nouveau membre.', verbose_name='par défaut')),
                        ('list_members', models.BooleanField(default=False, verbose_name='lister les membres')),
                        ('manage_members', models.BooleanField(default=False, verbose_name='gérer les membres')),
                        ('manage_benevalos', models.BooleanField(default=False, verbose_name='gérer les actions de bénévolat')),
                        ('manage_benevalo_categories', models.BooleanField(default=False, verbose_name='gérer les catégories de bénévolat')),
                        ('manage_benevalo_levels', models.BooleanField(default=False, verbose_name='gérer les niveaux de bénévolat')),
                        ('manage_projects', models.BooleanField(default=False, verbose_name='gérer les projets')),
                        ('manage_roles', models.BooleanField(default=False, verbose_name='gérer les rôles')),
                        ('manage_association', models.BooleanField(default=False, help_text="Cette permission donne à un membre tous les droits de gestion de l'association, entraînant de fait toutes les autres.", verbose_name="gérer l'association")),
                        ('association', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roles', related_query_name='role', to='associations.association', verbose_name='association')),
                    ],
                    options={
                        'verbose_name': 'rôle',
                        'verbose_name_plural': 'rôles',
                    },
                ),
                migrations.AddField(
                    model_name='associationmembership',
                    name='role',
                    field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='memberships', related_query_name='membership', to='associations.associationrole', verbose_name='rôle'),
                ),
                migrations.CreateModel(
                    name='AssociationMigration',
                    fields=[
                        ('association', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='migration', primary_key=True, serialize=False, to='associations.association')),
                        ('message', models.TextField(blank=True, help_text="Ce message sera présenté sur la page de l'association pendant et après la migration.", verbose_name='message')),
                        ('created_at', models.DateField(auto_now_add=True)),
                        ('done_at', models.DateField(null=True)),
                        ('token', models.UUIDField(default=uuid.uuid4, editable=False)),
                        ('is_done', models.BooleanField(default=False, editable=False)),
                        ('destination_url', models.URLField(blank=True)),
                        ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                    ],
                    options={
                        'verbose_name': "migration d'association",
                        'verbose_name_plural': "migrations d'associations",
                    },
                ),
                migrations.AddConstraint(
                    model_name='associationanonymousmember',
                    constraint=models.UniqueConstraint(fields=('association', 'uuid'), name='unique_association_member_uuid'),
                ),
                migrations.AddConstraint(
                    model_name='associationrole',
                    constraint=models.UniqueConstraint(condition=models.Q(('is_default', True)), fields=('association',), name='unique_association_default', violation_error_message="Il ne peut y avoir qu'un rôle par défaut pour l'association."),
                ),
                migrations.AddConstraint(
                    model_name='associationmembership',
                    constraint=models.UniqueConstraint(fields=('association', 'user'), name='unique_association_membership'),
                ),
            ],
            database_operations=[],
        ),
    ]
