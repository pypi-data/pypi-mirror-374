[project]
name = "benevalibre"
dynamic = ["version"]
description = "Facilite la gestion et la valorisation du bénévolat dans les associations"
readme = "README.md"
requires-python = ">=3.10"
authors = [
  { name = "Le comité de pilotage de Bénévalibre" },
]
maintainers = [
  { name = "Cliss XXI", email = "contact@cliss21.com" },
]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Environment :: Web Environment",
  "Framework :: Django :: 5.2",
  "Intended Audience :: Other Audience",
  "License :: OSI Approved :: GNU Affero General Public License v3",
  "Natural Language :: French",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
]
license = "AGPL-3.0-or-later"
license-files = [
  "LICENSE",
  "CONTRIBUTORS.txt",
]

dependencies = [
  "django ~=5.2.0",
  "django-cleanup ~=9.0.0",
  "django-cotton ~=2.1.3",
  "django-countries ~=7.6.1",
  "django-dynamic-filenames ~=1.4.0",
  "django-environ ~=0.12.0",
  "django-filter ==25.1",
  "django-ninja ~=1.4.3",
  "django-reversion ~=5.1.0",
  "django-tables2 ==2.7.5",
  "filetype ~=1.2.0",
  "packaging ~=25.0",
  "pillow >=6.2.1",
  "requests ~=2.32.4",
  "rules ~=3.5.0",
  "sorl-thumbnail ~=12.11.0",
  "tablib[xlsx] ~=3.8.0",
]

[project.urls]
Homepage = "https://benevalibre.org"
Documentation = "https://docs.benevalibre.org"
Repository = "https://forge.cliss21.org/cliss21/benevalibre"
Issues = "https://forge.cliss21.org/cliss21/benevalibre/issues"
Changelog = "https://forge.cliss21.org/cliss21/benevalibre/src/branch/main/CHANGELOG.md"

[dependency-groups]
docs = [
  "mkdocs[i18n] ~=1.6.1",
]
testing = [
  "factory-boy ~=3.3.3",
  "responses ~=0.25.7",
  "time-machine ~=2.16.0",
  "webtest ~=3.0.4",
  "django-webtest ==1.9.13",
  "pytest ~=8.4.1",
  "pytest-django ~=4.11.1",
  "pytest-factoryboy ~=2.8.1",
  "pytest-mock ~=3.14.0",
  # code quality
  "pytest-cov ~=6.2.1",
  "ruff ~=0.12.2",
]
dev = [
  "django-debug-toolbar",
  "django-extensions",
  { include-group = "docs" },
  { include-group = "testing" },
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.version]
path = "benevalibre/__init__.py"

[tool.hatch.build.targets.sdist]
only-include = ["benevalibre"]
artifacts = ["benevalibre/static"]

[tool.hatch.build.targets.wheel]
only-include = ["benevalibre"]
artifacts = ["benevalibre/static"]

[tool.ruff]
extend-exclude = [
  "assets",
  "var",
  "benevalibre/**/migrations/*.py",
]
line-length = 80

[tool.ruff.lint]
select = [
  "BLE", # flake8-blind-except
  "C4",  # flake8-comprehensions
  "DJ",  # flake8-django
  "E",   # pycodestyle
  "F",   # pyflakes
  "I",   # isort
  "T20", # flake8-print
  "W",   # pycodestyle
]

[tool.ruff.lint.per-file-ignores]
"benevalibre/**/migrations/*.py" = ["E501", "I001"]

[tool.ruff.lint.isort]
known-first-party = ["benevalibre", "tests"]
section-order = [
  "future",
  "standard-library",
  "django",
  "third-party",
  "first-party",
  "local-folder",
]

[tool.ruff.lint.isort.sections]
django = ["django"]

[tool.pytest.ini_options]
testpaths = ["tests"]
markers = ["wip: mark a test as a work in progress"]
DJANGO_SETTINGS_MODULE = "benevalibre.settings.test"

[tool.coverage.run]
branch = true
source = ["benevalibre"]
omit = [
  "benevalibre/**/migrations/*",
  "benevalibre/settings/*",
  "benevalibre/views/styleguide.py",
  "benevalibre/wsgi.py",
]

[tool.coverage.report]
exclude_lines = [
  "# pragma: no cover",
  "if settings.DEBUG:",
  "raise NotImplementedError",
]
show_missing = true
