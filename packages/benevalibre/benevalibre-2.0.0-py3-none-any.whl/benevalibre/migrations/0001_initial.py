# Generated by Django 5.2 on 2025-05-15 12:52

import benevalibre.validators
import datetime
import django.contrib.auth.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('benevalo', '0008_migrate_to_benevalibre_app'),
        ('instance', '0010_migrate_to_benevalibre_app'),
        ('associations', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.SeparateDatabaseAndState(
            state_operations=[
                migrations.CreateModel(
                    name='InstanceSettings',
                    fields=[
                        ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                        ('site_name', models.CharField(default='Bénévalibre', help_text="Ce nom est notamment utilisé dans les courriels envoyés par l'application, ainsi que dans l'en-tête des pages.", max_length=150, verbose_name="nom de l'instance")),
                        ('terms_of_use_file', models.FileField(blank=True, null=True, upload_to='terms', validators=[benevalibre.validators.FileTypeValidator(allowed_types=['application/pdf'], message='Veuillez choisir un fichier PDF valide.')], verbose_name="charte d'utilisation")),
                    ],
                    options={
                        'verbose_name': "paramètres de l'instance",
                    },
                ),
                migrations.CreateModel(
                    name='Announcement',
                    fields=[
                        ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                        ('title', models.CharField(max_length=200, verbose_name='titre')),
                        ('content', models.TextField(blank=True, verbose_name='contenu')),
                        ('target', models.CharField(choices=[('ALL', 'Tout le monde'), ('MNG', "Les responsables d'association")], default='ALL', max_length=3, verbose_name='cible')),
                        ('publication_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date de publication')),
                        ('expiration_date', models.DateTimeField(blank=True, null=True, verbose_name="date d'expiration")),
                        ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='auteur·e')),
                    ],
                    options={
                        'verbose_name': 'annonce',
                        'verbose_name_plural': 'annonces',
                    },
                ),
                migrations.CreateModel(
                    name='Benevalo',
                    fields=[
                        ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                        ('date', models.DateField(default=datetime.date.today, validators=[django.core.validators.MinValueValidator(datetime.date(2000, 1, 1), message='Veuillez choisir une date à partir du 01/01/2000.'), django.core.validators.MaxValueValidator(datetime.date.today, message='Veuillez choisir une date antérieure à demain.')], verbose_name='date')),
                        ('end_date', models.DateField(blank=True, help_text='Dans le cas où cette action se passe sur plusieurs jours.', null=True, verbose_name='date de fin')),
                        ('title', models.CharField(help_text='Une courte description de cette action.', max_length=127, verbose_name='titre')),
                        ('description', models.TextField(blank=True, verbose_name='description')),
                        ('distance', models.DecimalField(blank=True, decimal_places=2, help_text='La distance parcourue lors de cette action.', max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='distance (en km)')),
                        ('duration', models.DurationField(help_text='Le temps consacré à cette action.', verbose_name='durée')),
                        ('is_active', models.BooleanField(default=True, editable=False, verbose_name='validée')),
                        ('anonymous_member', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='benevalos', related_query_name='benevalo', to='associations.associationanonymousmember', verbose_name='membre anonyme')),
                        ('association', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='benevalos', related_query_name='benevalo', to='associations.association', verbose_name='association')),
                        ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='benevalos', related_query_name='benevalo', to='associations.associationbenevalocategory', verbose_name='catégorie')),
                        ('level', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='benevalos', related_query_name='benevalo', to='associations.associationbenevalolevel', verbose_name='niveau')),
                        ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='benevalos', related_query_name='benevalo', to='associations.associationproject', verbose_name='projet')),
                        ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='benevalos', related_query_name='benevalo', to=settings.AUTH_USER_MODEL, verbose_name='utilisateur⋅rice')),
                    ],
                    options={
                        'verbose_name': 'action de bénévolat',
                        'verbose_name_plural': 'actions de bénévolat',
                    },
                ),
            ],
            database_operations=[],
        ),
    ]
