# Generated by Django 2.2.2 on 2019-06-07 07:51

import benevalibre.accounts.models
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='prénom')),
                ('last_name', models.CharField(blank=True, max_length=50, verbose_name='nom')),
                ('pseudo', models.CharField(blank=True, max_length=30, verbose_name='pseudo')),
                ('email', models.EmailField(error_messages={'unique': 'Un compte avec cette adresse mail existe déjà.'}, max_length=254, unique=True, verbose_name='adresse mail')),
                ('is_active', models.BooleanField(default=True, help_text="Détermine si le compte utilisat⋅eur⋅rice doit être considéré comme actif dans l'application. Vous pouvez le désactiver plutôt que de le supprimer.", verbose_name='actif')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name="date d'inscription")),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'compte utilisat⋅eur⋅rice',
                'verbose_name_plural': 'comptes utilisat⋅eurs⋅rices',
                'ordering': ('last_name', 'first_name', 'pseudo'),
            },
            managers=[
                ('objects', benevalibre.accounts.models.UserManager()),
            ],
        ),
    ]
