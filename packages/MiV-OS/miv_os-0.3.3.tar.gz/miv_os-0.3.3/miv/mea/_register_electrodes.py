import numpy as np
from channel_mapping import MEA128
from miv_os_contrib.mea.utils import create_yaml

# create_yaml(
#     "electrodes/128_rhs",
#     MEA128(map_key="128_dual_connector_two_64_rhd").mea_intan,
#     pitch=[200, 200],
#     size=30,
#     description="128 MEA with RHS chips",
# )
# create_yaml(
#     "electrodes/128_dual_connector_two_64_rhd",
#     mea_map["128_dual_connector_two_64_rhd"],
#     pitch=[200, 200],
#     size=30,
#     description="128 MEA with two dual connector. Intan RHD chip",
# )
# create_yaml(
#     "electrodes/64_intanRHS",
#     mea_map["64_intanRHS"],
#     pitch=[200, 200],
#     size=30,
#     description="64 MEA commercial from MCS, standard. Intan RHS chip",
# )
# create_yaml(
#     "electrodes/64_intanRHD",
#     mea_map["64_intanRHD"],
#     pitch=[200, 200],
#     size=30,
#     description="64 MEA commercial from MCS, standard. Intan RHD chip",
# )
#
# create_yaml(
#     "electrodes/128_longMEA_rhd",
#     mea_map["128_longMEA_rhd"],
#     pitch=[60, 60],
#     size=15,
#     description="128 Long-MEA. Intan RHD chip",
# )
# create_yaml(
#     "electrodes/128_longMEA_rhs",
#     mea_map["128_longMEA_rhs"],
#     pitch=[60, 60],
#     size=15,
#     description="128 Long-MEA. Intan RHS chip",
# )
#
# create_yaml(
#     "electrodes/512_rhd",
#     mea_map["512_rhd"],
#     pitch=[150, 150],
#     size=30,
#     description="512 standard MEA. Four Intan RHD 128 chip",
# )

arr = np.array(
    [
        [178, 79, 177, 80, 208, 49, 207, 50],
        [179, 78, 77, 180, 52, 205, 206, 51],
        [181, 76, 75, 182, 54, 203, 204, 53],
        [183, 74, 73, 184, 56, 201, 202, 55],
        [185, 72, 71, 186, 58, 199, 200, 57],
        [187, 70, 69, 188, 60, 197, 198, 59],
        [189, 68, 67, 190, 62, 195, 194, 61],
        [191, 66, 65, 192, 64, 255, 196, 63],
        [129, 128, 127, 130, 2, 193, 256, 1],
        [131, 126, 125, 132, 4, 253, 252, 3],
        [133, 124, 123, 134, 6, 249, 254, 5],
        [135, 122, 121, 136, 8, 251, 250, 7],
        [137, 120, 119, 138, 10, 247, 246, 9],
        [139, 118, 117, 140, 12, 243, 248, 11],
        [141, 116, 115, 142, 14, 245, 244, 13],
        [143, 114, 113, 144, 16, 241, 242, 15],
        [145, 112, 111, 146, 18, 239, 240, 17],
        [147, 110, 109, 148, 20, 237, 238, 19],
        [149, 108, 107, 150, 22, 235, 236, 21],
        [151, 106, 105, 152, 24, 233, 234, 23],
        [153, 104, 103, 154, 26, 231, 232, 25],
        [155, 102, 101, 156, 28, 229, 230, 27],
        [157, 100, 99, 158, 30, 227, 228, 29],
        [159, 98, 97, 160, 32, 225, 226, 31],
        [161, 96, 95, 162, 34, 223, 224, 33],
        [163, 94, 93, 164, 36, 221, 222, 35],
        [165, 92, 91, 166, 38, 219, 220, 37],
        [167, 90, 89, 168, 40, 217, 218, 39],
        [169, 88, 87, 170, 42, 215, 216, 41],
        [171, 86, 85, 172, 44, 213, 214, 43],
        [173, 84, 83, 174, 46, 211, 212, 45],
        [175, 82, 81, 176, 48, 209, 210, 47],
        [466, 304, 303, 467, 339, 431, 432, 338],
        [300, 469, 470, 465, 337, 342, 341, 428],
        [302, 473, 465, 301, 429, 340, 345, 430],
        [298, 471, 472, 297, 425, 344, 343, 426],
        [294, 475, 476, 299, 427, 248, 247, 422],
        [296, 479, 474, 295, 423, 346, 351, 424],
        [292, 477, 478, 291, 419, 350, 349, 420],
        [288, 482, 482, 293, 421, 354, 353, 416],
        [290, 485, 480, 289, 417, 352, 357, 418],
        [286, 483, 484, 285, 413, 356, 355, 414],
        [282, 487, 488, 287, 415, 360, 259, 410],
        [284, 491, 480, 283, 411, 358, 363, 412],
        [280, 489, 490, 279, 407, 362, 361, 408],
        [276, 493, 494, 281, 409, 366, 365, 404],
        [278, 273, 492, 277, 405, 364, 401, 406],
        [495, 275, 274, 496, 368, 402, 403, 367],
        [498, 272, 271, 499, 371, 399, 400, 370],
        [268, 501, 502, 497, 369, 374, 373, 398],
        [270, 505, 500, 269, 397, 372, 377, 396],
        [266, 503, 504, 265, 395, 376, 375, 394],
        [262, 507, 508, 267, 393, 380, 379, 392],
        [264, 511, 506, 263, 391, 378, 383, 390],
        [260, 509, 510, 259, 389, 382, 381, 388],
        [320, 449, 450, 261, 387, 322, 321, 386],
        [258, 453, 512, 257, 385, 384, 325, 448],
        [318, 451, 452, 317, 447, 324, 323, 446],
        [314, 455, 456, 319, 445, 328, 327, 442],
        [316, 459, 454, 315, 443, 326, 331, 444],
        [312, 457, 458, 311, 439, 330, 329, 440],
        [308, 461, 462, 313, 441, 334, 333, 436],
        [310, 305, 460, 309, 437, 332, 433, 438],
        [464, 306, 463, 307, 435, 335, 434, 336],
    ]
)

a, c = np.unique(arr, return_counts=True)
print(set(range(1, 512 + 1)) - set(a))

create_yaml(
    "electrodes/512_long_mea_6x",
    arr,  # Algorithm use 1 index
    pitch=[200, 200],
    size=30,
    description="Long mea with 512 electrodes, 6x size, 8x64 grid. 64 columns arranged from side s2 to s4, 8 rows arranged from side s3 to s1",
)
