<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 2023 CS GROUP

  Licensed to CS GROUP (CS) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  CS licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at
  
    http://www.apache.org/licenses/LICENSE-2.0
  
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<xs:schema xmlns:dfdl="http://www.ogf.org/dfdl/dfdl-1.0/"
  xmlns:xs="http://www.w3.org/2001/XMLSchema"
  xmlns:tns="urn:spacePacket"
  targetNamespace="urn:spacePacket">

  <xs:include schemaLocation="DFDLGeneralFormat.dfdl.xsd"/>

  <xs:annotation>
    <xs:appinfo source="http://www.ogf.org/dfdl/">

      <dfdl:defineFormat name="SpacePacketFormat">
        <dfdl:format ref="tns:GeneralFormat"
                     alignment="1"
                     alignmentUnits="bits"
                     binaryBooleanFalseRep="0"
                     binaryBooleanTrueRep="1"
                     lengthKind="implicit"
                     lengthUnits="bits"
                     occursCountKind="implicit"
                     representation="binary"
                     bitOrder="mostSignificantBitFirst"
                     byteOrder="bigEndian"
                   />
      </dfdl:defineFormat>

      <dfdl:format ref="SpacePacketFormat"/>

    </xs:appinfo>
  </xs:annotation>

  <xs:simpleType name="bit8"
                 dfdl:lengthKind="explicit"
                 dfdl:lengthUnits="bits">
    <xs:restriction base="xs:unsignedByte" />
  </xs:simpleType>

  <xs:simpleType name="bit16"
                 dfdl:lengthKind="explicit"
                 dfdl:lengthUnits="bits">
    <xs:restriction base="xs:unsignedShort" />
  </xs:simpleType>

  <xs:simpleType name="bit32"
                 dfdl:lengthKind="explicit"
                 dfdl:lengthUnits="bits">
    <xs:restriction base="xs:unsignedInt" />
  </xs:simpleType>

  <xs:simpleType name="hexBytes" dfdl:lengthKind="explicit" dfdl:lengthUnits="bytes">
    <xs:restriction base="xs:hexBinary" />
  </xs:simpleType>

  <xs:simpleType name="uint8" dfdl:lengthKind="explicit" dfdl:length="8">
    <xs:restriction base="xs:unsignedByte"/>
  </xs:simpleType>

  <xs:simpleType name="uint16" dfdl:lengthKind="explicit" dfdl:length="16">
    <xs:restriction base="xs:unsignedShort"/>
  </xs:simpleType>

  <xs:simpleType name="int16" dfdl:lengthKind="explicit" dfdl:length="16">
    <xs:restriction base="xs:short"/>
  </xs:simpleType>

  <xs:simpleType name="uint32" dfdl:lengthKind="explicit" dfdl:length="32">
    <xs:restriction base="xs:unsignedInt"/>
  </xs:simpleType>

  <xs:simpleType name="int32" dfdl:lengthKind="explicit" dfdl:length="32">
    <xs:restriction base="xs:int"/>
  </xs:simpleType>

  <xs:simpleType name="float32" dfdl:lengthKind="explicit" dfdl:length="4" dfdl:lengthUnits="bytes">
    <xs:restriction base="xs:float"/>
  </xs:simpleType>

  <xs:simpleType name="float64" dfdl:lengthKind="explicit" dfdl:length="8" dfdl:lengthUnits="bytes">
    <xs:restriction base="xs:double"/>
  </xs:simpleType>

  <xs:complexType name="mainHeaderType">
    <xs:sequence>
      <xs:element name="packetVersionNumber" type="tns:bit8" fixed="0" dfdl:length="3">
        <xs:annotation>
          <xs:documentation>constant value = 000 (3 bits)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="packetType" type="tns:bit8" fixed="0" dfdl:length="1">
        <xs:annotation>
          <xs:documentation>constant value = 0 (1 bit)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dataFieldHeaderFlag" type="tns:bit8" fixed="1" dfdl:length="1">
        <xs:annotation>
          <xs:documentation> constant value = 0 (1 bit)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PID" type="tns:bit8" dfdl:length="7">
        <xs:annotation>
          <xs:documentation>function of instrument / mode (7 bits)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PCAT" type="tns:bit8" dfdl:length="4">
        <xs:annotation>
          <xs:documentation>function of instrument / mode (4 bits)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="groupingFlags" type="tns:bit8" fixed="3" dfdl:length="2">
        <xs:annotation>
          <xs:documentation>constant value = 3 (2 bit)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sequenceCount" type="tns:bit16" dfdl:length="14">
        <xs:annotation>
          <xs:documentation>variable value = 0 to 16383 (wraps to 0) (14 bits)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="packetLength" type="tns:uint16">
        <xs:annotation>
          <xs:documentation>number of forthcoming bytes till the end of the packet -1 (2 bytes)
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!-- === End of mainHeaderType === -->

  <!--dataField is sometimes called secondary header, just before the source 
    data (12 bytes) -->
  <!--It also is named PUS (Packet Utilization Standard) -->
  <!-- ====================================================================== -->
  <xs:complexType name="dataFieldHeaderType">
    <xs:sequence>
      <xs:element name="spareBit" type="tns:bit8" fixed="0" dfdl:length="1">
        <xs:annotation>
          <xs:documentation>constant value = 0 (1 bit)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PUSversion" type="tns:bit8" fixed="1" dfdl:length="3">
        <xs:annotation>
          <xs:documentation>constant value = 1 (3 bits)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="spare4Bit" type="tns:bit8" fixed="0" dfdl:length="4">
        <xs:annotation>
          <xs:documentation>constant value = 0 (4 bit)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="servicePacketType" type="tns:uint8">
        <xs:annotation>
          <xs:documentation>function of instrument / mode (8 bits)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="servicePacketSubType" type="tns:uint8">
        <xs:annotation>
          <xs:documentation>function of instrument / mode (8 bits)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="destinationID" type="tns:uint8" fixed="0">
        <xs:annotation>
          <xs:documentation>this is fixed to 0 by S3-SC-IF5-REQ-016 (8 bits)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="time" type="tns:cucTime"/>
      <xs:element name="timeStatus" type="tns:uint8">
        <xs:annotation>
          <xs:documentation>0 or 1 if in OBT is in sync or not with GPS (8 bits)</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!-- === End of dataFieldHeaderType === -->

  <!-- here comes TIME, which has format CUC = coarse (32bit), fine (24 bits) 
    = 7 bytes (56 bits) -->
  <xs:complexType name="cucTime">
    <xs:sequence>
      <xs:element name="coarse" type="tns:uint32">
        <xs:annotation>
          <xs:documentation>coarse, over-second, interger seconds (32 bits)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="fine" type="tns:bit32" dfdl:length="24">
        <xs:annotation>
          <xs:documentation>fine time, sub-seconds (24 bits)</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:simpleType name="crcType">
    <xs:annotation>
      <xs:documentation> crc (primaryheader + secondaryheader + sourcedata) (2 bytes)
      </xs:documentation>
      </xs:annotation>
    <xs:restriction base="tns:uint16"/>
  </xs:simpleType>

</xs:schema>
