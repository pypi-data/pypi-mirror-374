[build-system]
requires = ["hatchling>=1.25.0", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "codeclinic"
dynamic = ["version"]
description = "X-ray your Python project: import graph + stub maturity metrics + Graphviz viz + CLI"
readme = "README.md"
authors = [{ name = "CodeClinic Team", email = "codeclinic@example.com" }]
license = { text = "MIT" }
requires-python = ">=3.8"
dependencies = [
  "graphviz>=0.20.1",
  "tomli>=2.0.1; python_version < '3.11'",
]
keywords = ["import", "dependency", "analysis", "graphviz", "metrics", "stub", "visualization", "ast"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Quality Assurance",
]

[project.urls]
Homepage = "https://github.com/Scienith/code-clinic"
Repository = "https://github.com/Scienith/code-clinic"
Issues = "https://github.com/Scienith/code-clinic/issues"
Documentation = "https://github.com/Scienith/code-clinic#readme"

[project.scripts]
codeclinic = "codeclinic.cli:main"

[tool.hatch.build.targets.wheel]
packages = ["src/codeclinic"]

[tool.hatch.build.targets.sdist]
include = [
  "/src",
  "/pyproject.toml",
  "/README.md",
  "/PUBLISH.md",
  "/CHANGELOG.md",
]
exclude = [
  "/.claude",
  "/.grimp_cache",
  "/example_project",
  "/test_*.py",
  "/debug_*.py",
  "/venv",
  "*.svg",
  "*.dot",
]

[tool.codeclinic]
# Default config values (can be overridden via CLI or local files)
# Root(s) to scan; CLI --path overrides this
paths = ["src", "."]
# Glob-like includes/excludes (relative to each path)
include = ["**/*.py"]
exclude = ["**/tests/**", "**/.venv/**", "**/venv/**", "**/__pycache__/**", "**/build/**", "**/dist/**"]
# Aggregate nodes as "module" (file) or "package" (folder)
aggregate = "module"
# Graphviz output
format = "svg"
output = "codeclinic_results"
# Count private functions (prefixed with _) in metrics?
count_private = false

[tool.hatch.version]
source = "vcs"
