# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'plover_cat\plover_cat.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_PloverCAT(object):
    def setupUi(self, PloverCAT):
        PloverCAT.setObjectName("PloverCAT")
        PloverCAT.resize(881, 689)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(PloverCAT.sizePolicy().hasHeightForWidth())
        PloverCAT.setSizePolicy(sizePolicy)
        PloverCAT.setMinimumSize(QtCore.QSize(32, 0))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(160, 160, 160))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(160, 160, 160))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(160, 160, 160))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.AlternateBase, brush)
        PloverCAT.setPalette(palette)
        font = QtGui.QFont()
        font.setPointSize(8)
        PloverCAT.setFont(font)
        PloverCAT.setDockNestingEnabled(True)
        self.centralwidget = QtWidgets.QWidget(PloverCAT)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout_24 = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout_24.setObjectName("verticalLayout_24")
        self.mainTabs = QtWidgets.QTabWidget(self.centralwidget)
        self.mainTabs.setFocusPolicy(QtCore.Qt.NoFocus)
        self.mainTabs.setTabPosition(QtWidgets.QTabWidget.North)
        self.mainTabs.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.mainTabs.setDocumentMode(True)
        self.mainTabs.setTabsClosable(True)
        self.mainTabs.setTabBarAutoHide(False)
        self.mainTabs.setObjectName("mainTabs")
        self.homeTab = QtWidgets.QWidget()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.homeTab.sizePolicy().hasHeightForWidth())
        self.homeTab.setSizePolicy(sizePolicy)
        self.homeTab.setObjectName("homeTab")
        self.verticalLayout_21 = QtWidgets.QVBoxLayout(self.homeTab)
        self.verticalLayout_21.setObjectName("verticalLayout_21")
        self.flowparent = QtWidgets.QVBoxLayout()
        self.flowparent.setObjectName("flowparent")
        self.label_39 = QtWidgets.QLabel(self.homeTab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_39.sizePolicy().hasHeightForWidth())
        self.label_39.setSizePolicy(sizePolicy)
        self.label_39.setTextFormat(QtCore.Qt.PlainText)
        self.label_39.setWordWrap(True)
        self.label_39.setObjectName("label_39")
        self.flowparent.addWidget(self.label_39)
        self.recentfileflow = QtWidgets.QHBoxLayout()
        self.recentfileflow.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.recentfileflow.setObjectName("recentfileflow")
        self.flowparent.addLayout(self.recentfileflow)
        self.verticalLayout_21.addLayout(self.flowparent)
        self.mainTabs.addTab(self.homeTab, "")
        self.verticalLayout_24.addWidget(self.mainTabs)
        PloverCAT.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(PloverCAT)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 881, 21))
        self.menubar.setNativeMenuBar(False)
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setToolTipsVisible(True)
        self.menuFile.setObjectName("menuFile")
        self.menuExport_as = QtWidgets.QMenu(self.menuFile)
        self.menuExport_as.setToolTipsVisible(True)
        self.menuExport_as.setObjectName("menuExport_as")
        self.menuRecentFiles = QtWidgets.QMenu(self.menuFile)
        self.menuRecentFiles.setObjectName("menuRecentFiles")
        self.menuEdit = QtWidgets.QMenu(self.menubar)
        self.menuEdit.setToolTipsVisible(True)
        self.menuEdit.setObjectName("menuEdit")
        self.menuClipboard = QtWidgets.QMenu(self.menuEdit)
        self.menuClipboard.setObjectName("menuClipboard")
        self.menuAudio = QtWidgets.QMenu(self.menubar)
        self.menuAudio.setToolTipsVisible(True)
        self.menuAudio.setObjectName("menuAudio")
        self.menuView = QtWidgets.QMenu(self.menubar)
        self.menuView.setToolTipsVisible(True)
        self.menuView.setObjectName("menuView")
        self.menuDocks = QtWidgets.QMenu(self.menuView)
        self.menuDocks.setObjectName("menuDocks")
        self.menuHighlightColors = QtWidgets.QMenu(self.menuView)
        self.menuHighlightColors.setObjectName("menuHighlightColors")
        self.menuDictionary = QtWidgets.QMenu(self.menubar)
        self.menuDictionary.setToolTipsVisible(True)
        self.menuDictionary.setObjectName("menuDictionary")
        self.menuHelp = QtWidgets.QMenu(self.menubar)
        self.menuHelp.setToolTipsVisible(True)
        self.menuHelp.setObjectName("menuHelp")
        self.menuDiagnostics = QtWidgets.QMenu(self.menuHelp)
        self.menuDiagnostics.setObjectName("menuDiagnostics")
        self.menuSteno_Actions = QtWidgets.QMenu(self.menubar)
        self.menuSteno_Actions.setToolTipsVisible(True)
        self.menuSteno_Actions.setObjectName("menuSteno_Actions")
        self.menuStyling = QtWidgets.QMenu(self.menubar)
        self.menuStyling.setToolTipsVisible(True)
        self.menuStyling.setObjectName("menuStyling")
        self.menuParagraphStyle = QtWidgets.QMenu(self.menuStyling)
        self.menuParagraphStyle.setObjectName("menuParagraphStyle")
        self.menuInsert = QtWidgets.QMenu(self.menubar)
        self.menuInsert.setToolTipsVisible(True)
        self.menuInsert.setObjectName("menuInsert")
        self.menuField = QtWidgets.QMenu(self.menuInsert)
        self.menuField.setObjectName("menuField")
        self.menuIndexEntry = QtWidgets.QMenu(self.menuInsert)
        self.menuIndexEntry.setObjectName("menuIndexEntry")
        self.menuTools = QtWidgets.QMenu(self.menubar)
        self.menuTools.setToolTipsVisible(True)
        self.menuTools.setObjectName("menuTools")
        PloverCAT.setMenuBar(self.menubar)
        self.statusBar = QtWidgets.QStatusBar(PloverCAT)
        self.statusBar.setObjectName("statusBar")
        PloverCAT.setStatusBar(self.statusBar)
        self.toolbarFile = QtWidgets.QToolBar(PloverCAT)
        self.toolbarFile.setToolTip("")
        self.toolbarFile.setObjectName("toolbarFile")
        PloverCAT.addToolBar(QtCore.Qt.TopToolBarArea, self.toolbarFile)
        self.dockPaper = QtWidgets.QDockWidget(PloverCAT)
        self.dockPaper.setMinimumSize(QtCore.QSize(100, 142))
        self.dockPaper.setWhatsThis("")
        self.dockPaper.setAccessibleDescription("")
        self.dockPaper.setObjectName("dockPaper")
        self.dockWidgetContents = QtWidgets.QWidget()
        self.dockWidgetContents.setObjectName("dockWidgetContents")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.dockWidgetContents)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.strokeList = QtWidgets.QPlainTextEdit(self.dockWidgetContents)
        self.strokeList.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Courier New")
        font.setPointSize(8)
        self.strokeList.setFont(font)
        self.strokeList.setFocusPolicy(QtCore.Qt.NoFocus)
        self.strokeList.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.strokeList.setUndoRedoEnabled(False)
        self.strokeList.setLineWrapMode(QtWidgets.QPlainTextEdit.NoWrap)
        self.strokeList.setReadOnly(True)
        self.strokeList.setPlainText("")
        self.strokeList.setTabStopDistance(50.0)
        self.strokeList.setTextInteractionFlags(QtCore.Qt.TextSelectableByKeyboard|QtCore.Qt.TextSelectableByMouse)
        self.strokeList.setObjectName("strokeList")
        self.verticalLayout_4.addWidget(self.strokeList)
        self.horizontalLayout_9 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_9.setObjectName("horizontalLayout_9")
        self.strokeLocate = QtWidgets.QPushButton(self.dockWidgetContents)
        self.strokeLocate.setFocusPolicy(QtCore.Qt.NoFocus)
        self.strokeLocate.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.strokeLocate.setObjectName("strokeLocate")
        self.horizontalLayout_9.addWidget(self.strokeLocate)
        self.verticalLayout_4.addLayout(self.horizontalLayout_9)
        self.dockPaper.setWidget(self.dockWidgetContents)
        PloverCAT.addDockWidget(QtCore.Qt.DockWidgetArea(1), self.dockPaper)
        self.dockSuggest = QtWidgets.QDockWidget(PloverCAT)
        self.dockSuggest.setMinimumSize(QtCore.QSize(185, 139))
        self.dockSuggest.setObjectName("dockSuggest")
        self.dockWidgetContents_3 = QtWidgets.QWidget()
        self.dockWidgetContents_3.setObjectName("dockWidgetContents_3")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.dockWidgetContents_3)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.horizontalLayout_18 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_18.setObjectName("horizontalLayout_18")
        self.suggest_source = QtWidgets.QComboBox(self.dockWidgetContents_3)
        self.suggest_source.setMinimumSize(QtCore.QSize(80, 0))
        self.suggest_source.setMaximumSize(QtCore.QSize(100, 16777215))
        self.suggest_source.setMouseTracking(True)
        self.suggest_source.setObjectName("suggest_source")
        self.suggest_source.addItem("")
        self.suggest_source.addItem("")
        self.horizontalLayout_18.addWidget(self.suggest_source)
        self.suggest_sort = QtWidgets.QRadioButton(self.dockWidgetContents_3)
        self.suggest_sort.setFocusPolicy(QtCore.Qt.NoFocus)
        self.suggest_sort.setObjectName("suggest_sort")
        self.horizontalLayout_18.addWidget(self.suggest_sort)
        self.verticalLayout_2.addLayout(self.horizontalLayout_18)
        self.suggestTable = QtWidgets.QTableWidget(self.dockWidgetContents_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.suggestTable.sizePolicy().hasHeightForWidth())
        self.suggestTable.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Consolas")
        font.setPointSize(8)
        self.suggestTable.setFont(font)
        self.suggestTable.setFocusPolicy(QtCore.Qt.NoFocus)
        self.suggestTable.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.suggestTable.setRowCount(0)
        self.suggestTable.setObjectName("suggestTable")
        self.suggestTable.setColumnCount(0)
        self.suggestTable.horizontalHeader().setVisible(False)
        self.suggestTable.horizontalHeader().setSortIndicatorShown(False)
        self.suggestTable.verticalHeader().setVisible(False)
        self.verticalLayout_2.addWidget(self.suggestTable)
        self.dockSuggest.setWidget(self.dockWidgetContents_3)
        PloverCAT.addDockWidget(QtCore.Qt.DockWidgetArea(1), self.dockSuggest)
        self.dockAudio = QtWidgets.QDockWidget(PloverCAT)
        self.dockAudio.setMinimumSize(QtCore.QSize(261, 100))
        self.dockAudio.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.dockAudio.setFeatures(QtWidgets.QDockWidget.AllDockWidgetFeatures)
        self.dockAudio.setObjectName("dockAudio")
        self.dockWidgetContents_4 = QtWidgets.QWidget()
        self.dockWidgetContents_4.setObjectName("dockWidgetContents_4")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.dockWidgetContents_4)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.audio_label = QtWidgets.QLabel(self.dockWidgetContents_4)
        self.audio_label.setObjectName("audio_label")
        self.verticalLayout_6.addWidget(self.audio_label)
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.playRate = QtWidgets.QDoubleSpinBox(self.dockWidgetContents_4)
        self.playRate.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.playRate.sizePolicy().hasHeightForWidth())
        self.playRate.setSizePolicy(sizePolicy)
        self.playRate.setMinimumSize(QtCore.QSize(0, 0))
        self.playRate.setFocusPolicy(QtCore.Qt.NoFocus)
        self.playRate.setMinimum(0.05)
        self.playRate.setMaximum(2.0)
        self.playRate.setSingleStep(0.05)
        self.playRate.setProperty("value", 1.0)
        self.playRate.setObjectName("playRate")
        self.horizontalLayout_7.addWidget(self.playRate)
        self.audioDelay = QtWidgets.QSpinBox(self.dockWidgetContents_4)
        self.audioDelay.setEnabled(False)
        self.audioDelay.setFocusPolicy(QtCore.Qt.NoFocus)
        self.audioDelay.setMinimum(-10000)
        self.audioDelay.setMaximum(10000)
        self.audioDelay.setSingleStep(100)
        self.audioDelay.setObjectName("audioDelay")
        self.horizontalLayout_7.addWidget(self.audioDelay)
        self.audio_curr_pos = QtWidgets.QLabel(self.dockWidgetContents_4)
        self.audio_curr_pos.setObjectName("audio_curr_pos")
        self.horizontalLayout_7.addWidget(self.audio_curr_pos)
        self.audio_seeker = QtWidgets.QSlider(self.dockWidgetContents_4)
        self.audio_seeker.setEnabled(False)
        self.audio_seeker.setFocusPolicy(QtCore.Qt.NoFocus)
        self.audio_seeker.setOrientation(QtCore.Qt.Horizontal)
        self.audio_seeker.setObjectName("audio_seeker")
        self.horizontalLayout_7.addWidget(self.audio_seeker)
        self.audio_duration = QtWidgets.QLabel(self.dockWidgetContents_4)
        self.audio_duration.setObjectName("audio_duration")
        self.horizontalLayout_7.addWidget(self.audio_duration)
        self.verticalLayout_6.addLayout(self.horizontalLayout_7)
        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_6.addItem(spacerItem)
        self.videoLayout = QtWidgets.QVBoxLayout()
        self.videoLayout.setObjectName("videoLayout")
        self.verticalLayout_6.addLayout(self.videoLayout)
        self.dockAudio.setWidget(self.dockWidgetContents_4)
        PloverCAT.addDockWidget(QtCore.Qt.DockWidgetArea(8), self.dockAudio)
        self.dockProp = QtWidgets.QDockWidget(PloverCAT)
        self.dockProp.setEnabled(True)
        self.dockProp.setMinimumSize(QtCore.QSize(137, 165))
        self.dockProp.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.dockProp.setFloating(False)
        self.dockProp.setFeatures(QtWidgets.QDockWidget.AllDockWidgetFeatures)
        self.dockProp.setObjectName("dockProp")
        self.dockWidgetContents_5 = QtWidgets.QWidget()
        self.dockWidgetContents_5.setObjectName("dockWidgetContents_5")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.dockWidgetContents_5)
        self.verticalLayout.setObjectName("verticalLayout")
        self.tabWidget = QtWidgets.QTabWidget(self.dockWidgetContents_5)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tabWidget.sizePolicy().hasHeightForWidth())
        self.tabWidget.setSizePolicy(sizePolicy)
        self.tabWidget.setFocusPolicy(QtCore.Qt.NoFocus)
        self.tabWidget.setTabPosition(QtWidgets.QTabWidget.East)
        self.tabWidget.setElideMode(QtCore.Qt.ElideNone)
        self.tabWidget.setUsesScrollButtons(True)
        self.tabWidget.setTabsClosable(False)
        self.tabWidget.setMovable(False)
        self.tabWidget.setTabBarAutoHide(False)
        self.tabWidget.setObjectName("tabWidget")
        self.styling_pane = QtWidgets.QWidget()
        self.styling_pane.setObjectName("styling_pane")
        self.verticalLayout_25 = QtWidgets.QVBoxLayout(self.styling_pane)
        self.verticalLayout_25.setObjectName("verticalLayout_25")
        self.scrollArea = QtWidgets.QScrollArea(self.styling_pane)
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setObjectName("scrollArea")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 340, 456))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.verticalLayout_26 = QtWidgets.QVBoxLayout(self.scrollAreaWidgetContents)
        self.verticalLayout_26.setObjectName("verticalLayout_26")
        self.style_file_path = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.style_file_path.setObjectName("style_file_path")
        self.verticalLayout_26.addWidget(self.style_file_path)
        self.label_3 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_3.setObjectName("label_3")
        self.verticalLayout_26.addWidget(self.label_3)
        self.style_selector = QtWidgets.QComboBox(self.scrollAreaWidgetContents)
        self.style_selector.setFocusPolicy(QtCore.Qt.NoFocus)
        self.style_selector.setObjectName("style_selector")
        self.verticalLayout_26.addWidget(self.style_selector)
        self.style_controls = QtWidgets.QGroupBox(self.scrollAreaWidgetContents)
        self.style_controls.setEnabled(False)
        self.style_controls.setObjectName("style_controls")
        self.verticalLayout_20 = QtWidgets.QVBoxLayout(self.style_controls)
        self.verticalLayout_20.setObjectName("verticalLayout_20")
        self.horizontalLayout_12 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_12.setObjectName("horizontalLayout_12")
        self.blockFont = QtWidgets.QFontComboBox(self.style_controls)
        self.blockFont.setFocusPolicy(QtCore.Qt.ClickFocus)
        font = QtGui.QFont()
        font.setFamily("Courier New")
        font.setPointSize(12)
        self.blockFont.setCurrentFont(font)
        self.blockFont.setObjectName("blockFont")
        self.horizontalLayout_12.addWidget(self.blockFont)
        self.blockFontSize = QtWidgets.QSpinBox(self.style_controls)
        self.blockFontSize.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.blockFontSize.setProperty("value", 12)
        self.blockFontSize.setObjectName("blockFontSize")
        self.horizontalLayout_12.addWidget(self.blockFontSize)
        self.verticalLayout_20.addLayout(self.horizontalLayout_12)
        self.horizontalLayout_15 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_15.setObjectName("horizontalLayout_15")
        self.blockFontBold = QtWidgets.QPushButton(self.style_controls)
        self.blockFontBold.setFocusPolicy(QtCore.Qt.NoFocus)
        self.blockFontBold.setText("")
        icon = QtGui.QIcon()
        icon.addFile(":/edit-bold.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.blockFontBold.setIcon(icon)
        self.blockFontBold.setCheckable(True)
        self.blockFontBold.setObjectName("blockFontBold")
        self.horizontalLayout_15.addWidget(self.blockFontBold)
        self.blockFontItalic = QtWidgets.QPushButton(self.style_controls)
        self.blockFontItalic.setFocusPolicy(QtCore.Qt.NoFocus)
        self.blockFontItalic.setText("")
        icon1 = QtGui.QIcon()
        icon1.addFile(":/edit-italic.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.blockFontItalic.setIcon(icon1)
        self.blockFontItalic.setCheckable(True)
        self.blockFontItalic.setObjectName("blockFontItalic")
        self.horizontalLayout_15.addWidget(self.blockFontItalic)
        self.blockFontUnderline = QtWidgets.QPushButton(self.style_controls)
        self.blockFontUnderline.setFocusPolicy(QtCore.Qt.NoFocus)
        self.blockFontUnderline.setText("")
        icon2 = QtGui.QIcon()
        icon2.addFile(":/edit-underline.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.blockFontUnderline.setIcon(icon2)
        self.blockFontUnderline.setCheckable(True)
        self.blockFontUnderline.setObjectName("blockFontUnderline")
        self.horizontalLayout_15.addWidget(self.blockFontUnderline)
        self.blockLeftAlign = QtWidgets.QPushButton(self.style_controls)
        self.blockLeftAlign.setFocusPolicy(QtCore.Qt.NoFocus)
        self.blockLeftAlign.setText("")
        icon3 = QtGui.QIcon()
        icon3.addFile(":/edit-alignment.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.blockLeftAlign.setIcon(icon3)
        self.blockLeftAlign.setCheckable(True)
        self.blockLeftAlign.setChecked(True)
        self.blockLeftAlign.setObjectName("blockLeftAlign")
        self.blockAlignment = QtWidgets.QButtonGroup(PloverCAT)
        self.blockAlignment.setObjectName("blockAlignment")
        self.blockAlignment.addButton(self.blockLeftAlign)
        self.horizontalLayout_15.addWidget(self.blockLeftAlign)
        self.blockCenterAlign = QtWidgets.QPushButton(self.style_controls)
        self.blockCenterAlign.setFocusPolicy(QtCore.Qt.NoFocus)
        self.blockCenterAlign.setText("")
        icon4 = QtGui.QIcon()
        icon4.addFile(":/edit-alignment-center.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.blockCenterAlign.setIcon(icon4)
        self.blockCenterAlign.setCheckable(True)
        self.blockCenterAlign.setObjectName("blockCenterAlign")
        self.blockAlignment.addButton(self.blockCenterAlign)
        self.horizontalLayout_15.addWidget(self.blockCenterAlign)
        self.blockRightAlign = QtWidgets.QPushButton(self.style_controls)
        self.blockRightAlign.setFocusPolicy(QtCore.Qt.NoFocus)
        self.blockRightAlign.setText("")
        icon5 = QtGui.QIcon()
        icon5.addFile(":/edit-alignment-right.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.blockRightAlign.setIcon(icon5)
        self.blockRightAlign.setCheckable(True)
        self.blockRightAlign.setObjectName("blockRightAlign")
        self.blockAlignment.addButton(self.blockRightAlign)
        self.horizontalLayout_15.addWidget(self.blockRightAlign)
        self.blockJustify = QtWidgets.QPushButton(self.style_controls)
        self.blockJustify.setFocusPolicy(QtCore.Qt.NoFocus)
        self.blockJustify.setText("")
        icon6 = QtGui.QIcon()
        icon6.addFile(":/edit-alignment-justify-distribute.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.blockJustify.setIcon(icon6)
        self.blockJustify.setCheckable(True)
        self.blockJustify.setObjectName("blockJustify")
        self.blockAlignment.addButton(self.blockJustify)
        self.horizontalLayout_15.addWidget(self.blockJustify)
        self.blockLineSpace = QtWidgets.QSpinBox(self.style_controls)
        self.blockLineSpace.setFocusPolicy(QtCore.Qt.NoFocus)
        self.blockLineSpace.setMaximum(1000)
        self.blockLineSpace.setProperty("value", 100)
        self.blockLineSpace.setObjectName("blockLineSpace")
        self.horizontalLayout_15.addWidget(self.blockLineSpace)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_15.addItem(spacerItem1)
        self.verticalLayout_20.addLayout(self.horizontalLayout_15)
        self.formLayout_4 = QtWidgets.QFormLayout()
        self.formLayout_4.setObjectName("formLayout_4")
        self.label_30 = QtWidgets.QLabel(self.style_controls)
        self.label_30.setObjectName("label_30")
        self.formLayout_4.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_30)
        self.fontspaceInInch = QtWidgets.QDoubleSpinBox(self.style_controls)
        self.fontspaceInInch.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.fontspaceInInch.setReadOnly(True)
        self.fontspaceInInch.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.fontspaceInInch.setKeyboardTracking(True)
        self.fontspaceInInch.setObjectName("fontspaceInInch")
        self.formLayout_4.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.fontspaceInInch)
        self.label_28 = QtWidgets.QLabel(self.style_controls)
        self.label_28.setObjectName("label_28")
        self.formLayout_4.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label_28)
        self.blockTextIndent = QtWidgets.QDoubleSpinBox(self.style_controls)
        self.blockTextIndent.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.blockTextIndent.setKeyboardTracking(True)
        self.blockTextIndent.setMinimum(0.0)
        self.blockTextIndent.setSingleStep(0.05)
        self.blockTextIndent.setObjectName("blockTextIndent")
        self.formLayout_4.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.blockTextIndent)
        self.label_29 = QtWidgets.QLabel(self.style_controls)
        self.label_29.setObjectName("label_29")
        self.formLayout_4.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.label_29)
        self.blockTabStop = QtWidgets.QDoubleSpinBox(self.style_controls)
        self.blockTabStop.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.blockTabStop.setKeyboardTracking(True)
        self.blockTabStop.setSingleStep(0.05)
        self.blockTabStop.setObjectName("blockTabStop")
        self.formLayout_4.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.blockTabStop)
        self.label_24 = QtWidgets.QLabel(self.style_controls)
        self.label_24.setObjectName("label_24")
        self.formLayout_4.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.label_24)
        self.blockLeftMargin = QtWidgets.QDoubleSpinBox(self.style_controls)
        self.blockLeftMargin.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.blockLeftMargin.setKeyboardTracking(True)
        self.blockLeftMargin.setMinimum(0.0)
        self.blockLeftMargin.setSingleStep(0.05)
        self.blockLeftMargin.setObjectName("blockLeftMargin")
        self.formLayout_4.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.blockLeftMargin)
        self.label_25 = QtWidgets.QLabel(self.style_controls)
        self.label_25.setObjectName("label_25")
        self.formLayout_4.setWidget(4, QtWidgets.QFormLayout.LabelRole, self.label_25)
        self.blockRightMargin = QtWidgets.QDoubleSpinBox(self.style_controls)
        self.blockRightMargin.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.blockRightMargin.setKeyboardTracking(True)
        self.blockRightMargin.setMinimum(0.0)
        self.blockRightMargin.setSingleStep(0.05)
        self.blockRightMargin.setObjectName("blockRightMargin")
        self.formLayout_4.setWidget(4, QtWidgets.QFormLayout.FieldRole, self.blockRightMargin)
        self.label_26 = QtWidgets.QLabel(self.style_controls)
        self.label_26.setObjectName("label_26")
        self.formLayout_4.setWidget(5, QtWidgets.QFormLayout.LabelRole, self.label_26)
        self.blockTopMargin = QtWidgets.QDoubleSpinBox(self.style_controls)
        self.blockTopMargin.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.blockTopMargin.setKeyboardTracking(True)
        self.blockTopMargin.setMinimum(0.0)
        self.blockTopMargin.setSingleStep(0.05)
        self.blockTopMargin.setObjectName("blockTopMargin")
        self.formLayout_4.setWidget(5, QtWidgets.QFormLayout.FieldRole, self.blockTopMargin)
        self.label_27 = QtWidgets.QLabel(self.style_controls)
        self.label_27.setObjectName("label_27")
        self.formLayout_4.setWidget(6, QtWidgets.QFormLayout.LabelRole, self.label_27)
        self.blockBottomMargin = QtWidgets.QDoubleSpinBox(self.style_controls)
        self.blockBottomMargin.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.blockBottomMargin.setReadOnly(False)
        self.blockBottomMargin.setKeyboardTracking(True)
        self.blockBottomMargin.setSingleStep(0.05)
        self.blockBottomMargin.setObjectName("blockBottomMargin")
        self.formLayout_4.setWidget(6, QtWidgets.QFormLayout.FieldRole, self.blockBottomMargin)
        self.label_31 = QtWidgets.QLabel(self.style_controls)
        self.label_31.setObjectName("label_31")
        self.formLayout_4.setWidget(7, QtWidgets.QFormLayout.LabelRole, self.label_31)
        self.blockParentStyle = QtWidgets.QComboBox(self.style_controls)
        self.blockParentStyle.setFocusPolicy(QtCore.Qt.NoFocus)
        self.blockParentStyle.setObjectName("blockParentStyle")
        self.formLayout_4.setWidget(7, QtWidgets.QFormLayout.FieldRole, self.blockParentStyle)
        self.label_32 = QtWidgets.QLabel(self.style_controls)
        self.label_32.setObjectName("label_32")
        self.formLayout_4.setWidget(8, QtWidgets.QFormLayout.LabelRole, self.label_32)
        self.blockNextStyle = QtWidgets.QComboBox(self.style_controls)
        self.blockNextStyle.setFocusPolicy(QtCore.Qt.NoFocus)
        self.blockNextStyle.setObjectName("blockNextStyle")
        self.formLayout_4.setWidget(8, QtWidgets.QFormLayout.FieldRole, self.blockNextStyle)
        self.label_33 = QtWidgets.QLabel(self.style_controls)
        self.label_33.setObjectName("label_33")
        self.formLayout_4.setWidget(9, QtWidgets.QFormLayout.LabelRole, self.label_33)
        self.blockHeadingLevel = QtWidgets.QComboBox(self.style_controls)
        self.blockHeadingLevel.setEnabled(False)
        self.blockHeadingLevel.setFocusPolicy(QtCore.Qt.NoFocus)
        self.blockHeadingLevel.setObjectName("blockHeadingLevel")
        self.blockHeadingLevel.addItem("")
        self.blockHeadingLevel.setItemText(0, "")
        self.blockHeadingLevel.addItem("")
        self.blockHeadingLevel.addItem("")
        self.blockHeadingLevel.addItem("")
        self.blockHeadingLevel.addItem("")
        self.blockHeadingLevel.addItem("")
        self.blockHeadingLevel.addItem("")
        self.blockHeadingLevel.addItem("")
        self.blockHeadingLevel.addItem("")
        self.blockHeadingLevel.addItem("")
        self.blockHeadingLevel.addItem("")
        self.formLayout_4.setWidget(9, QtWidgets.QFormLayout.FieldRole, self.blockHeadingLevel)
        self.editCurrentStyle = QtWidgets.QPushButton(self.style_controls)
        self.editCurrentStyle.setFocusPolicy(QtCore.Qt.NoFocus)
        self.editCurrentStyle.setObjectName("editCurrentStyle")
        self.formLayout_4.setWidget(10, QtWidgets.QFormLayout.FieldRole, self.editCurrentStyle)
        self.verticalLayout_20.addLayout(self.formLayout_4)
        spacerItem2 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_20.addItem(spacerItem2)
        self.verticalLayout_26.addWidget(self.style_controls)
        self.scrollArea.setWidget(self.scrollAreaWidgetContents)
        self.verticalLayout_25.addWidget(self.scrollArea)
        icon7 = QtGui.QIcon()
        icon7.addFile(":/edit-style.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.tabWidget.addTab(self.styling_pane, icon7, "")
        self.page_format_pane = QtWidgets.QWidget()
        self.page_format_pane.setObjectName("page_format_pane")
        self.verticalLayout_27 = QtWidgets.QVBoxLayout(self.page_format_pane)
        self.verticalLayout_27.setObjectName("verticalLayout_27")
        self.scrollArea_2 = QtWidgets.QScrollArea(self.page_format_pane)
        self.scrollArea_2.setWidgetResizable(True)
        self.scrollArea_2.setObjectName("scrollArea_2")
        self.scrollAreaWidgetContents_2 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_2.setGeometry(QtCore.QRect(0, 0, 329, 379))
        self.scrollAreaWidgetContents_2.setObjectName("scrollAreaWidgetContents_2")
        self.verticalLayout_28 = QtWidgets.QVBoxLayout(self.scrollAreaWidgetContents_2)
        self.verticalLayout_28.setObjectName("verticalLayout_28")
        self.formLayout_3 = QtWidgets.QFormLayout()
        self.formLayout_3.setObjectName("formLayout_3")
        self.label_8 = QtWidgets.QLabel(self.scrollAreaWidgetContents_2)
        self.label_8.setObjectName("label_8")
        self.formLayout_3.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_8)
        self.page_width = QtWidgets.QDoubleSpinBox(self.scrollAreaWidgetContents_2)
        self.page_width.setKeyboardTracking(False)
        self.page_width.setProperty("value", 8.5)
        self.page_width.setObjectName("page_width")
        self.formLayout_3.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.page_width)
        self.label_9 = QtWidgets.QLabel(self.scrollAreaWidgetContents_2)
        self.label_9.setObjectName("label_9")
        self.formLayout_3.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label_9)
        self.page_height = QtWidgets.QDoubleSpinBox(self.scrollAreaWidgetContents_2)
        self.page_height.setKeyboardTracking(False)
        self.page_height.setProperty("value", 11.0)
        self.page_height.setObjectName("page_height")
        self.formLayout_3.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.page_height)
        self.label_10 = QtWidgets.QLabel(self.scrollAreaWidgetContents_2)
        self.label_10.setObjectName("label_10")
        self.formLayout_3.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.label_10)
        self.page_left_margin = QtWidgets.QDoubleSpinBox(self.scrollAreaWidgetContents_2)
        self.page_left_margin.setKeyboardTracking(False)
        self.page_left_margin.setDecimals(4)
        self.page_left_margin.setProperty("value", 1.75)
        self.page_left_margin.setObjectName("page_left_margin")
        self.formLayout_3.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.page_left_margin)
        self.label_11 = QtWidgets.QLabel(self.scrollAreaWidgetContents_2)
        self.label_11.setObjectName("label_11")
        self.formLayout_3.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.label_11)
        self.page_top_margin = QtWidgets.QDoubleSpinBox(self.scrollAreaWidgetContents_2)
        self.page_top_margin.setKeyboardTracking(False)
        self.page_top_margin.setDecimals(4)
        self.page_top_margin.setProperty("value", 0.7874)
        self.page_top_margin.setObjectName("page_top_margin")
        self.formLayout_3.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.page_top_margin)
        self.label_12 = QtWidgets.QLabel(self.scrollAreaWidgetContents_2)
        self.label_12.setObjectName("label_12")
        self.formLayout_3.setWidget(4, QtWidgets.QFormLayout.LabelRole, self.label_12)
        self.page_right_margin = QtWidgets.QDoubleSpinBox(self.scrollAreaWidgetContents_2)
        self.page_right_margin.setKeyboardTracking(False)
        self.page_right_margin.setDecimals(4)
        self.page_right_margin.setProperty("value", 0.3799)
        self.page_right_margin.setObjectName("page_right_margin")
        self.formLayout_3.setWidget(4, QtWidgets.QFormLayout.FieldRole, self.page_right_margin)
        self.label_13 = QtWidgets.QLabel(self.scrollAreaWidgetContents_2)
        self.label_13.setObjectName("label_13")
        self.formLayout_3.setWidget(5, QtWidgets.QFormLayout.LabelRole, self.label_13)
        self.page_bottom_margin = QtWidgets.QDoubleSpinBox(self.scrollAreaWidgetContents_2)
        self.page_bottom_margin.setKeyboardTracking(False)
        self.page_bottom_margin.setDecimals(4)
        self.page_bottom_margin.setProperty("value", 0.7874)
        self.page_bottom_margin.setObjectName("page_bottom_margin")
        self.formLayout_3.setWidget(5, QtWidgets.QFormLayout.FieldRole, self.page_bottom_margin)
        self.label_15 = QtWidgets.QLabel(self.scrollAreaWidgetContents_2)
        self.label_15.setObjectName("label_15")
        self.formLayout_3.setWidget(6, QtWidgets.QFormLayout.LabelRole, self.label_15)
        self.page_max_char = QtWidgets.QSpinBox(self.scrollAreaWidgetContents_2)
        self.page_max_char.setKeyboardTracking(False)
        self.page_max_char.setObjectName("page_max_char")
        self.formLayout_3.setWidget(6, QtWidgets.QFormLayout.FieldRole, self.page_max_char)
        self.label_14 = QtWidgets.QLabel(self.scrollAreaWidgetContents_2)
        self.label_14.setObjectName("label_14")
        self.formLayout_3.setWidget(7, QtWidgets.QFormLayout.LabelRole, self.label_14)
        self.page_max_lines = QtWidgets.QSpinBox(self.scrollAreaWidgetContents_2)
        self.page_max_lines.setKeyboardTracking(False)
        self.page_max_lines.setObjectName("page_max_lines")
        self.formLayout_3.setWidget(7, QtWidgets.QFormLayout.FieldRole, self.page_max_lines)
        self.label_35 = QtWidgets.QLabel(self.scrollAreaWidgetContents_2)
        self.label_35.setObjectName("label_35")
        self.formLayout_3.setWidget(8, QtWidgets.QFormLayout.LabelRole, self.label_35)
        self.enable_line_num = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_2)
        self.enable_line_num.setText("")
        self.enable_line_num.setObjectName("enable_line_num")
        self.formLayout_3.setWidget(8, QtWidgets.QFormLayout.FieldRole, self.enable_line_num)
        self.label_34 = QtWidgets.QLabel(self.scrollAreaWidgetContents_2)
        self.label_34.setObjectName("label_34")
        self.formLayout_3.setWidget(9, QtWidgets.QFormLayout.LabelRole, self.label_34)
        self.line_num_freq = QtWidgets.QSpinBox(self.scrollAreaWidgetContents_2)
        self.line_num_freq.setKeyboardTracking(False)
        self.line_num_freq.setMinimum(1)
        self.line_num_freq.setObjectName("line_num_freq")
        self.formLayout_3.setWidget(9, QtWidgets.QFormLayout.FieldRole, self.line_num_freq)
        self.label_36 = QtWidgets.QLabel(self.scrollAreaWidgetContents_2)
        self.label_36.setObjectName("label_36")
        self.formLayout_3.setWidget(10, QtWidgets.QFormLayout.LabelRole, self.label_36)
        self.enable_timestamp = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_2)
        self.enable_timestamp.setText("")
        self.enable_timestamp.setObjectName("enable_timestamp")
        self.formLayout_3.setWidget(10, QtWidgets.QFormLayout.FieldRole, self.enable_timestamp)
        self.verticalLayout_28.addLayout(self.formLayout_3)
        self.label_37 = QtWidgets.QLabel(self.scrollAreaWidgetContents_2)
        self.label_37.setObjectName("label_37")
        self.verticalLayout_28.addWidget(self.label_37)
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.header_left = QtWidgets.QLineEdit(self.scrollAreaWidgetContents_2)
        self.header_left.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.header_left.setObjectName("header_left")
        self.horizontalLayout_5.addWidget(self.header_left)
        self.header_center = QtWidgets.QLineEdit(self.scrollAreaWidgetContents_2)
        self.header_center.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.header_center.setObjectName("header_center")
        self.horizontalLayout_5.addWidget(self.header_center)
        self.header_right = QtWidgets.QLineEdit(self.scrollAreaWidgetContents_2)
        self.header_right.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.header_right.setObjectName("header_right")
        self.horizontalLayout_5.addWidget(self.header_right)
        self.verticalLayout_28.addLayout(self.horizontalLayout_5)
        self.label_38 = QtWidgets.QLabel(self.scrollAreaWidgetContents_2)
        self.label_38.setObjectName("label_38")
        self.verticalLayout_28.addWidget(self.label_38)
        self.horizontalLayout_17 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_17.setObjectName("horizontalLayout_17")
        self.footer_left = QtWidgets.QLineEdit(self.scrollAreaWidgetContents_2)
        self.footer_left.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.footer_left.setObjectName("footer_left")
        self.horizontalLayout_17.addWidget(self.footer_left)
        self.footer_center = QtWidgets.QLineEdit(self.scrollAreaWidgetContents_2)
        self.footer_center.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.footer_center.setObjectName("footer_center")
        self.horizontalLayout_17.addWidget(self.footer_center)
        self.footer_right = QtWidgets.QLineEdit(self.scrollAreaWidgetContents_2)
        self.footer_right.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.footer_right.setObjectName("footer_right")
        self.horizontalLayout_17.addWidget(self.footer_right)
        self.verticalLayout_28.addLayout(self.horizontalLayout_17)
        spacerItem3 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_28.addItem(spacerItem3)
        self.scrollArea_2.setWidget(self.scrollAreaWidgetContents_2)
        self.verticalLayout_27.addWidget(self.scrollArea_2)
        icon8 = QtGui.QIcon()
        icon8.addFile(":/document-resize-actual.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.tabWidget.addTab(self.page_format_pane, icon8, "")
        self.find_replace_pane = QtWidgets.QWidget()
        self.find_replace_pane.setObjectName("find_replace_pane")
        self.verticalLayout_29 = QtWidgets.QVBoxLayout(self.find_replace_pane)
        self.verticalLayout_29.setObjectName("verticalLayout_29")
        self.scrollArea_3 = QtWidgets.QScrollArea(self.find_replace_pane)
        self.scrollArea_3.setWidgetResizable(True)
        self.scrollArea_3.setObjectName("scrollArea_3")
        self.scrollAreaWidgetContents_3 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_3.setGeometry(QtCore.QRect(0, 0, 329, 252))
        self.scrollAreaWidgetContents_3.setObjectName("scrollAreaWidgetContents_3")
        self.verticalLayout_30 = QtWidgets.QVBoxLayout(self.scrollAreaWidgetContents_3)
        self.verticalLayout_30.setObjectName("verticalLayout_30")
        self.groupBox_2 = QtWidgets.QGroupBox(self.scrollAreaWidgetContents_3)
        self.groupBox_2.setObjectName("groupBox_2")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.groupBox_2)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.search_text = QtWidgets.QRadioButton(self.groupBox_2)
        self.search_text.setFocusPolicy(QtCore.Qt.NoFocus)
        self.search_text.setChecked(True)
        self.search_text.setObjectName("search_text")
        self.horizontalLayout.addWidget(self.search_text)
        self.search_untrans = QtWidgets.QRadioButton(self.groupBox_2)
        self.search_untrans.setFocusPolicy(QtCore.Qt.NoFocus)
        self.search_untrans.setObjectName("search_untrans")
        self.horizontalLayout.addWidget(self.search_untrans)
        self.search_steno = QtWidgets.QRadioButton(self.groupBox_2)
        self.search_steno.setFocusPolicy(QtCore.Qt.NoFocus)
        self.search_steno.setObjectName("search_steno")
        self.horizontalLayout.addWidget(self.search_steno)
        self.verticalLayout_30.addWidget(self.groupBox_2)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.search_term = QtWidgets.QLineEdit(self.scrollAreaWidgetContents_3)
        self.search_term.setObjectName("search_term")
        self.horizontalLayout_2.addWidget(self.search_term)
        self.verticalLayout_30.addLayout(self.horizontalLayout_2)
        self.horizontalLayout_13 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_13.setObjectName("horizontalLayout_13")
        self.search_backward = QtWidgets.QPushButton(self.scrollAreaWidgetContents_3)
        self.search_backward.setFocusPolicy(QtCore.Qt.NoFocus)
        icon9 = QtGui.QIcon()
        icon9.addFile(":/arrow-skip-180.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.search_backward.setIcon(icon9)
        self.search_backward.setObjectName("search_backward")
        self.horizontalLayout_13.addWidget(self.search_backward)
        self.search_forward = QtWidgets.QPushButton(self.scrollAreaWidgetContents_3)
        self.search_forward.setFocusPolicy(QtCore.Qt.NoFocus)
        icon10 = QtGui.QIcon()
        icon10.addFile(":/arrow-skip.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.search_forward.setIcon(icon10)
        self.search_forward.setObjectName("search_forward")
        self.horizontalLayout_13.addWidget(self.search_forward)
        self.find_all = QtWidgets.QPushButton(self.scrollAreaWidgetContents_3)
        self.find_all.setFocusPolicy(QtCore.Qt.NoFocus)
        self.find_all.setObjectName("find_all")
        self.horizontalLayout_13.addWidget(self.find_all)
        self.verticalLayout_30.addLayout(self.horizontalLayout_13)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.search_case = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_3)
        self.search_case.setFocusPolicy(QtCore.Qt.NoFocus)
        self.search_case.setObjectName("search_case")
        self.horizontalLayout_4.addWidget(self.search_case)
        self.search_whole = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_3)
        self.search_whole.setFocusPolicy(QtCore.Qt.NoFocus)
        self.search_whole.setObjectName("search_whole")
        self.horizontalLayout_4.addWidget(self.search_whole)
        self.search_wrap = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_3)
        self.search_wrap.setFocusPolicy(QtCore.Qt.NoFocus)
        self.search_wrap.setObjectName("search_wrap")
        self.horizontalLayout_4.addWidget(self.search_wrap)
        self.verticalLayout_30.addLayout(self.horizontalLayout_4)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.replace_term = QtWidgets.QLineEdit(self.scrollAreaWidgetContents_3)
        self.replace_term.setObjectName("replace_term")
        self.horizontalLayout_3.addWidget(self.replace_term)
        self.replace_selected = QtWidgets.QPushButton(self.scrollAreaWidgetContents_3)
        self.replace_selected.setFocusPolicy(QtCore.Qt.NoFocus)
        self.replace_selected.setObjectName("replace_selected")
        self.horizontalLayout_3.addWidget(self.replace_selected)
        self.replace_all = QtWidgets.QPushButton(self.scrollAreaWidgetContents_3)
        self.replace_all.setFocusPolicy(QtCore.Qt.NoFocus)
        self.replace_all.setObjectName("replace_all")
        self.horizontalLayout_3.addWidget(self.replace_all)
        self.verticalLayout_30.addLayout(self.horizontalLayout_3)
        self.searchResults = QtWidgets.QListWidget(self.scrollAreaWidgetContents_3)
        self.searchResults.setObjectName("searchResults")
        self.verticalLayout_30.addWidget(self.searchResults)
        self.scrollArea_3.setWidget(self.scrollAreaWidgetContents_3)
        self.verticalLayout_29.addWidget(self.scrollArea_3)
        icon11 = QtGui.QIcon()
        icon11.addFile(":/magnifier.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.tabWidget.addTab(self.find_replace_pane, icon11, "")
        self.paragraph_pane = QtWidgets.QWidget()
        self.paragraph_pane.setObjectName("paragraph_pane")
        self.verticalLayout_31 = QtWidgets.QVBoxLayout(self.paragraph_pane)
        self.verticalLayout_31.setObjectName("verticalLayout_31")
        self.scrollArea_4 = QtWidgets.QScrollArea(self.paragraph_pane)
        self.scrollArea_4.setWidgetResizable(True)
        self.scrollArea_4.setObjectName("scrollArea_4")
        self.scrollAreaWidgetContents_4 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_4.setGeometry(QtCore.QRect(0, 0, 342, 239))
        self.scrollAreaWidgetContents_4.setObjectName("scrollAreaWidgetContents_4")
        self.verticalLayout_32 = QtWidgets.QVBoxLayout(self.scrollAreaWidgetContents_4)
        self.verticalLayout_32.setObjectName("verticalLayout_32")
        self.formLayout_2 = QtWidgets.QFormLayout()
        self.formLayout_2.setObjectName("formLayout_2")
        self.label_2 = QtWidgets.QLabel(self.scrollAreaWidgetContents_4)
        self.label_2.setObjectName("label_2")
        self.formLayout_2.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_2)
        self.editorParagraphLabel = QtWidgets.QLabel(self.scrollAreaWidgetContents_4)
        self.editorParagraphLabel.setObjectName("editorParagraphLabel")
        self.formLayout_2.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.editorParagraphLabel)
        self.label = QtWidgets.QLabel(self.scrollAreaWidgetContents_4)
        self.label.setObjectName("label")
        self.formLayout_2.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label)
        self.editorCreationTime = QtWidgets.QDateTimeEdit(self.scrollAreaWidgetContents_4)
        self.editorCreationTime.setFocusPolicy(QtCore.Qt.NoFocus)
        self.editorCreationTime.setKeyboardTracking(False)
        self.editorCreationTime.setObjectName("editorCreationTime")
        self.formLayout_2.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.editorCreationTime)
        self.label_6 = QtWidgets.QLabel(self.scrollAreaWidgetContents_4)
        self.label_6.setObjectName("label_6")
        self.formLayout_2.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.label_6)
        self.editorEditTime = QtWidgets.QDateTimeEdit(self.scrollAreaWidgetContents_4)
        self.editorEditTime.setFocusPolicy(QtCore.Qt.NoFocus)
        self.editorEditTime.setReadOnly(True)
        self.editorEditTime.setKeyboardTracking(False)
        self.editorEditTime.setObjectName("editorEditTime")
        self.formLayout_2.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.editorEditTime)
        self.label_4 = QtWidgets.QLabel(self.scrollAreaWidgetContents_4)
        self.label_4.setObjectName("label_4")
        self.formLayout_2.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.label_4)
        self.editorAudioStart = QtWidgets.QTimeEdit(self.scrollAreaWidgetContents_4)
        self.editorAudioStart.setFocusPolicy(QtCore.Qt.NoFocus)
        self.editorAudioStart.setKeyboardTracking(False)
        self.editorAudioStart.setCurrentSection(QtWidgets.QDateTimeEdit.HourSection)
        self.editorAudioStart.setObjectName("editorAudioStart")
        self.formLayout_2.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.editorAudioStart)
        self.label_5 = QtWidgets.QLabel(self.scrollAreaWidgetContents_4)
        self.label_5.setObjectName("label_5")
        self.formLayout_2.setWidget(4, QtWidgets.QFormLayout.LabelRole, self.label_5)
        self.editorAudioEnd = QtWidgets.QTimeEdit(self.scrollAreaWidgetContents_4)
        self.editorAudioEnd.setFocusPolicy(QtCore.Qt.NoFocus)
        self.editorAudioEnd.setKeyboardTracking(False)
        self.editorAudioEnd.setObjectName("editorAudioEnd")
        self.formLayout_2.setWidget(4, QtWidgets.QFormLayout.FieldRole, self.editorAudioEnd)
        self.label_7 = QtWidgets.QLabel(self.scrollAreaWidgetContents_4)
        self.label_7.setObjectName("label_7")
        self.formLayout_2.setWidget(5, QtWidgets.QFormLayout.LabelRole, self.label_7)
        self.editorNotes = QtWidgets.QLineEdit(self.scrollAreaWidgetContents_4)
        self.editorNotes.setFocusPolicy(QtCore.Qt.NoFocus)
        self.editorNotes.setObjectName("editorNotes")
        self.formLayout_2.setWidget(5, QtWidgets.QFormLayout.FieldRole, self.editorNotes)
        self.verticalLayout_32.addLayout(self.formLayout_2)
        self.submitEdited = QtWidgets.QPushButton(self.scrollAreaWidgetContents_4)
        self.submitEdited.setEnabled(False)
        self.submitEdited.setFocusPolicy(QtCore.Qt.NoFocus)
        self.submitEdited.setObjectName("submitEdited")
        self.verticalLayout_32.addWidget(self.submitEdited)
        spacerItem4 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_32.addItem(spacerItem4)
        self.scrollArea_4.setWidget(self.scrollAreaWidgetContents_4)
        self.verticalLayout_31.addWidget(self.scrollArea_4)
        icon12 = QtGui.QIcon()
        icon12.addFile(":/edit-pilcrow.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.tabWidget.addTab(self.paragraph_pane, icon12, "")
        self.spellcheck_pane = QtWidgets.QWidget()
        self.spellcheck_pane.setObjectName("spellcheck_pane")
        self.verticalLayout_35 = QtWidgets.QVBoxLayout(self.spellcheck_pane)
        self.verticalLayout_35.setObjectName("verticalLayout_35")
        self.scrollArea_6 = QtWidgets.QScrollArea(self.spellcheck_pane)
        self.scrollArea_6.setWidgetResizable(True)
        self.scrollArea_6.setObjectName("scrollArea_6")
        self.scrollAreaWidgetContents_6 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_6.setGeometry(QtCore.QRect(0, 0, 342, 239))
        self.scrollAreaWidgetContents_6.setObjectName("scrollAreaWidgetContents_6")
        self.verticalLayout_36 = QtWidgets.QVBoxLayout(self.scrollAreaWidgetContents_6)
        self.verticalLayout_36.setObjectName("verticalLayout_36")
        self.horizontalLayout_10 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_10.setObjectName("horizontalLayout_10")
        self.verticalLayout_18 = QtWidgets.QVBoxLayout()
        self.verticalLayout_18.setObjectName("verticalLayout_18")
        self.dict_selection = QtWidgets.QComboBox(self.scrollAreaWidgetContents_6)
        self.dict_selection.setObjectName("dict_selection")
        self.verticalLayout_18.addWidget(self.dict_selection)
        self.spell_search = QtWidgets.QPushButton(self.scrollAreaWidgetContents_6)
        self.spell_search.setFocusPolicy(QtCore.Qt.NoFocus)
        self.spell_search.setObjectName("spell_search")
        self.verticalLayout_18.addWidget(self.spell_search)
        self.spell_skip = QtWidgets.QPushButton(self.scrollAreaWidgetContents_6)
        self.spell_skip.setFocusPolicy(QtCore.Qt.NoFocus)
        self.spell_skip.setObjectName("spell_skip")
        self.verticalLayout_18.addWidget(self.spell_skip)
        self.spell_ignore_all = QtWidgets.QPushButton(self.scrollAreaWidgetContents_6)
        self.spell_ignore_all.setFocusPolicy(QtCore.Qt.NoFocus)
        self.spell_ignore_all.setObjectName("spell_ignore_all")
        self.verticalLayout_18.addWidget(self.spell_ignore_all)
        self.spell_change = QtWidgets.QPushButton(self.scrollAreaWidgetContents_6)
        self.spell_change.setFocusPolicy(QtCore.Qt.NoFocus)
        self.spell_change.setObjectName("spell_change")
        self.verticalLayout_18.addWidget(self.spell_change)
        spacerItem5 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_18.addItem(spacerItem5)
        self.horizontalLayout_10.addLayout(self.verticalLayout_18)
        self.verticalLayout_19 = QtWidgets.QVBoxLayout()
        self.verticalLayout_19.setObjectName("verticalLayout_19")
        self.horizontalLayout_11 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_11.setObjectName("horizontalLayout_11")
        self.label_21 = QtWidgets.QLabel(self.scrollAreaWidgetContents_6)
        self.label_21.setObjectName("label_21")
        self.horizontalLayout_11.addWidget(self.label_21)
        self.spellcheck_result = QtWidgets.QLineEdit(self.scrollAreaWidgetContents_6)
        self.spellcheck_result.setObjectName("spellcheck_result")
        self.horizontalLayout_11.addWidget(self.spellcheck_result)
        self.verticalLayout_19.addLayout(self.horizontalLayout_11)
        self.spellcheck_suggestions = QtWidgets.QListWidget(self.scrollAreaWidgetContents_6)
        self.spellcheck_suggestions.setFocusPolicy(QtCore.Qt.NoFocus)
        self.spellcheck_suggestions.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.spellcheck_suggestions.setEditTriggers(QtWidgets.QAbstractItemView.DoubleClicked)
        self.spellcheck_suggestions.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectColumns)
        self.spellcheck_suggestions.setObjectName("spellcheck_suggestions")
        self.verticalLayout_19.addWidget(self.spellcheck_suggestions)
        self.horizontalLayout_10.addLayout(self.verticalLayout_19)
        self.verticalLayout_36.addLayout(self.horizontalLayout_10)
        self.scrollArea_6.setWidget(self.scrollAreaWidgetContents_6)
        self.verticalLayout_35.addWidget(self.scrollArea_6)
        icon13 = QtGui.QIcon()
        icon13.addFile(":/spell-check.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.tabWidget.addTab(self.spellcheck_pane, icon13, "")
        self.stenospell_pane = QtWidgets.QWidget()
        self.stenospell_pane.setObjectName("stenospell_pane")
        self.horizontalLayout_14 = QtWidgets.QHBoxLayout(self.stenospell_pane)
        self.horizontalLayout_14.setObjectName("horizontalLayout_14")
        self.scrollArea_7 = QtWidgets.QScrollArea(self.stenospell_pane)
        self.scrollArea_7.setWidgetResizable(True)
        self.scrollArea_7.setObjectName("scrollArea_7")
        self.scrollAreaWidgetContents_7 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_7.setGeometry(QtCore.QRect(0, 0, 342, 239))
        self.scrollAreaWidgetContents_7.setObjectName("scrollAreaWidgetContents_7")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.scrollAreaWidgetContents_7)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.horizontalLayout_16 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_16.setObjectName("horizontalLayout_16")
        self.label_40 = QtWidgets.QLabel(self.scrollAreaWidgetContents_7)
        self.label_40.setObjectName("label_40")
        self.horizontalLayout_16.addWidget(self.label_40)
        self.steno_outline = QtWidgets.QLineEdit(self.scrollAreaWidgetContents_7)
        self.steno_outline.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.steno_outline.setObjectName("steno_outline")
        self.horizontalLayout_16.addWidget(self.steno_outline)
        self.steno_spellcheck = QtWidgets.QPushButton(self.scrollAreaWidgetContents_7)
        self.steno_spellcheck.setFocusPolicy(QtCore.Qt.NoFocus)
        self.steno_spellcheck.setObjectName("steno_spellcheck")
        self.horizontalLayout_16.addWidget(self.steno_spellcheck)
        self.verticalLayout_3.addLayout(self.horizontalLayout_16)
        self.stenospell_res = QtWidgets.QListWidget(self.scrollAreaWidgetContents_7)
        self.stenospell_res.setFocusPolicy(QtCore.Qt.NoFocus)
        self.stenospell_res.setObjectName("stenospell_res")
        self.verticalLayout_3.addWidget(self.stenospell_res)
        self.scrollArea_7.setWidget(self.scrollAreaWidgetContents_7)
        self.horizontalLayout_14.addWidget(self.scrollArea_7)
        icon14 = QtGui.QIcon()
        icon14.addFile(":/spell-check-error.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.tabWidget.addTab(self.stenospell_pane, icon14, "")
        self.verticalLayout.addWidget(self.tabWidget)
        self.dockProp.setWidget(self.dockWidgetContents_5)
        PloverCAT.addDockWidget(QtCore.Qt.DockWidgetArea(2), self.dockProp)
        self.toolbarSteno = QtWidgets.QToolBar(PloverCAT)
        self.toolbarSteno.setObjectName("toolbarSteno")
        PloverCAT.addToolBar(QtCore.Qt.TopToolBarArea, self.toolbarSteno)
        self.toolbarAudio = QtWidgets.QToolBar(PloverCAT)
        self.toolbarAudio.setObjectName("toolbarAudio")
        PloverCAT.addToolBar(QtCore.Qt.TopToolBarArea, self.toolbarAudio)
        self.dockHistoryStack = QtWidgets.QDockWidget(PloverCAT)
        self.dockHistoryStack.setMinimumSize(QtCore.QSize(100, 210))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.dockHistoryStack.setFont(font)
        self.dockHistoryStack.setObjectName("dockHistoryStack")
        self.dockWidgetContents_6 = QtWidgets.QWidget()
        self.dockWidgetContents_6.setObjectName("dockWidgetContents_6")
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout(self.dockWidgetContents_6)
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.verticalLayout_17 = QtWidgets.QVBoxLayout()
        self.verticalLayout_17.setObjectName("verticalLayout_17")
        self.undoView = QtWidgets.QUndoView(self.dockWidgetContents_6)
        self.undoView.setFocusPolicy(QtCore.Qt.NoFocus)
        self.undoView.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.undoView.setObjectName("undoView")
        self.verticalLayout_17.addWidget(self.undoView)
        self.horizontalLayout_6.addLayout(self.verticalLayout_17)
        self.dockHistoryStack.setWidget(self.dockWidgetContents_6)
        PloverCAT.addDockWidget(QtCore.Qt.DockWidgetArea(1), self.dockHistoryStack)
        self.dockStenoData = QtWidgets.QDockWidget(PloverCAT)
        self.dockStenoData.setMinimumSize(QtCore.QSize(127, 113))
        self.dockStenoData.setObjectName("dockStenoData")
        self.dockWidgetContents_7 = QtWidgets.QWidget()
        self.dockWidgetContents_7.setObjectName("dockWidgetContents_7")
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout(self.dockWidgetContents_7)
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        self.parSteno = QtWidgets.QListWidget(self.dockWidgetContents_7)
        self.parSteno.setFocusPolicy(QtCore.Qt.NoFocus)
        self.parSteno.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.parSteno.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.parSteno.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.parSteno.setAlternatingRowColors(True)
        self.parSteno.setFlow(QtWidgets.QListView.LeftToRight)
        self.parSteno.setProperty("isWrapping", True)
        self.parSteno.setItemAlignment(QtCore.Qt.AlignLeading)
        self.parSteno.setObjectName("parSteno")
        self.horizontalLayout_8.addWidget(self.parSteno)
        self.verticalLayout_22 = QtWidgets.QVBoxLayout()
        self.verticalLayout_22.setObjectName("verticalLayout_22")
        self.downgradeRevealStenoEl = QtWidgets.QPushButton(self.dockWidgetContents_7)
        self.downgradeRevealStenoEl.setEnabled(False)
        self.downgradeRevealStenoEl.setText("")
        icon15 = QtGui.QIcon()
        icon15.addFile(":/arrow-270-medium.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.downgradeRevealStenoEl.setIcon(icon15)
        self.downgradeRevealStenoEl.setObjectName("downgradeRevealStenoEl")
        self.verticalLayout_22.addWidget(self.downgradeRevealStenoEl)
        self.reveal_steno_refresh = QtWidgets.QPushButton(self.dockWidgetContents_7)
        self.reveal_steno_refresh.setFocusPolicy(QtCore.Qt.NoFocus)
        self.reveal_steno_refresh.setText("")
        icon16 = QtGui.QIcon()
        icon16.addFile(":/arrow-circle-double-135.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.reveal_steno_refresh.setIcon(icon16)
        self.reveal_steno_refresh.setObjectName("reveal_steno_refresh")
        self.verticalLayout_22.addWidget(self.reveal_steno_refresh)
        self.horizontalLayout_8.addLayout(self.verticalLayout_22)
        self.dockStenoData.setWidget(self.dockWidgetContents_7)
        PloverCAT.addDockWidget(QtCore.Qt.DockWidgetArea(8), self.dockStenoData)
        self.toolbarEdit = QtWidgets.QToolBar(PloverCAT)
        self.toolbarEdit.setObjectName("toolbarEdit")
        PloverCAT.addToolBar(QtCore.Qt.TopToolBarArea, self.toolbarEdit)
        self.dockNavigation = QtWidgets.QDockWidget(PloverCAT)
        self.dockNavigation.setMinimumSize(QtCore.QSize(100, 113))
        self.dockNavigation.setObjectName("dockNavigation")
        self.dockWidgetContents_2 = QtWidgets.QWidget()
        self.dockWidgetContents_2.setObjectName("dockWidgetContents_2")
        self.verticalLayout_12 = QtWidgets.QVBoxLayout(self.dockWidgetContents_2)
        self.verticalLayout_12.setObjectName("verticalLayout_12")
        self.navigationList = QtWidgets.QListWidget(self.dockWidgetContents_2)
        self.navigationList.setFocusPolicy(QtCore.Qt.NoFocus)
        self.navigationList.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.navigationList.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.navigationList.setTextElideMode(QtCore.Qt.ElideRight)
        self.navigationList.setObjectName("navigationList")
        self.verticalLayout_12.addWidget(self.navigationList)
        self.dockNavigation.setWidget(self.dockWidgetContents_2)
        PloverCAT.addDockWidget(QtCore.Qt.DockWidgetArea(2), self.dockNavigation)
        self.actionOpen = QtWidgets.QAction(PloverCAT)
        icon17 = QtGui.QIcon()
        icon17.addFile(":/folder-open-document-text.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionOpen.setIcon(icon17)
        self.actionOpen.setObjectName("actionOpen")
        self.actionSaveAs = QtWidgets.QAction(PloverCAT)
        self.actionSaveAs.setObjectName("actionSaveAs")
        self.actionNew = QtWidgets.QAction(PloverCAT)
        icon18 = QtGui.QIcon()
        icon18.addFile(":/document.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionNew.setIcon(icon18)
        self.actionNew.setObjectName("actionNew")
        self.actionSave = QtWidgets.QAction(PloverCAT)
        icon19 = QtGui.QIcon()
        icon19.addFile(":/disk-black.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSave.setIcon(icon19)
        self.actionSave.setObjectName("actionSave")
        self.actionQuit = QtWidgets.QAction(PloverCAT)
        self.actionQuit.setObjectName("actionQuit")
        self.actionClose = QtWidgets.QAction(PloverCAT)
        self.actionClose.setObjectName("actionClose")
        self.actionAddCustomDict = QtWidgets.QAction(PloverCAT)
        icon20 = QtGui.QIcon()
        icon20.addFile(":/plus-button.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionAddCustomDict.setIcon(icon20)
        self.actionAddCustomDict.setObjectName("actionAddCustomDict")
        self.actionPlainText = QtWidgets.QAction(PloverCAT)
        self.actionPlainText.setObjectName("actionPlainText")
        self.actionASCII = QtWidgets.QAction(PloverCAT)
        self.actionASCII.setObjectName("actionASCII")
        self.actionSubRip = QtWidgets.QAction(PloverCAT)
        self.actionSubRip.setObjectName("actionSubRip")
        self.actionCut = QtWidgets.QAction(PloverCAT)
        icon21 = QtGui.QIcon()
        icon21.addFile(":/scissors-blue.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCut.setIcon(icon21)
        self.actionCut.setObjectName("actionCut")
        self.actionCopy = QtWidgets.QAction(PloverCAT)
        icon22 = QtGui.QIcon()
        icon22.addFile(":/clipboard--plus.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCopy.setIcon(icon22)
        self.actionCopy.setObjectName("actionCopy")
        self.actionPaste = QtWidgets.QAction(PloverCAT)
        icon23 = QtGui.QIcon()
        icon23.addFile(":/clipboard-paste-document-text.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionPaste.setIcon(icon23)
        self.actionPaste.setObjectName("actionPaste")
        self.actionOpenAudio = QtWidgets.QAction(PloverCAT)
        icon24 = QtGui.QIcon()
        icon24.addFile(":/folder-open-document-music.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionOpenAudio.setIcon(icon24)
        self.actionOpenAudio.setObjectName("actionOpenAudio")
        self.actionSkipBack = QtWidgets.QAction(PloverCAT)
        self.actionSkipBack.setEnabled(False)
        icon25 = QtGui.QIcon()
        icon25.addFile(":/control-skip-180.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSkipBack.setIcon(icon25)
        self.actionSkipBack.setObjectName("actionSkipBack")
        self.actionSkipForward = QtWidgets.QAction(PloverCAT)
        self.actionSkipForward.setEnabled(False)
        icon26 = QtGui.QIcon()
        icon26.addFile(":/control-skip.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSkipForward.setIcon(icon26)
        self.actionSkipForward.setObjectName("actionSkipForward")
        self.actionStopAudio = QtWidgets.QAction(PloverCAT)
        self.actionStopAudio.setEnabled(False)
        icon27 = QtGui.QIcon()
        icon27.addFile(":/control-stop-square.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionStopAudio.setIcon(icon27)
        self.actionStopAudio.setObjectName("actionStopAudio")
        self.actionSlowDown = QtWidgets.QAction(PloverCAT)
        self.actionSlowDown.setEnabled(False)
        self.actionSlowDown.setObjectName("actionSlowDown")
        self.actionSpeedUp = QtWidgets.QAction(PloverCAT)
        self.actionSpeedUp.setEnabled(False)
        self.actionSpeedUp.setObjectName("actionSpeedUp")
        self.actionPlayPause = QtWidgets.QAction(PloverCAT)
        self.actionPlayPause.setEnabled(False)
        icon28 = QtGui.QIcon()
        icon28.addFile(":/control-stop.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionPlayPause.setIcon(icon28)
        self.actionPlayPause.setObjectName("actionPlayPause")
        self.actionMergeParagraphs = QtWidgets.QAction(PloverCAT)
        icon29 = QtGui.QIcon()
        icon29.addFile(":/arrow-join.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionMergeParagraphs.setIcon(icon29)
        self.actionMergeParagraphs.setObjectName("actionMergeParagraphs")
        self.actionSplitParagraph = QtWidgets.QAction(PloverCAT)
        icon30 = QtGui.QIcon()
        icon30.addFile(":/arrow-split.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSplitParagraph.setIcon(icon30)
        self.actionSplitParagraph.setObjectName("actionSplitParagraph")
        self.actionWindowFont = QtWidgets.QAction(PloverCAT)
        icon31 = QtGui.QIcon()
        icon31.addFile(":/edit.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionWindowFont.setIcon(icon31)
        self.actionWindowFont.setObjectName("actionWindowFont")
        self.actionODT = QtWidgets.QAction(PloverCAT)
        self.actionODT.setObjectName("actionODT")
        self.actionNormalCopy = QtWidgets.QAction(PloverCAT)
        icon32 = QtGui.QIcon()
        icon32.addFile(":/clipboard.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionNormalCopy.setIcon(icon32)
        self.actionNormalCopy.setObjectName("actionNormalCopy")
        self.actionFindReplacePane = QtWidgets.QAction(PloverCAT)
        self.actionFindReplacePane.setIcon(icon11)
        self.actionFindReplacePane.setObjectName("actionFindReplacePane")
        self.actionOpenTranscriptFolder = QtWidgets.QAction(PloverCAT)
        self.actionOpenTranscriptFolder.setEnabled(False)
        self.actionOpenTranscriptFolder.setObjectName("actionOpenTranscriptFolder")
        self.actionRecordPause = QtWidgets.QAction(PloverCAT)
        icon33 = QtGui.QIcon()
        icon33.addFile(":/microphone.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionRecordPause.setIcon(icon33)
        self.actionRecordPause.setObjectName("actionRecordPause")
        self.actionStopRecording = QtWidgets.QAction(PloverCAT)
        self.actionStopRecording.setEnabled(False)
        self.actionStopRecording.setObjectName("actionStopRecording")
        self.actionShowVideo = QtWidgets.QAction(PloverCAT)
        self.actionShowVideo.setEnabled(False)
        self.actionShowVideo.setObjectName("actionShowVideo")
        self.actionRemoveTranscriptDict = QtWidgets.QAction(PloverCAT)
        icon34 = QtGui.QIcon()
        icon34.addFile(":/minus-button.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionRemoveTranscriptDict.setIcon(icon34)
        self.actionRemoveTranscriptDict.setObjectName("actionRemoveTranscriptDict")
        self.actionImportRTF = QtWidgets.QAction(PloverCAT)
        self.actionImportRTF.setObjectName("actionImportRTF")
        self.actionCursorAtEnd = QtWidgets.QAction(PloverCAT)
        self.actionCursorAtEnd.setCheckable(True)
        icon35 = QtGui.QIcon()
        icon35.addFile(":/lock.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCursorAtEnd.setIcon(icon35)
        self.actionCursorAtEnd.setObjectName("actionCursorAtEnd")
        self.actionCaptureAllOutput = QtWidgets.QAction(PloverCAT)
        self.actionCaptureAllOutput.setCheckable(True)
        self.actionCaptureAllOutput.setObjectName("actionCaptureAllOutput")
        self.actionUserManual = QtWidgets.QAction(PloverCAT)
        icon36 = QtGui.QIcon()
        icon36.addFile(":/book-question.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionUserManual.setIcon(icon36)
        self.actionUserManual.setObjectName("actionUserManual")
        self.actionAcknowledgements = QtWidgets.QAction(PloverCAT)
        self.actionAcknowledgements.setObjectName("actionAcknowledgements")
        self.actionPaperTape = QtWidgets.QAction(PloverCAT)
        self.actionPaperTape.setCheckable(True)
        self.actionPaperTape.setChecked(True)
        self.actionPaperTape.setObjectName("actionPaperTape")
        self.actionSuggestions = QtWidgets.QAction(PloverCAT)
        self.actionSuggestions.setCheckable(True)
        self.actionSuggestions.setChecked(True)
        self.actionSuggestions.setObjectName("actionSuggestions")
        self.actionHistory = QtWidgets.QAction(PloverCAT)
        self.actionHistory.setCheckable(True)
        self.actionHistory.setChecked(True)
        self.actionHistory.setObjectName("actionHistory")
        self.actionRevealSteno = QtWidgets.QAction(PloverCAT)
        self.actionRevealSteno.setCheckable(True)
        self.actionRevealSteno.setChecked(True)
        self.actionRevealSteno.setObjectName("actionRevealSteno")
        self.actionAudioControls = QtWidgets.QAction(PloverCAT)
        self.actionAudioControls.setCheckable(True)
        self.actionAudioControls.setChecked(True)
        self.actionAudioControls.setEnabled(True)
        self.actionAudioControls.setObjectName("actionAudioControls")
        self.actionToolbox = QtWidgets.QAction(PloverCAT)
        self.actionToolbox.setCheckable(True)
        self.actionToolbox.setChecked(True)
        self.actionToolbox.setObjectName("actionToolbox")
        self.actionClearParagraph = QtWidgets.QAction(PloverCAT)
        icon37 = QtGui.QIcon()
        icon37.addFile(":/cross.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionClearParagraph.setIcon(icon37)
        self.actionClearParagraph.setObjectName("actionClearParagraph")
        self.actionRetroactiveDefine = QtWidgets.QAction(PloverCAT)
        icon38 = QtGui.QIcon()
        icon38.addFile(":/card--plus.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionRetroactiveDefine.setIcon(icon38)
        self.actionRetroactiveDefine.setObjectName("actionRetroactiveDefine")
        self.actionDefineLast = QtWidgets.QAction(PloverCAT)
        icon39 = QtGui.QIcon()
        icon39.addFile(":/arrow-stop-180.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDefineLast.setIcon(icon39)
        self.actionDefineLast.setObjectName("actionDefineLast")
        self.actionAbout = QtWidgets.QAction(PloverCAT)
        icon40 = QtGui.QIcon()
        icon40.addFile(":/information.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionAbout.setIcon(icon40)
        self.actionAbout.setObjectName("actionAbout")
        self.actionAutocompletion = QtWidgets.QAction(PloverCAT)
        self.actionAutocompletion.setCheckable(True)
        icon41 = QtGui.QIcon()
        icon41.addFile(":/wand.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionAutocompletion.setIcon(icon41)
        self.actionAutocompletion.setObjectName("actionAutocompletion")
        self.actionPaperTapeFont = QtWidgets.QAction(PloverCAT)
        self.actionPaperTapeFont.setObjectName("actionPaperTapeFont")
        self.actionStyleFileSelect = QtWidgets.QAction(PloverCAT)
        self.actionStyleFileSelect.setObjectName("actionStyleFileSelect")
        self.actionGenerateStyleFromTemplate = QtWidgets.QAction(PloverCAT)
        self.actionGenerateStyleFromTemplate.setEnabled(True)
        self.actionGenerateStyleFromTemplate.setObjectName("actionGenerateStyleFromTemplate")
        self.actionCreateNewStyle = QtWidgets.QAction(PloverCAT)
        self.actionCreateNewStyle.setEnabled(False)
        self.actionCreateNewStyle.setObjectName("actionCreateNewStyle")
        self.actionRefreshEditor = QtWidgets.QAction(PloverCAT)
        self.actionRefreshEditor.setObjectName("actionRefreshEditor")
        self.actionInsertNormalText = QtWidgets.QAction(PloverCAT)
        icon42 = QtGui.QIcon()
        icon42.addFile(":/control-cursor.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionInsertNormalText.setIcon(icon42)
        self.actionInsertNormalText.setObjectName("actionInsertNormalText")
        self.actionShowAllCharacters = QtWidgets.QAction(PloverCAT)
        self.actionShowAllCharacters.setCheckable(True)
        self.actionShowAllCharacters.setIcon(icon12)
        self.actionShowAllCharacters.setObjectName("actionShowAllCharacters")
        self.actionPlainASCII = QtWidgets.QAction(PloverCAT)
        self.actionPlainASCII.setObjectName("actionPlainASCII")
        self.actionHTML = QtWidgets.QAction(PloverCAT)
        self.actionHTML.setObjectName("actionHTML")
        self.actionAddAutocompletionTerm = QtWidgets.QAction(PloverCAT)
        icon43 = QtGui.QIcon()
        icon43.addFile(":/lightning.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionAddAutocompletionTerm.setIcon(icon43)
        self.actionAddAutocompletionTerm.setObjectName("actionAddAutocompletionTerm")
        self.actionJumpToParagraph = QtWidgets.QAction(PloverCAT)
        self.actionJumpToParagraph.setObjectName("actionJumpToParagraph")
        self.actionTranslateTape = QtWidgets.QAction(PloverCAT)
        self.actionTranslateTape.setObjectName("actionTranslateTape")
        self.actionRTF = QtWidgets.QAction(PloverCAT)
        self.actionRTF.setObjectName("actionRTF")
        self.actionInsertImage = QtWidgets.QAction(PloverCAT)
        icon44 = QtGui.QIcon()
        icon44.addFile(":/image--plus.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionInsertImage.setIcon(icon44)
        self.actionInsertImage.setObjectName("actionInsertImage")
        self.actionBackgroundColor = QtWidgets.QAction(PloverCAT)
        icon45 = QtGui.QIcon()
        icon45.addFile(":/palette.png", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionBackgroundColor.setIcon(icon45)
        self.actionBackgroundColor.setObjectName("actionBackgroundColor")
        self.actionNavigation = QtWidgets.QAction(PloverCAT)
        self.actionNavigation.setCheckable(True)
        self.actionNavigation.setChecked(True)
        self.actionNavigation.setObjectName("actionNavigation")
        self.actionDeleteLast = QtWidgets.QAction(PloverCAT)
        self.actionDeleteLast.setObjectName("actionDeleteLast")
        self.actionAutomaticAffixes = QtWidgets.QAction(PloverCAT)
        self.actionAutomaticAffixes.setCheckable(True)
        self.actionAutomaticAffixes.setEnabled(True)
        self.actionAutomaticAffixes.setObjectName("actionAutomaticAffixes")
        self.actionEditFields = QtWidgets.QAction(PloverCAT)
        self.actionEditFields.setObjectName("actionEditFields")
        self.actionEnableAutosave = QtWidgets.QAction(PloverCAT)
        self.actionEnableAutosave.setCheckable(True)
        self.actionEnableAutosave.setChecked(True)
        self.actionEnableAutosave.setObjectName("actionEnableAutosave")
        self.actionEditAffixes = QtWidgets.QAction(PloverCAT)
        self.actionEditAffixes.setEnabled(False)
        self.actionEditAffixes.setObjectName("actionEditAffixes")
        self.actionSetAutosaveTime = QtWidgets.QAction(PloverCAT)
        self.actionSetAutosaveTime.setObjectName("actionSetAutosaveTime")
        self.actionEditMenuShortcuts = QtWidgets.QAction(PloverCAT)
        self.actionEditMenuShortcuts.setObjectName("actionEditMenuShortcuts")
        self.actionEditIndices = QtWidgets.QAction(PloverCAT)
        self.actionEditIndices.setObjectName("actionEditIndices")
        self.actionTranscriptSuggestions = QtWidgets.QAction(PloverCAT)
        self.actionTranscriptSuggestions.setObjectName("actionTranscriptSuggestions")
        self.actionRedact = QtWidgets.QAction(PloverCAT)
        self.actionRedact.setEnabled(False)
        self.actionRedact.setObjectName("actionRedact")
        self.actionCaptioning = QtWidgets.QAction(PloverCAT)
        self.actionCaptioning.setCheckable(True)
        self.actionCaptioning.setObjectName("actionCaptioning")
        self.actionFlushCaption = QtWidgets.QAction(PloverCAT)
        self.actionFlushCaption.setObjectName("actionFlushCaption")
        self.actionMassTimestampChange = QtWidgets.QAction(PloverCAT)
        self.actionMassTimestampChange.setEnabled(False)
        self.actionMassTimestampChange.setObjectName("actionMassTimestampChange")
        self.actionAddChangeAudioTimestamps = QtWidgets.QAction(PloverCAT)
        self.actionAddChangeAudioTimestamps.setEnabled(False)
        self.actionAddChangeAudioTimestamps.setObjectName("actionAddChangeAudioTimestamps")
        self.actionTape = QtWidgets.QAction(PloverCAT)
        self.actionTape.setObjectName("actionTape")
        self.actionSpellcheck = QtWidgets.QAction(PloverCAT)
        self.actionSpellcheck.setIcon(icon13)
        self.actionSpellcheck.setObjectName("actionSpellcheck")
        self.actionStenoSearch = QtWidgets.QAction(PloverCAT)
        self.actionStenoSearch.setIcon(icon14)
        self.actionStenoSearch.setObjectName("actionStenoSearch")
        self.actionStyling = QtWidgets.QAction(PloverCAT)
        self.actionStyling.setIcon(icon7)
        self.actionStyling.setObjectName("actionStyling")
        self.actionPageFormat = QtWidgets.QAction(PloverCAT)
        self.actionPageFormat.setIcon(icon8)
        self.actionPageFormat.setObjectName("actionPageFormat")
        self.actionParagraph = QtWidgets.QAction(PloverCAT)
        self.actionParagraph.setIcon(icon12)
        self.actionParagraph.setObjectName("actionParagraph")
        self.actionSearchWikipedia = QtWidgets.QAction(PloverCAT)
        self.actionSearchWikipedia.setObjectName("actionSearchWikipedia")
        self.actionSearchGoogle = QtWidgets.QAction(PloverCAT)
        self.actionSearchGoogle.setObjectName("actionSearchGoogle")
        self.actionSearchDuckDuckGo = QtWidgets.QAction(PloverCAT)
        self.actionSearchDuckDuckGo.setObjectName("actionSearchDuckDuckGo")
        self.actionSearchMerriamWebster = QtWidgets.QAction(PloverCAT)
        self.actionSearchMerriamWebster.setObjectName("actionSearchMerriamWebster")
        self.actionSearchOED = QtWidgets.QAction(PloverCAT)
        self.actionSearchOED.setObjectName("actionSearchOED")
        self.actionRevertTranscript = QtWidgets.QAction(PloverCAT)
        self.actionRevertTranscript.setObjectName("actionRevertTranscript")
        self.actionViewPloverLog = QtWidgets.QAction(PloverCAT)
        self.actionViewPloverLog.setObjectName("actionViewPloverLog")
        self.actionRunTests = QtWidgets.QAction(PloverCAT)
        self.actionRunTests.setObjectName("actionRunTests")
        self.actionColorSteno = QtWidgets.QAction(PloverCAT)
        self.actionColorSteno.setObjectName("actionColorSteno")
        self.actionColorText = QtWidgets.QAction(PloverCAT)
        self.actionColorText.setObjectName("actionColorText")
        self.actionColorAutomatic = QtWidgets.QAction(PloverCAT)
        self.actionColorAutomatic.setObjectName("actionColorAutomatic")
        self.actionColorField = QtWidgets.QAction(PloverCAT)
        self.actionColorField.setObjectName("actionColorField")
        self.actionColorIndex = QtWidgets.QAction(PloverCAT)
        self.actionColorIndex.setObjectName("actionColorIndex")
        self.menuExport_as.addAction(self.actionPlainText)
        self.menuExport_as.addAction(self.actionPlainASCII)
        self.menuExport_as.addAction(self.actionASCII)
        self.menuExport_as.addAction(self.actionHTML)
        self.menuExport_as.addAction(self.actionSubRip)
        self.menuExport_as.addAction(self.actionODT)
        self.menuExport_as.addAction(self.actionRTF)
        self.menuExport_as.addAction(self.actionTape)
        self.menuFile.addAction(self.actionNew)
        self.menuFile.addAction(self.actionOpen)
        self.menuFile.addAction(self.menuRecentFiles.menuAction())
        self.menuFile.addAction(self.actionImportRTF)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionSave)
        self.menuFile.addAction(self.actionSaveAs)
        self.menuFile.addAction(self.menuExport_as.menuAction())
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionOpenTranscriptFolder)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionClose)
        self.menuFile.addAction(self.actionQuit)
        self.menuEdit.addAction(self.actionCopy)
        self.menuEdit.addAction(self.actionCut)
        self.menuEdit.addAction(self.actionPaste)
        self.menuEdit.addAction(self.actionNormalCopy)
        self.menuEdit.addAction(self.menuClipboard.menuAction())
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionJumpToParagraph)
        self.menuEdit.addAction(self.actionClearParagraph)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionEnableAutosave)
        self.menuEdit.addAction(self.actionSetAutosaveTime)
        self.menuEdit.addAction(self.actionRevertTranscript)
        self.menuAudio.addAction(self.actionOpenAudio)
        self.menuAudio.addAction(self.actionPlayPause)
        self.menuAudio.addAction(self.actionStopAudio)
        self.menuAudio.addSeparator()
        self.menuAudio.addAction(self.actionSkipForward)
        self.menuAudio.addAction(self.actionSkipBack)
        self.menuAudio.addAction(self.actionSpeedUp)
        self.menuAudio.addAction(self.actionSlowDown)
        self.menuAudio.addSeparator()
        self.menuAudio.addAction(self.actionShowVideo)
        self.menuAudio.addSeparator()
        self.menuAudio.addAction(self.actionRecordPause)
        self.menuAudio.addAction(self.actionStopRecording)
        self.menuAudio.addSeparator()
        self.menuAudio.addAction(self.actionCaptioning)
        self.menuAudio.addAction(self.actionFlushCaption)
        self.menuAudio.addSeparator()
        self.menuAudio.addAction(self.actionAddChangeAudioTimestamps)
        self.menuDocks.addAction(self.actionPaperTape)
        self.menuDocks.addAction(self.actionSuggestions)
        self.menuDocks.addAction(self.actionHistory)
        self.menuDocks.addAction(self.actionRevealSteno)
        self.menuDocks.addAction(self.actionAudioControls)
        self.menuDocks.addAction(self.actionToolbox)
        self.menuDocks.addAction(self.actionNavigation)
        self.menuView.addAction(self.actionShowAllCharacters)
        self.menuView.addAction(self.actionWindowFont)
        self.menuView.addAction(self.actionBackgroundColor)
        self.menuView.addAction(self.menuHighlightColors.menuAction())
        self.menuView.addAction(self.actionPaperTapeFont)
        self.menuView.addAction(self.menuDocks.menuAction())
        self.menuView.addAction(self.actionEditMenuShortcuts)
        self.menuDictionary.addAction(self.actionAddCustomDict)
        self.menuDictionary.addAction(self.actionRemoveTranscriptDict)
        self.menuDictionary.addAction(self.actionTranscriptSuggestions)
        self.menuDiagnostics.addAction(self.actionViewPloverLog)
        self.menuDiagnostics.addAction(self.actionRunTests)
        self.menuHelp.addAction(self.actionAbout)
        self.menuHelp.addAction(self.actionUserManual)
        self.menuHelp.addAction(self.actionAcknowledgements)
        self.menuHelp.addAction(self.menuDiagnostics.menuAction())
        self.menuSteno_Actions.addAction(self.actionMergeParagraphs)
        self.menuSteno_Actions.addAction(self.actionSplitParagraph)
        self.menuSteno_Actions.addSeparator()
        self.menuSteno_Actions.addAction(self.actionAutocompletion)
        self.menuSteno_Actions.addAction(self.actionAddAutocompletionTerm)
        self.menuSteno_Actions.addAction(self.actionRetroactiveDefine)
        self.menuSteno_Actions.addAction(self.actionDefineLast)
        self.menuSteno_Actions.addAction(self.actionDeleteLast)
        self.menuSteno_Actions.addSeparator()
        self.menuSteno_Actions.addAction(self.actionCursorAtEnd)
        self.menuSteno_Actions.addAction(self.actionCaptureAllOutput)
        self.menuSteno_Actions.addAction(self.actionTranslateTape)
        self.menuSteno_Actions.addSeparator()
        self.menuSteno_Actions.addAction(self.actionMassTimestampChange)
        self.menuStyling.addAction(self.actionStyleFileSelect)
        self.menuStyling.addAction(self.actionCreateNewStyle)
        self.menuStyling.addAction(self.actionGenerateStyleFromTemplate)
        self.menuStyling.addAction(self.menuParagraphStyle.menuAction())
        self.menuStyling.addAction(self.actionRefreshEditor)
        self.menuStyling.addSeparator()
        self.menuStyling.addAction(self.actionAutomaticAffixes)
        self.menuStyling.addAction(self.actionEditAffixes)
        self.menuInsert.addAction(self.menuField.menuAction())
        self.menuInsert.addAction(self.menuIndexEntry.menuAction())
        self.menuInsert.addAction(self.actionInsertImage)
        self.menuInsert.addAction(self.actionInsertNormalText)
        self.menuInsert.addAction(self.actionRedact)
        self.menuInsert.addSeparator()
        self.menuInsert.addAction(self.actionEditFields)
        self.menuInsert.addAction(self.actionEditIndices)
        self.menuTools.addAction(self.actionStyling)
        self.menuTools.addAction(self.actionPageFormat)
        self.menuTools.addAction(self.actionFindReplacePane)
        self.menuTools.addAction(self.actionParagraph)
        self.menuTools.addAction(self.actionSpellcheck)
        self.menuTools.addAction(self.actionStenoSearch)
        self.menuTools.addSeparator()
        self.menuTools.addAction(self.actionSearchWikipedia)
        self.menuTools.addAction(self.actionSearchMerriamWebster)
        self.menuTools.addAction(self.actionSearchOED)
        self.menuTools.addAction(self.actionSearchGoogle)
        self.menuTools.addAction(self.actionSearchDuckDuckGo)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())
        self.menubar.addAction(self.menuSteno_Actions.menuAction())
        self.menubar.addAction(self.menuInsert.menuAction())
        self.menubar.addAction(self.menuAudio.menuAction())
        self.menubar.addAction(self.menuStyling.menuAction())
        self.menubar.addAction(self.menuDictionary.menuAction())
        self.menubar.addAction(self.menuTools.menuAction())
        self.menubar.addAction(self.menuView.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())
        self.toolbarFile.addAction(self.actionNew)
        self.toolbarFile.addAction(self.actionOpen)
        self.toolbarFile.addAction(self.actionSave)
        self.toolbarSteno.addAction(self.actionAddCustomDict)
        self.toolbarSteno.addAction(self.actionMergeParagraphs)
        self.toolbarSteno.addAction(self.actionSplitParagraph)
        self.toolbarSteno.addAction(self.actionAddAutocompletionTerm)
        self.toolbarSteno.addAction(self.actionRetroactiveDefine)
        self.toolbarSteno.addAction(self.actionDefineLast)
        self.toolbarAudio.addAction(self.actionPlayPause)
        self.toolbarAudio.addAction(self.actionStopAudio)
        self.toolbarAudio.addAction(self.actionRecordPause)
        self.toolbarEdit.addAction(self.actionCut)
        self.toolbarEdit.addAction(self.actionCopy)
        self.toolbarEdit.addAction(self.actionPaste)
        self.toolbarEdit.addAction(self.actionInsertNormalText)

        self.retranslateUi(PloverCAT)
        self.mainTabs.setCurrentIndex(0)
        self.tabWidget.setCurrentIndex(0)
        self.actionSpeedUp.triggered.connect(self.playRate.stepUp) # type: ignore
        self.actionSlowDown.triggered.connect(self.playRate.stepDown) # type: ignore
        self.actionPaperTape.triggered['bool'].connect(self.dockPaper.setVisible) # type: ignore
        self.actionSuggestions.triggered['bool'].connect(self.dockSuggest.setVisible) # type: ignore
        self.actionHistory.triggered['bool'].connect(self.dockHistoryStack.setVisible) # type: ignore
        self.actionRevealSteno.triggered['bool'].connect(self.dockStenoData.setVisible) # type: ignore
        self.actionAudioControls.triggered['bool'].connect(self.dockAudio.setVisible) # type: ignore
        self.actionToolbox.triggered['bool'].connect(self.dockProp.setVisible) # type: ignore
        self.dockAudio.visibilityChanged['bool'].connect(self.actionAudioControls.setChecked) # type: ignore
        self.dockHistoryStack.visibilityChanged['bool'].connect(self.actionHistory.setChecked) # type: ignore
        self.dockPaper.visibilityChanged['bool'].connect(self.actionPaperTape.setChecked) # type: ignore
        self.dockProp.visibilityChanged['bool'].connect(self.actionToolbox.setChecked) # type: ignore
        self.dockStenoData.visibilityChanged['bool'].connect(self.actionRevealSteno.setChecked) # type: ignore
        self.dockSuggest.visibilityChanged['bool'].connect(self.actionSuggestions.setChecked) # type: ignore
        self.actionNavigation.triggered['bool'].connect(self.dockNavigation.setVisible) # type: ignore
        self.actionAutomaticAffixes.toggled['bool'].connect(self.actionEditAffixes.setEnabled) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(PloverCAT)

    def retranslateUi(self, PloverCAT):
        _translate = QtCore.QCoreApplication.translate
        PloverCAT.setWindowTitle(_translate("PloverCAT", "MainWindow"))
        self.label_39.setText(_translate("PloverCAT", "Welcome to Plover2CAT. Create a new transcript or select a recent transcript below."))
        self.mainTabs.setTabText(self.mainTabs.indexOf(self.homeTab), _translate("PloverCAT", "Recent Files"))
        self.menuFile.setTitle(_translate("PloverCAT", "File"))
        self.menuExport_as.setTitle(_translate("PloverCAT", "Export as..."))
        self.menuRecentFiles.setTitle(_translate("PloverCAT", "Recent Files"))
        self.menuEdit.setTitle(_translate("PloverCAT", "Edit"))
        self.menuClipboard.setTitle(_translate("PloverCAT", "Clipboard"))
        self.menuAudio.setTitle(_translate("PloverCAT", "Audiovisual"))
        self.menuView.setTitle(_translate("PloverCAT", "Preferences"))
        self.menuDocks.setTitle(_translate("PloverCAT", "Docks"))
        self.menuHighlightColors.setTitle(_translate("PloverCAT", "Highlight Colors"))
        self.menuDictionary.setTitle(_translate("PloverCAT", "Dictionary"))
        self.menuHelp.setTitle(_translate("PloverCAT", "Help"))
        self.menuDiagnostics.setTitle(_translate("PloverCAT", "Diagnostics"))
        self.menuSteno_Actions.setTitle(_translate("PloverCAT", "Steno Actions"))
        self.menuStyling.setTitle(_translate("PloverCAT", "Styling"))
        self.menuParagraphStyle.setTitle(_translate("PloverCAT", "Set Paragraph Style"))
        self.menuInsert.setTitle(_translate("PloverCAT", "Insert"))
        self.menuField.setTitle(_translate("PloverCAT", "Field..."))
        self.menuIndexEntry.setTitle(_translate("PloverCAT", "Index Entry"))
        self.menuTools.setTitle(_translate("PloverCAT", "Tools"))
        self.toolbarFile.setWindowTitle(_translate("PloverCAT", "File Toolbar"))
        self.toolbarFile.setAccessibleName(_translate("PloverCAT", "File Toolbar"))
        self.dockPaper.setToolTip(_translate("PloverCAT", "Displays steno notes, time of\n"
"stroke, audio time, and cursor\n"
"position."))
        self.dockPaper.setAccessibleName(_translate("PloverCAT", "Paper Tape"))
        self.dockPaper.setWindowTitle(_translate("PloverCAT", "Paper Tape"))
        self.strokeLocate.setToolTip(_translate("PloverCAT", "Select stroke and locate in editor text"))
        self.strokeLocate.setText(_translate("PloverCAT", "Locate"))
        self.dockSuggest.setToolTip(_translate("PloverCAT", "Displays suggestions from Tapey Tape"))
        self.dockSuggest.setWindowTitle(_translate("PloverCAT", "Suggestions"))
        self.suggest_source.setToolTip(_translate("PloverCAT", "Selects which plugin provides suggestions."))
        self.suggest_source.setItemText(0, _translate("PloverCAT", "tapey-tape"))
        self.suggest_source.setItemText(1, _translate("PloverCAT", "clippy_2"))
        self.suggest_sort.setToolTip(_translate("PloverCAT", "Enable to sort by most recent"))
        self.suggest_sort.setText(_translate("PloverCAT", "By Recency"))
        self.dockAudio.setToolTip(_translate("PloverCAT", "Audio seeker and other controls"))
        self.dockAudio.setWindowTitle(_translate("PloverCAT", "Audio Controls"))
        self.audio_label.setText(_translate("PloverCAT", "Select file to play audio"))
        self.playRate.setToolTip(_translate("PloverCAT", "Playback rate"))
        self.playRate.setSuffix(_translate("PloverCAT", "x"))
        self.audioDelay.setToolTip(_translate("PloverCAT", "Millisecond adjustment between actual timestamp and audio and steno timestamps."))
        self.audioDelay.setSuffix(_translate("PloverCAT", "ms"))
        self.audio_curr_pos.setToolTip(_translate("PloverCAT", "Current time"))
        self.audio_curr_pos.setText(_translate("PloverCAT", "00:00:00"))
        self.audio_seeker.setToolTip(_translate("PloverCAT", "Track for media presently playing"))
        self.audio_duration.setToolTip(_translate("PloverCAT", "Duration of track"))
        self.audio_duration.setText(_translate("PloverCAT", "00:00:00"))
        self.dockProp.setToolTip(_translate("PloverCAT", "Contains various controls"))
        self.dockProp.setWindowTitle(_translate("PloverCAT", "Toolbox"))
        self.style_file_path.setToolTip(_translate("PloverCAT", "Name of current style file"))
        self.style_file_path.setText(_translate("PloverCAT", "Style file location"))
        self.label_3.setText(_translate("PloverCAT", "Current Paragraph Style:"))
        self.style_controls.setTitle(_translate("PloverCAT", "Style Settings"))
        self.blockFontSize.setSuffix(_translate("PloverCAT", "pt"))
        self.blockFontBold.setToolTip(_translate("PloverCAT", "Set text italic for style"))
        self.blockFontItalic.setToolTip(_translate("PloverCAT", "Set text italicized for style"))
        self.blockFontUnderline.setToolTip(_translate("PloverCAT", "Set text underlined for style"))
        self.blockLeftAlign.setToolTip(_translate("PloverCAT", "Set alignment left for style"))
        self.blockCenterAlign.setToolTip(_translate("PloverCAT", "Set alignment center for style"))
        self.blockRightAlign.setToolTip(_translate("PloverCAT", "Set alignment right for style"))
        self.blockJustify.setToolTip(_translate("PloverCAT", "Set alignment justified for style"))
        self.blockLineSpace.setToolTip(_translate("PloverCAT", "Set line spacing as proportion of font height (ie 200% for double space)"))
        self.blockLineSpace.setSuffix(_translate("PloverCAT", "%"))
        self.label_30.setText(_translate("PloverCAT", "Average Char Width "))
        self.fontspaceInInch.setToolTip(_translate("PloverCAT", "Average character width of font, use this to estimate indent and margin positions. Less accurate with proportional fonts."))
        self.fontspaceInInch.setSuffix(_translate("PloverCAT", "in"))
        self.label_28.setText(_translate("PloverCAT", "First Line Indent"))
        self.blockTextIndent.setToolTip(_translate("PloverCAT", "Specify text indent in inches relative to page margin"))
        self.blockTextIndent.setSuffix(_translate("PloverCAT", "in"))
        self.label_29.setText(_translate("PloverCAT", "Tab Stop Distance"))
        self.blockTabStop.setToolTip(_translate("PloverCAT", "Specify position of tab stop"))
        self.blockTabStop.setSuffix(_translate("PloverCAT", "in"))
        self.label_24.setText(_translate("PloverCAT", "Left Margin (Indent)"))
        self.blockLeftMargin.setToolTip(_translate("PloverCAT", "Specify paragraph margin relative to left page margin"))
        self.blockLeftMargin.setSuffix(_translate("PloverCAT", "in"))
        self.label_25.setText(_translate("PloverCAT", "Right Margin (Indent)"))
        self.blockRightMargin.setToolTip(_translate("PloverCAT", "Specify right margin relative to right page margin"))
        self.blockRightMargin.setSuffix(_translate("PloverCAT", "in"))
        self.label_26.setText(_translate("PloverCAT", "Top Margin (Padding)"))
        self.blockTopMargin.setToolTip(_translate("PloverCAT", "Specify padding for top of paragraph"))
        self.blockTopMargin.setSuffix(_translate("PloverCAT", "in"))
        self.label_27.setText(_translate("PloverCAT", "Bottom Margin (Padding)"))
        self.blockBottomMargin.setToolTip(_translate("PloverCAT", "Specify padding for bottom of paragraph"))
        self.blockBottomMargin.setSuffix(_translate("PloverCAT", "in"))
        self.label_31.setText(_translate("PloverCAT", "Parent Style"))
        self.blockParentStyle.setToolTip(_translate("PloverCAT", "Select parent style for style"))
        self.label_32.setText(_translate("PloverCAT", "Next Style"))
        self.blockNextStyle.setToolTip(_translate("PloverCAT", "Select style of next paragraph"))
        self.label_33.setText(_translate("PloverCAT", "Heading Level"))
        self.blockHeadingLevel.setToolTip(_translate("PloverCAT", "Specify heading level of style"))
        self.blockHeadingLevel.setItemText(1, _translate("PloverCAT", "1"))
        self.blockHeadingLevel.setItemText(2, _translate("PloverCAT", "2"))
        self.blockHeadingLevel.setItemText(3, _translate("PloverCAT", "3"))
        self.blockHeadingLevel.setItemText(4, _translate("PloverCAT", "4"))
        self.blockHeadingLevel.setItemText(5, _translate("PloverCAT", "5"))
        self.blockHeadingLevel.setItemText(6, _translate("PloverCAT", "6"))
        self.blockHeadingLevel.setItemText(7, _translate("PloverCAT", "7"))
        self.blockHeadingLevel.setItemText(8, _translate("PloverCAT", "8"))
        self.blockHeadingLevel.setItemText(9, _translate("PloverCAT", "9"))
        self.blockHeadingLevel.setItemText(10, _translate("PloverCAT", "10"))
        self.editCurrentStyle.setText(_translate("PloverCAT", "Modify Current Style"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.styling_pane), _translate("PloverCAT", "Style"))
        self.tabWidget.setTabToolTip(self.tabWidget.indexOf(self.styling_pane), _translate("PloverCAT", "Set style for current paragraph or load styles for export"))
        self.label_8.setText(_translate("PloverCAT", "Page Width"))
        self.page_width.setToolTip(_translate("PloverCAT", "Paper width"))
        self.page_width.setSuffix(_translate("PloverCAT", "in."))
        self.label_9.setText(_translate("PloverCAT", "Page Height"))
        self.page_height.setToolTip(_translate("PloverCAT", "Page height"))
        self.page_height.setSuffix(_translate("PloverCAT", "in."))
        self.label_10.setText(_translate("PloverCAT", "Left Margin"))
        self.page_left_margin.setToolTip(_translate("PloverCAT", "Page left margin"))
        self.page_left_margin.setSuffix(_translate("PloverCAT", "in."))
        self.label_11.setText(_translate("PloverCAT", "Top Margin"))
        self.page_top_margin.setToolTip(_translate("PloverCAT", "Page top margin"))
        self.page_top_margin.setSuffix(_translate("PloverCAT", "in."))
        self.label_12.setText(_translate("PloverCAT", "Right Margin"))
        self.page_right_margin.setToolTip(_translate("PloverCAT", "Page right margin"))
        self.page_right_margin.setSuffix(_translate("PloverCAT", "in."))
        self.label_13.setText(_translate("PloverCAT", "Bottom Margin"))
        self.page_bottom_margin.setToolTip(_translate("PloverCAT", "Page bottom margin"))
        self.page_bottom_margin.setSuffix(_translate("PloverCAT", "in."))
        self.label_15.setText(_translate("PloverCAT", "Max Char per Line"))
        self.page_max_char.setToolTip(_translate("PloverCAT", "Each line can contain at most n char, excluding line number and timestamps"))
        self.page_max_char.setSpecialValueText(_translate("PloverCAT", "Automatic"))
        self.label_14.setText(_translate("PloverCAT", "Max Lines per Page"))
        self.page_max_lines.setSpecialValueText(_translate("PloverCAT", "Automatic"))
        self.label_35.setText(_translate("PloverCAT", "Line Numbering"))
        self.enable_line_num.setToolTip(_translate("PloverCAT", "Enable line number in applicable formats"))
        self.label_34.setText(_translate("PloverCAT", "Frequency"))
        self.line_num_freq.setToolTip(_translate("PloverCAT", "Show line number every nth line for ODF"))
        self.label_36.setText(_translate("PloverCAT", "Line Timestamp"))
        self.label_37.setText(_translate("PloverCAT", "Header:"))
        self.header_left.setToolTip(_translate("PloverCAT", "Header text to be aligned left. Use %p for page number."))
        self.header_left.setPlaceholderText(_translate("PloverCAT", "Left"))
        self.header_center.setToolTip(_translate("PloverCAT", "Header text to be centered. Use %p for page number."))
        self.header_center.setPlaceholderText(_translate("PloverCAT", "Center"))
        self.header_right.setToolTip(_translate("PloverCAT", "Header text to be aligned right. Use %p for page number."))
        self.header_right.setPlaceholderText(_translate("PloverCAT", "Right"))
        self.label_38.setText(_translate("PloverCAT", "Footer:"))
        self.footer_left.setToolTip(_translate("PloverCAT", "Footer text to be aligned left. Use %p for page number."))
        self.footer_left.setPlaceholderText(_translate("PloverCAT", "Left"))
        self.footer_center.setToolTip(_translate("PloverCAT", "Footer text to be aligned center. Use %p for page number."))
        self.footer_center.setPlaceholderText(_translate("PloverCAT", "Center"))
        self.footer_right.setToolTip(_translate("PloverCAT", "Footer text to be aligned right. Use %p for page number."))
        self.footer_right.setPlaceholderText(_translate("PloverCAT", "Right"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.page_format_pane), _translate("PloverCAT", "Page Format"))
        self.tabWidget.setTabToolTip(self.tabWidget.indexOf(self.page_format_pane), _translate("PloverCAT", "Set page format"))
        self.groupBox_2.setTitle(_translate("PloverCAT", "Search Types"))
        self.search_text.setToolTip(_translate("PloverCAT", "Search visible text for match"))
        self.search_text.setText(_translate("PloverCAT", "Text"))
        self.search_untrans.setToolTip(_translate("PloverCAT", "Search what appears to be untranslated chords in visible text"))
        self.search_untrans.setText(_translate("PloverCAT", "Untrans"))
        self.search_steno.setToolTip(_translate("PloverCAT", "Search strokes, find text has to match stroke completely"))
        self.search_steno.setText(_translate("PloverCAT", "Underlying Steno"))
        self.search_term.setToolTip(_translate("PloverCAT", "Text to search for"))
        self.search_term.setPlaceholderText(_translate("PloverCAT", "Find"))
        self.search_backward.setToolTip(_translate("PloverCAT", "Search backwards"))
        self.search_backward.setText(_translate("PloverCAT", "Previous"))
        self.search_forward.setToolTip(_translate("PloverCAT", "Search forward"))
        self.search_forward.setText(_translate("PloverCAT", "Next"))
        self.find_all.setToolTip(_translate("PloverCAT", "Find all matches"))
        self.find_all.setText(_translate("PloverCAT", "Find All"))
        self.search_case.setToolTip(_translate("PloverCAT", "Case sensitive search"))
        self.search_case.setText(_translate("PloverCAT", "Match Case"))
        self.search_whole.setToolTip(_translate("PloverCAT", "Text in find has to match text as a whole word/stroke"))
        self.search_whole.setText(_translate("PloverCAT", "Whole Word/Stroke"))
        self.search_wrap.setToolTip(_translate("PloverCAT", "Search will continue from top/bottom if a match is not found in forward/back search"))
        self.search_wrap.setText(_translate("PloverCAT", "Wrap"))
        self.replace_term.setToolTip(_translate("PloverCAT", "The text to replace the match found in search"))
        self.replace_term.setPlaceholderText(_translate("PloverCAT", "Replace"))
        self.replace_selected.setToolTip(_translate("PloverCAT", "Replace the found match with the text in the replace textbox"))
        self.replace_selected.setText(_translate("PloverCAT", "Once"))
        self.replace_all.setToolTip(_translate("PloverCAT", "Replace all matches with text in replace textbox"))
        self.replace_all.setText(_translate("PloverCAT", "All"))
        self.searchResults.setToolTip(_translate("PloverCAT", "Displays search results"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.find_replace_pane), _translate("PloverCAT", "Find and Replace"))
        self.tabWidget.setTabToolTip(self.tabWidget.indexOf(self.find_replace_pane), _translate("PloverCAT", "Find and replace"))
        self.label_2.setText(_translate("PloverCAT", "Paragraph"))
        self.editorParagraphLabel.setToolTip(_translate("PloverCAT", "Paragraph number"))
        self.editorParagraphLabel.setText(_translate("PloverCAT", "0"))
        self.label.setText(_translate("PloverCAT", "Creation Time"))
        self.editorCreationTime.setToolTip(_translate("PloverCAT", "Modifies creation time of paragraph"))
        self.editorCreationTime.setDisplayFormat(_translate("PloverCAT", "yyyy-MM-dd hh:mm:ss.zzz"))
        self.label_6.setText(_translate("PloverCAT", "Edit Time"))
        self.editorEditTime.setToolTip(_translate("PloverCAT", "Read only. Displays edit time of paragraph. Will change upon any cursor movement."))
        self.editorEditTime.setDisplayFormat(_translate("PloverCAT", "yyyy-MM-dd hh:mm:ss.zzz"))
        self.label_4.setText(_translate("PloverCAT", "Audio Start Time"))
        self.editorAudioStart.setToolTip(_translate("PloverCAT", "Modifies audio start time of paragraph."))
        self.editorAudioStart.setDisplayFormat(_translate("PloverCAT", "hh:mm:ss.zzz"))
        self.label_5.setText(_translate("PloverCAT", "Audio End Time"))
        self.editorAudioEnd.setToolTip(_translate("PloverCAT", "Sets audio end time for this paragraph. "))
        self.editorAudioEnd.setDisplayFormat(_translate("PloverCAT", "hh:mm:ss.zzz"))
        self.label_7.setText(_translate("PloverCAT", "Notes"))
        self.editorNotes.setToolTip(_translate("PloverCAT", "Custom notes attached to paragraph"))
        self.submitEdited.setToolTip(_translate("PloverCAT", "Enable with checkbox in order to submit edits"))
        self.submitEdited.setText(_translate("PloverCAT", "Edit Paragraph Properties"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.paragraph_pane), _translate("PloverCAT", "Paragraph"))
        self.tabWidget.setTabToolTip(self.tabWidget.indexOf(self.paragraph_pane), _translate("PloverCAT", "Edit paragraph properties"))
        self.spell_search.setText(_translate("PloverCAT", "Search"))
        self.spell_skip.setText(_translate("PloverCAT", "Skip"))
        self.spell_ignore_all.setText(_translate("PloverCAT", "Ignore All"))
        self.spell_change.setText(_translate("PloverCAT", "Change"))
        self.label_21.setText(_translate("PloverCAT", "Detected:"))
        self.spellcheck_suggestions.setToolTip(_translate("PloverCAT", "Double click on choice to replace"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.spellcheck_pane), _translate("PloverCAT", "Spellcheck"))
        self.tabWidget.setTabToolTip(self.tabWidget.indexOf(self.spellcheck_pane), _translate("PloverCAT", "Spellcheck editor transcript"))
        self.label_40.setText(_translate("PloverCAT", "Outline:"))
        self.steno_spellcheck.setText(_translate("PloverCAT", "Search"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.stenospell_pane), _translate("PloverCAT", "Steno Search"))
        self.toolbarSteno.setWindowTitle(_translate("PloverCAT", "Steno Actions Toolbar"))
        self.toolbarSteno.setAccessibleName(_translate("PloverCAT", "Editing Toolbar"))
        self.toolbarAudio.setWindowTitle(_translate("PloverCAT", "Audio Toolbar"))
        self.toolbarAudio.setAccessibleName(_translate("PloverCAT", "Audiovisual Toolbar"))
        self.dockHistoryStack.setWindowTitle(_translate("PloverCAT", "History"))
        self.undoView.setToolTip(_translate("PloverCAT", "Session actions for undo/redo"))
        self.dockStenoData.setWindowTitle(_translate("PloverCAT", "Reveal Steno"))
        self.downgradeRevealStenoEl.setToolTip(_translate("PloverCAT", "Downgrades selected element"))
        self.reveal_steno_refresh.setToolTip(_translate("PloverCAT", "Refresh reveal steno display"))
        self.toolbarEdit.setWindowTitle(_translate("PloverCAT", "Edit Toolbar"))
        self.dockNavigation.setWindowTitle(_translate("PloverCAT", "Navigation"))
        self.actionOpen.setText(_translate("PloverCAT", "Open..."))
        self.actionOpen.setToolTip(_translate("PloverCAT", "Open existing transcript folder"))
        self.actionOpen.setShortcut(_translate("PloverCAT", "Ctrl+O"))
        self.actionSaveAs.setText(_translate("PloverCAT", "Save Transcript Data at..."))
        self.actionSaveAs.setToolTip(_translate("PloverCAT", "Save transcript data to another location"))
        self.actionNew.setText(_translate("PloverCAT", "New"))
        self.actionNew.setToolTip(_translate("PloverCAT", "Create new transcript"))
        self.actionNew.setShortcut(_translate("PloverCAT", "Ctrl+N"))
        self.actionSave.setText(_translate("PloverCAT", "Save"))
        self.actionSave.setToolTip(_translate("PloverCAT", "Save transcript and paper tape contents"))
        self.actionSave.setShortcut(_translate("PloverCAT", "Ctrl+S"))
        self.actionQuit.setText(_translate("PloverCAT", "Quit"))
        self.actionQuit.setToolTip(_translate("PloverCAT", "Exit the editor"))
        self.actionQuit.setShortcut(_translate("PloverCAT", "Ctrl+Q"))
        self.actionClose.setText(_translate("PloverCAT", "Close"))
        self.actionClose.setToolTip(_translate("PloverCAT", "Close the transcript"))
        self.actionAddCustomDict.setText(_translate("PloverCAT", "Add Custom Dict"))
        self.actionAddCustomDict.setToolTip(_translate("PloverCAT", "Select a custom dictionary to use for the transcript"))
        self.actionPlainText.setText(_translate("PloverCAT", "Plain Text (.txt)"))
        self.actionPlainText.setToolTip(_translate("PloverCAT", "Export only the text from the transcript"))
        self.actionASCII.setText(_translate("PloverCAT", "ASCII (.txt)"))
        self.actionASCII.setToolTip(_translate("PloverCAT", "Export transcript in ASCII transcript format"))
        self.actionSubRip.setText(_translate("PloverCAT", "SubRip (.srt)"))
        self.actionSubRip.setToolTip(_translate("PloverCAT", "Export transcript as a SubRip caption file"))
        self.actionCut.setText(_translate("PloverCAT", "Cut"))
        self.actionCut.setToolTip(_translate("PloverCAT", "Cut text and associated steno data"))
        self.actionCut.setShortcut(_translate("PloverCAT", "Ctrl+X"))
        self.actionCopy.setText(_translate("PloverCAT", "Copy"))
        self.actionCopy.setToolTip(_translate("PloverCAT", "Copy text and associated steno data"))
        self.actionCopy.setShortcut(_translate("PloverCAT", "Ctrl+C"))
        self.actionPaste.setText(_translate("PloverCAT", "Paste"))
        self.actionPaste.setToolTip(_translate("PloverCAT", "Paste text and associated steno data"))
        self.actionPaste.setShortcut(_translate("PloverCAT", "Ctrl+V"))
        self.actionOpenAudio.setText(_translate("PloverCAT", "Open Audiovisual"))
        self.actionOpenAudio.setToolTip(_translate("PloverCAT", "Select an audiovisual file on computer to play"))
        self.actionOpenAudio.setShortcut(_translate("PloverCAT", "Ctrl+Shift+O"))
        self.actionSkipBack.setText(_translate("PloverCAT", "Skip Back"))
        self.actionSkipBack.setToolTip(_translate("PloverCAT", "Skip back in audio/video"))
        self.actionSkipBack.setShortcut(_translate("PloverCAT", "Ctrl+J"))
        self.actionSkipForward.setText(_translate("PloverCAT", "Skip Forward"))
        self.actionSkipForward.setToolTip(_translate("PloverCAT", "Skip forward in audio/video"))
        self.actionSkipForward.setShortcut(_translate("PloverCAT", "Ctrl+L"))
        self.actionStopAudio.setText(_translate("PloverCAT", "Stop"))
        self.actionStopAudio.setToolTip(_translate("PloverCAT", "Stop selected audio/video being played"))
        self.actionStopAudio.setShortcut(_translate("PloverCAT", "Ctrl+W"))
        self.actionSlowDown.setText(_translate("PloverCAT", "Slow Down"))
        self.actionSlowDown.setToolTip(_translate("PloverCAT", "Slow down playback"))
        self.actionSlowDown.setShortcut(_translate("PloverCAT", "Ctrl+Shift+S"))
        self.actionSpeedUp.setText(_translate("PloverCAT", "Speed Up"))
        self.actionSpeedUp.setToolTip(_translate("PloverCAT", "Speed up playback"))
        self.actionSpeedUp.setShortcut(_translate("PloverCAT", "Ctrl+Shift+G"))
        self.actionPlayPause.setText(_translate("PloverCAT", "Play/Pause"))
        self.actionPlayPause.setToolTip(_translate("PloverCAT", "Play or pause selected audio/video"))
        self.actionPlayPause.setShortcut(_translate("PloverCAT", "Ctrl+P"))
        self.actionMergeParagraphs.setText(_translate("PloverCAT", "Merge Paragraphs"))
        self.actionMergeParagraphs.setToolTip(_translate("PloverCAT", "Merge two paragraphs by selecting across two paragraphs, or place cursor in second of paragraphs to merge"))
        self.actionSplitParagraph.setText(_translate("PloverCAT", "Split Paragraph"))
        self.actionSplitParagraph.setToolTip(_translate("PloverCAT", "Split paragraph by placing cursor at position to split"))
        self.actionWindowFont.setText(_translate("PloverCAT", "Window Font"))
        self.actionWindowFont.setToolTip(_translate("PloverCAT", "Set font and size for window"))
        self.actionODT.setText(_translate("PloverCAT", "OpenDocumentText(.odt)"))
        self.actionODT.setToolTip(_translate("PloverCAT", "Export transcript as OpenDocumentText"))
        self.actionNormalCopy.setText(_translate("PloverCAT", "Normal Copy"))
        self.actionNormalCopy.setToolTip(_translate("PloverCAT", "Copy the text, but not steno data, for use in other applications"))
        self.actionNormalCopy.setShortcut(_translate("PloverCAT", "Ctrl+Shift+C"))
        self.actionFindReplacePane.setText(_translate("PloverCAT", "Find/Replace"))
        self.actionFindReplacePane.setToolTip(_translate("PloverCAT", "Open Find/Replace Pane if hidden"))
        self.actionFindReplacePane.setShortcut(_translate("PloverCAT", "Ctrl+F"))
        self.actionOpenTranscriptFolder.setText(_translate("PloverCAT", "Open Transcript Folder"))
        self.actionOpenTranscriptFolder.setToolTip(_translate("PloverCAT", "Open the transcript folder in the system file explorer"))
        self.actionRecordPause.setText(_translate("PloverCAT", "Record/Pause"))
        self.actionRecordPause.setToolTip(_translate("PloverCAT", "Start or pause the recording of audio"))
        self.actionRecordPause.setShortcut(_translate("PloverCAT", "Ctrl+Shift+P"))
        self.actionStopRecording.setText(_translate("PloverCAT", "Stop Recording"))
        self.actionStopRecording.setToolTip(_translate("PloverCAT", "Stop recording audio"))
        self.actionShowVideo.setText(_translate("PloverCAT", "Show/Hide Video"))
        self.actionShowVideo.setToolTip(_translate("PloverCAT", "Display or hide video window"))
        self.actionRemoveTranscriptDict.setText(_translate("PloverCAT", "Remove Transcript Dict"))
        self.actionRemoveTranscriptDict.setToolTip(_translate("PloverCAT", "Remove a transcript dictionary"))
        self.actionImportRTF.setText(_translate("PloverCAT", "Import RTF/CRE"))
        self.actionImportRTF.setToolTip(_translate("PloverCAT", "Import RTF file as a transcript"))
        self.actionCursorAtEnd.setText(_translate("PloverCAT", "Lock Cursor At End"))
        self.actionCursorAtEnd.setToolTip(_translate("PloverCAT", "Keep cursor at end of document for writing"))
        self.actionCaptureAllOutput.setText(_translate("PloverCAT", "Capture All Steno Output"))
        self.actionCaptureAllOutput.setToolTip(_translate("PloverCAT", "Record steno output even if window is not in focus"))
        self.actionUserManual.setText(_translate("PloverCAT", "Online User Manual"))
        self.actionUserManual.setToolTip(_translate("PloverCAT", "Open online user manual on GitHub"))
        self.actionAcknowledgements.setText(_translate("PloverCAT", "Acknowledgements"))
        self.actionPaperTape.setText(_translate("PloverCAT", "Paper Tape"))
        self.actionSuggestions.setText(_translate("PloverCAT", "Suggestions"))
        self.actionHistory.setText(_translate("PloverCAT", "History"))
        self.actionRevealSteno.setText(_translate("PloverCAT", "Reveal Steno"))
        self.actionAudioControls.setText(_translate("PloverCAT", "Audio Controls"))
        self.actionToolbox.setText(_translate("PloverCAT", "Toolbox"))
        self.actionClearParagraph.setText(_translate("PloverCAT", "Reset Paragraph"))
        self.actionClearParagraph.setToolTip(_translate("PloverCAT", "Reset paragraph by clearing all data and text"))
        self.actionRetroactiveDefine.setText(_translate("PloverCAT", "Retroactive Define"))
        self.actionRetroactiveDefine.setToolTip(_translate("PloverCAT", "Set new translation for strokes under selected text, replaces all occurrences of text"))
        self.actionRetroactiveDefine.setShortcut(_translate("PloverCAT", "Ctrl+R"))
        self.actionDefineLast.setText(_translate("PloverCAT", "Define Last Untrans"))
        self.actionDefineLast.setToolTip(_translate("PloverCAT", "Scan to find last untranslate, and define it for past and future occurrences"))
        self.actionDefineLast.setShortcut(_translate("PloverCAT", "Ctrl+Shift+R"))
        self.actionAbout.setText(_translate("PloverCAT", "About"))
        self.actionAbout.setToolTip(_translate("PloverCAT", "Show version information"))
        self.actionAbout.setShortcut(_translate("PloverCAT", "F1"))
        self.actionAutocompletion.setText(_translate("PloverCAT", "Autocompletion"))
        self.actionAutocompletion.setToolTip(_translate("PloverCAT", "Toggle to enable autocomplete"))
        self.actionPaperTapeFont.setText(_translate("PloverCAT", "Paper Tape Font"))
        self.actionPaperTapeFont.setToolTip(_translate("PloverCAT", "Set font for Paper Tape dock"))
        self.actionStyleFileSelect.setText(_translate("PloverCAT", "Select Style File..."))
        self.actionStyleFileSelect.setToolTip(_translate("PloverCAT", "Select style file (JSON or ODF)"))
        self.actionGenerateStyleFromTemplate.setText(_translate("PloverCAT", "Generate Style File From Template"))
        self.actionGenerateStyleFromTemplate.setToolTip(_translate("PloverCAT", "Select template file (ODT) and generate style json with supported formatting only."))
        self.actionCreateNewStyle.setText(_translate("PloverCAT", "Create New Style"))
        self.actionCreateNewStyle.setToolTip(_translate("PloverCAT", "Create new style based on existing style"))
        self.actionRefreshEditor.setText(_translate("PloverCAT", "Refresh Editor"))
        self.actionRefreshEditor.setToolTip(_translate("PloverCAT", "Refresh formatting for entire editor"))
        self.actionRefreshEditor.setShortcut(_translate("PloverCAT", "F5"))
        self.actionInsertNormalText.setText(_translate("PloverCAT", "Normal Text"))
        self.actionInsertNormalText.setToolTip(_translate("PloverCAT", "Insert normal text through dialog"))
        self.actionInsertNormalText.setShortcut(_translate("PloverCAT", "Ins"))
        self.actionShowAllCharacters.setText(_translate("PloverCAT", "Show All Characters"))
        self.actionShowAllCharacters.setToolTip(_translate("PloverCAT", "Show all characters, including invisible ones"))
        self.actionPlainASCII.setText(_translate("PloverCAT", "Plain ASCII (.txt)"))
        self.actionPlainASCII.setToolTip(_translate("PloverCAT", "Export transcript in simple ASCII transcript format with line numbers and page number, but no other formatting"))
        self.actionHTML.setText(_translate("PloverCAT", "HTML (.html)"))
        self.actionHTML.setToolTip(_translate("PloverCAT", "Export transcript as HTML"))
        self.actionAddAutocompletionTerm.setText(_translate("PloverCAT", "Add Autocompletion Term"))
        self.actionAddAutocompletionTerm.setToolTip(_translate("PloverCAT", "Store text to use in autocompletion"))
        self.actionAddAutocompletionTerm.setShortcut(_translate("PloverCAT", "Ctrl+Alt+R"))
        self.actionJumpToParagraph.setText(_translate("PloverCAT", "Jump to Paragraph ..."))
        self.actionJumpToParagraph.setToolTip(_translate("PloverCAT", "Jump to paragraph by paragraph number"))
        self.actionTranslateTape.setText(_translate("PloverCAT", "Translate Tape"))
        self.actionTranslateTape.setToolTip(_translate("PloverCAT", "Import tape file to translate to editor"))
        self.actionRTF.setText(_translate("PloverCAT", "RTF/CRE (*.rtf)"))
        self.actionInsertImage.setText(_translate("PloverCAT", "Image"))
        self.actionInsertImage.setToolTip(_translate("PloverCAT", "Insert image object"))
        self.actionBackgroundColor.setText(_translate("PloverCAT", "Background Color"))
        self.actionBackgroundColor.setToolTip(_translate("PloverCAT", "Set background color of editor window"))
        self.actionNavigation.setText(_translate("PloverCAT", "Navigation"))
        self.actionDeleteLast.setText(_translate("PloverCAT", "Delete Last Untrans"))
        self.actionDeleteLast.setToolTip(_translate("PloverCAT", "Scan to find last untranslate, and delete it"))
        self.actionAutomaticAffixes.setText(_translate("PloverCAT", "Automatic Paragraph Affixes"))
        self.actionAutomaticAffixes.setToolTip(_translate("PloverCAT", "Automatically end paragraphs with appropriate punctuation for style."))
        self.actionEditFields.setText(_translate("PloverCAT", "Edit Fields"))
        self.actionEditFields.setToolTip(_translate("PloverCAT", "Edit fields values"))
        self.actionEnableAutosave.setText(_translate("PloverCAT", "Autosave"))
        self.actionEnableAutosave.setToolTip(_translate("PloverCAT", "Enable autosave to backup file at defined time intervals"))
        self.actionEditAffixes.setText(_translate("PloverCAT", "Edit Paragraph Affixes"))
        self.actionEditAffixes.setToolTip(_translate("PloverCAT", "Add and edit paragraph affixes for styles"))
        self.actionSetAutosaveTime.setText(_translate("PloverCAT", "Set Autosave Time"))
        self.actionSetAutosaveTime.setToolTip(_translate("PloverCAT", "Set time intervals for autosave"))
        self.actionEditMenuShortcuts.setText(_translate("PloverCAT", "Edit Menu Shortcuts"))
        self.actionEditMenuShortcuts.setToolTip(_translate("PloverCAT", "Customize shortcuts for menu items"))
        self.actionEditIndices.setText(_translate("PloverCAT", "Edit Indices"))
        self.actionEditIndices.setToolTip(_translate("PloverCAT", "Add and edit index and index entries"))
        self.actionTranscriptSuggestions.setText(_translate("PloverCAT", "Transcript Suggestions"))
        self.actionTranscriptSuggestions.setToolTip(_translate("PloverCAT", "Analyze transcript for common words/n-grams to add to dictionary"))
        self.actionRedact.setText(_translate("PloverCAT", "Redact Text"))
        self.actionCaptioning.setText(_translate("PloverCAT", "Captioning"))
        self.actionFlushCaption.setText(_translate("PloverCAT", "Flush Caption"))
        self.actionMassTimestampChange.setText(_translate("PloverCAT", "Mass Timestamp Change"))
        self.actionAddChangeAudioTimestamps.setText(_translate("PloverCAT", "Add/Change All Audio Timestamps"))
        self.actionTape.setText(_translate("PloverCAT", "Paper Tape (*.tape)"))
        self.actionTape.setToolTip(_translate("PloverCAT", "Exports only the strokes from paper tape"))
        self.actionSpellcheck.setText(_translate("PloverCAT", "Spellcheck"))
        self.actionSpellcheck.setToolTip(_translate("PloverCAT", "Open Spellcheck Pane if hidden"))
        self.actionStenoSearch.setText(_translate("PloverCAT", "Steno Search"))
        self.actionStenoSearch.setToolTip(_translate("PloverCAT", "Open Steno Search pane if hidden"))
        self.actionStyling.setText(_translate("PloverCAT", "Styling"))
        self.actionStyling.setToolTip(_translate("PloverCAT", "Open style pane if hidden"))
        self.actionPageFormat.setText(_translate("PloverCAT", "Page Format"))
        self.actionPageFormat.setToolTip(_translate("PloverCAT", "Open page format pane if hidden"))
        self.actionParagraph.setText(_translate("PloverCAT", "Paragraph"))
        self.actionParagraph.setToolTip(_translate("PloverCAT", "Show paragraph attributes if hidden"))
        self.actionSearchWikipedia.setText(_translate("PloverCAT", "Wikipedia"))
        self.actionSearchWikipedia.setToolTip(_translate("PloverCAT", "Search selected text on Wikipedia in default browser"))
        self.actionSearchGoogle.setText(_translate("PloverCAT", "Google"))
        self.actionSearchGoogle.setToolTip(_translate("PloverCAT", "Search selected text on Google in default browser"))
        self.actionSearchDuckDuckGo.setText(_translate("PloverCAT", "DuckDuckGo"))
        self.actionSearchDuckDuckGo.setToolTip(_translate("PloverCAT", "Search selected text on DuckDuckGo in default browser"))
        self.actionSearchMerriamWebster.setText(_translate("PloverCAT", "Merriam-Webster"))
        self.actionSearchMerriamWebster.setToolTip(_translate("PloverCAT", "Search selected text on Merriam-Webster in default browser"))
        self.actionSearchOED.setText(_translate("PloverCAT", "OED"))
        self.actionSearchOED.setToolTip(_translate("PloverCAT", "Search selected text on Oxford English Dictionary in default browser"))
        self.actionRevertTranscript.setText(_translate("PloverCAT", "Revert Transcript"))
        self.actionRevertTranscript.setToolTip(_translate("PloverCAT", "Revert transcript to previously saved version"))
        self.actionViewPloverLog.setText(_translate("PloverCAT", "View Plover Log"))
        self.actionRunTests.setText(_translate("PloverCAT", "Run Tests"))
        self.actionColorSteno.setText(_translate("PloverCAT", "Steno"))
        self.actionColorText.setText(_translate("PloverCAT", "Typed Text"))
        self.actionColorAutomatic.setText(_translate("PloverCAT", "Automatic"))
        self.actionColorField.setText(_translate("PloverCAT", "Field"))
        self.actionColorIndex.setText(_translate("PloverCAT", "Index"))
from . import resources_rc
