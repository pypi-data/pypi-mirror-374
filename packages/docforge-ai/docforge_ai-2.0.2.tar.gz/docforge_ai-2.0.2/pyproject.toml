[build-system]
requires = ["setuptools>=45", "wheel", "setuptools-scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "docforge-ai"
version = "2.0.2"
description = "Self-contained AI-powered documentation generator"
readme = "README.md"
license = "MIT"
authors = [
    {name = "DocForge Community", email = "community@docforge.dev"}
]
maintainers = [
    {name = "DocForge Community", email = "community@docforge.dev"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Documentation",
    "Topic :: Text Processing :: Markup",

    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: OS Independent",
    "Environment :: Console",
]
keywords = [
    "documentation",
    "ai",
    "generator",
    "automation",
    "software-development",
    "project-management",
    "openai",
    "markdown"
]
requires-python = ">=3.10"
dependencies = [
    "openai>=1.0.0,<2.0.0",
    "tiktoken>=0.6.0",
    "pydantic>=2.6.0,<3.0.0",
    "pydantic-settings>=2.0.0",
    "python-dotenv>=1.0.0",
    "PyYAML>=6.0.0",
    "python-slugify>=8.0.0",
    "httpx>=0.24.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0"
]

[project.urls]
"Homepage" = "https://github.com/Venkatesh188/docforge"
"Bug Reports" = "https://github.com/Venkatesh188/docforge/issues"
"Feature Requests" = "https://github.com/Venkatesh188/docforge/issues/new?template=feature_request.yml"
"Documentation" = "https://github.com/Venkatesh188/docforge/wiki"
"Source" = "https://github.com/Venkatesh188/docforge"
"PyPI" = "https://pypi.org/project/docforge-ai/"

[project.scripts]
docforge-ai = "docforge.docforge:cli"

[tool.setuptools.packages.find]
include = ["backend*", "prompts*", "docforge*"]
exclude = ["tests*", "docs*", "examples*", "build*", "dist*", "*.egg-info*"]

[tool.setuptools.package-data]
"*" = ["*.md", "*.txt", "*.yml", "*.yaml", "*.json"]
"prompts" = ["*.md"]
"backend.app.templates" = ["*.py"]
"docforge" = ["*.py"]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | __pycache__
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "docs/source/conf.py",
    "old",
    "build",
    "dist",
    ".eggs",
    "*.egg",
]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
pythonpath = [".", "backend"]
asyncio_mode = "auto"
