# packages/python-sdk/tox.ini
# Tox configuration for testing multiple Python versions

[tox]
envlist = 
    py37
    py38
    py39
    py310
    py311
    py312
    lint
    type
    docs
    coverage
minversion = 4.0.0
isolated_build = true
skip_missing_interpreters = true

[testenv]
description = Run unit tests
deps = 
    -r{toxinidir}/requirements-dev.txt
commands = 
    pytest {posargs:tests}
setenv =
    PYTHONPATH = {toxinidir}
passenv = 
    DDEX_API_KEY
    CI
    GITHUB_*

[testenv:coverage]
description = Run tests with coverage
deps = 
    -r{toxinidir}/requirements-dev.txt
commands = 
    pytest --cov=ddex_workbench --cov-report=term-missing --cov-report=html --cov-report=xml {posargs:tests}
    
[testenv:lint]
description = Run linters
skip_install = true
deps = 
    black>=23.0.0
    flake8>=6.0.0
    flake8-docstrings>=1.7.0
    isort>=5.12.0
    pylint>=2.17.0
commands = 
    black --check --diff ddex_workbench tests
    isort --check-only --diff ddex_workbench tests
    flake8 ddex_workbench tests
    pylint ddex_workbench

[testenv:format]
description = Format code
skip_install = true
deps = 
    black>=23.0.0
    isort>=5.12.0
commands = 
    black ddex_workbench tests examples
    isort ddex_workbench tests examples

[testenv:type]
description = Run type checking
deps = 
    mypy>=1.0.0
    types-requests>=2.28.0
commands = 
    mypy ddex_workbench

[testenv:docs]
description = Build documentation
deps = 
    sphinx>=5.0.0
    sphinx-rtd-theme>=1.2.0
    sphinx-autodoc-typehints>=1.22.0
commands = 
    sphinx-build -W -b html docs docs/_build/html

[testenv:build]
description = Build distribution packages
skip_install = true
deps = 
    build>=0.10.0
    twine>=4.0.0
commands = 
    python -m build
    twine check dist/*

[testenv:publish]
description = Publish to PyPI
skip_install = true
deps = 
    twine>=4.0.0
passenv = 
    TWINE_USERNAME
    TWINE_PASSWORD
    TWINE_REPOSITORY_URL
commands = 
    twine upload {posargs:--repository testpypi} dist/*

[testenv:dev]
description = Development environment
usedevelop = true
deps = 
    -r{toxinidir}/requirements-dev.txt
commands = 
    python -c "print('Development environment ready')"

# Tool configurations

[flake8]
max-line-length = 100
extend-ignore = E203, W503, D100, D101, D102, D103, D104, D105, D106, D107
exclude = 
    .git,
    __pycache__,
    .tox,
    .eggs,
    *.egg,
    build,
    dist,
    .venv,
    venv,
    docs

[pytest]
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*
addopts = 
    -ra
    --strict-markers
    --ignore=docs
    --ignore=setup.py
    --ignore=.tox
    --doctest-modules
    --tb=short
    -v
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests

[coverage:run]
source = ddex_workbench
omit = 
    */tests/*
    */test_*.py
    */__init__.py
    */setup.py

[coverage:report]
exclude_lines = 
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod

[isort]
profile = black
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true