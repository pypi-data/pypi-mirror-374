[build-system]
requires = [ "setuptools>=61.0", "wheel",]
build-backend = "setuptools.build_meta"

[project]
name = "kuzualchemy"
version = "0.2.0.dev5"
description = "SQLAlchemy-like ORM for Kuzu graph database"
readme = "README.md"
keywords = [ "kuzu", "graph", "database", "orm", "sqlalchemy", "cypher", "graph-database",]
classifiers = [ "Development Status :: 4 - Beta", "Intended Audience :: Developers", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3.9", "Programming Language :: Python :: 3.10", "Programming Language :: Python :: 3.11", "Programming Language :: Python :: 3.12", "Topic :: Database", "Topic :: Database :: Database Engines/Servers", "Topic :: Software Development :: Libraries :: Python Modules", "Typing :: Typed",]
requires-python = ">=3.8"
dependencies = [ "pydantic>=2.0.0", "kuzu", "typing-extensions", "polars", "pyarrow", "pyahocorasick", "importlib-metadata>=1.0; python_version<'3.8'",]
[[project.authors]]
name = "FanaticPythoner"
email = "info@kuzualchemy.com"

[project.license]
text = "GPL-3.0"

[project.optional-dependencies]
dev = [ "pytest>=7.0.0", "pytest-asyncio>=0.21.0", "pytest-cov>=4.0.0", "pytest-mock>=3.10.0", "black>=23.0.0", "isort>=5.12.0", "mypy>=1.0.0", "flake8>=6.0.0", "pre-commit>=3.0.0",]
docs = [ "sphinx>=6.0.0", "sphinx-rtd-theme>=1.2.0", "myst-parser>=1.0.0",]
test = [ "pytest>=7.0.0", "pytest-asyncio>=0.21.0", "pytest-cov>=4.0.0", "pytest-mock>=3.10.0", "pytest-benchmark>=4.0.0",]

[project.urls]
Homepage = "https://github.com/FanaticPythoner/kuzualchemy"
Documentation = "https://kuzualchemy.readthedocs.io"
Repository = "https://github.com/FanaticPythoner/kuzualchemy"
"Bug Tracker" = "https://github.com/FanaticPythoner/kuzualchemy/issues"

[tool.black]
line-length = 88
target-version = [ "py38", "py39", "py310", "py311", "py312",]
include = "\\.pyi?$"
extend-exclude = "/(\n  # directories\n  \\.eggs\n  | \\.git\n  | \\.hg\n  | \\.mypy_cache\n  | \\.tox\n  | \\.venv\n  | build\n  | dist\n)/\n"

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = [ "kuzualchemy",]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true
[[tool.mypy.overrides]]
module = "kuzu.*"
ignore_missing_imports = true

[tool.setuptools.package-dir]
"" = "src"

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [ "tests",]
python_files = [ "test_*.py", "*_test.py",]
python_classes = [ "Test*",]
python_functions = [ "test_*",]
markers = [ "slow: marks tests as slow (deselect with '-m \"not slow\"')", "integration: marks tests as integration tests", "unit: marks tests as unit tests", "benchmark: marks tests as benchmark tests",]

[tool.coverage.run]
source = [ "src/kuzualchemy",]
omit = [ "*/tests/*", "*/test_*", "*/__pycache__/*",]

[tool.coverage.report]
exclude_lines = [ "pragma: no cover", "def __repr__", "if self.debug:", "if settings.DEBUG", "raise AssertionError", "raise NotImplementedError", "if 0:", "if __name__ == .__main__.:", "class .*\\bProtocol\\):", "@(abc\\.)?abstractmethod",]

[tool.setuptools.packages.find]
where = [ "src",]
include = [ "kuzualchemy*",]
