# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: build and testing

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install flake8
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest wheel
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=50 --max-line-length=79 --statistics

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    - name: Cache test data
      id: cache-test
      uses: actions/cache@v3
      env:
        cache-name: cache-test-data
      with:
        path: |
          ./test/data
        key: ${{ runner.os }}-build-${{ env.cache-name }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Install specex and dependencies
      run: |
        pip install .[all,test]
        chmod +x redrock_venv_setup.sh && ./redrock_venv_setup.sh --noenv
    - name: Running tests
      run: |
        python -m coverage run -m unittest test/test_all.py
    - name: Coveralls
      uses: coverallsapp/github-action@v2
