# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
from ...types.company_details import CompanyDetails
import typing_extensions
from ...types.company_contact import CompanyContact
from ...core.serialization import FieldMetadata
from ...types.messaging import Messaging
from ...types.point_of_contact import PointOfContact
import typing
from ...types.optionals import Optionals
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class CompanyRegisterRequestCompany(UniversalBaseModel):
    """
    Register a new company
    """

    company: CompanyDetails
    company_contact: typing_extensions.Annotated[CompanyContact, FieldMetadata(alias="companyContact")]
    messaging: Messaging
    point_of_contact: typing_extensions.Annotated[PointOfContact, FieldMetadata(alias="pointOfContact")]
    optionals: typing.Optional[Optionals] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
