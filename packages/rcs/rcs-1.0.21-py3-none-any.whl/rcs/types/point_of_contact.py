# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing_extensions
from ..core.serialization import FieldMetadata
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import typing


class PointOfContact(UniversalBaseModel):
    poc_name: typing_extensions.Annotated[str, FieldMetadata(alias="pocName")] = pydantic.Field()
    """
    Point of contact's name.
    """

    poc_title: typing_extensions.Annotated[str, FieldMetadata(alias="pocTitle")] = pydantic.Field()
    """
    Point of contact's title.
    """

    poc_email: typing_extensions.Annotated[str, FieldMetadata(alias="pocEmail")] = pydantic.Field()
    """
    Point of contact's email address.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
