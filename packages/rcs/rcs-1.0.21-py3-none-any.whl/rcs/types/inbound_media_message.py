# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing_extensions
import typing
from ..core.serialization import FieldMetadata
from .media_payload import MediaPayload
from .inbound_message_metadata import InboundMessageMetadata
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class InboundMediaMessage(UniversalBaseModel):
    message_type: typing_extensions.Annotated[
        typing.Optional[typing.Literal["media"]], FieldMetadata(alias="messageType")
    ] = None
    text: typing.Optional[str] = None
    media_urls: typing_extensions.Annotated[typing.List[MediaPayload], FieldMetadata(alias="mediaUrls")]
    from_: typing_extensions.Annotated[str, FieldMetadata(alias="from")]
    to: str
    metadata: typing.Optional[InboundMessageMetadata] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
