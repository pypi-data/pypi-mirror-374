# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import typing


class RcsFunctionalities(UniversalBaseModel):
    is_enabled: bool = pydantic.Field()
    """
    Indicates if RCS is enabled.
    """

    standalone_rich_card: bool = pydantic.Field()
    """
    Indicates if standalone rich cards are supported.
    """

    carousel_rich_card: bool = pydantic.Field()
    """
    Indicates if carousel rich cards are supported.
    """

    create_calendar_event_action: bool = pydantic.Field()
    """
    Indicates if buttons to create a calendar event are supported.
    """

    dial_action: bool = pydantic.Field()
    """
    Indicates if dial buttons are supported.
    """

    open_url_action: bool = pydantic.Field()
    """
    Indicates if open URL buttons are supported.
    """

    share_location_action: bool = pydantic.Field()
    """
    Indicates if share location buttons are supported.
    """

    view_location_action: bool = pydantic.Field()
    """
    Indicates if view location buttons are supported.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
