[build-system]
requires = ["setuptools>=80.9.0", "wheel>=0.45.1"]
build-backend = "setuptools.build_meta"

[project]
name = "alloy-ai"
version = "0.3.1"
description = "Alloy (Python): Python for logic. English for intelligence."
readme = "README.md"
requires-python = ">=3.10"
authors = [{ name = "George Lydakis" }]
license = { text = "MIT" }
dependencies = [
  "openai>=1.99.6,<2",
  "python-dotenv>=1.1.1,<2",
]
classifiers = [
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]

[project.urls]
Homepage = "https://github.com/lydakis/alloy"
Repository = "https://github.com/lydakis/alloy"
Issues = "https://github.com/lydakis/alloy/issues"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
where = ["src"]
include = ["alloy*"]

[tool.setuptools.package-data]
alloy = ["py.typed", "__init__.pyi"]

[project.optional-dependencies]
openai = ["openai>=1.99.6,<2", "python-dotenv>=1.1.1,<2"]
anthropic = ["anthropic>=0.62.0,<0.65"]
gemini = ["google-genai>=1.29.0,<2", "aiohttp>=3.9,<4"]
providers = [
  "openai>=1.99.6,<2",
  "python-dotenv>=1.1.1,<2",
  "anthropic>=0.62.0,<0.65",
  "google-genai>=1.29.0,<2",
  "aiohttp>=3.9,<4",
  "ollama>=0.5.3,<0.6",
]
ollama = ["ollama>=0.5.3,<0.6"]
dev = [
  "pytest>=8.4.1,<9",
  "pytest-asyncio>=0.25.2,<1.2",
  "pytest-cov>=5.0.0,<7",
  "pytest-xdist>=3.6.1,<4",
  "ruff>=0.12.8,<0.13",
  "black>=25.1.0,<26",
  "mypy>=1.17.1,<2",
  "pre-commit>=4.3.0,<5",
  "hypothesis>=6.115.0,<7",
  "python-dateutil>=2.9.0.post0,<3",
]
docs = [
  "mkdocs>=1.6,<2",
  "mkdocs-material>=9.5,<10",
  "mkdocstrings>=0.28,<0.31",
  "mkdocstrings-python>=1.16,<2",
  "pymdown-extensions>=10.11,<11",
  "mkdocs-llmstxt>=0.3,<1",
  "mkdocs-gen-files>=0.5,<1",
]

[tool.pytest.ini_options]
addopts = "-q"
testpaths = ["tests"]
asyncio_default_fixture_loop_scope = "function"
markers = [
  "unit",
  "contracts",
  "errors",
  "providers",
  "integration",
  "parity_live",
  "examples",
  "bench",
  "slow",
  "serial",
]
filterwarnings = [
  # Avoid noisy plugin deprecation warnings in CI and local runs (older pytest-asyncio)
  'ignore:The configuration option "asyncio_default_fixture_loop_scope" is unset\.:pytest.PytestDeprecationWarning',
]

[tool.ruff]
line-length = 100
target-version = "py310"

[tool.black]
line-length = 100
target-version = ["py310"]

[tool.mypy]
python_version = "3.10"
warn_unused_ignores = true
ignore_missing_imports = true
strict_optional = true
show_error_codes = true
pretty = true
exclude = [".venv/"]

[tool.coverage.run]
source = ["src/alloy"]
omit = [
  "src/alloy/models/*",
  "src/alloy/react.py",
]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
]
