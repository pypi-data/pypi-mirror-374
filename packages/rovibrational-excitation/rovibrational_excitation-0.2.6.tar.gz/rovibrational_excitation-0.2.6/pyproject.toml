[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "rovibrational-excitation"
version = "0.2.6"
description = "Rovibrational wave-packet simulation toolkit"
readme = "README.md"
authors = [{name = "Hiroki Tsusaka", email = "tsusaka4research@gmail.com"}]
license = {text = "MIT"} 
requires-python = ">=3.10"

classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11", 
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Scientific/Engineering :: Chemistry",
]

dependencies = [
    "numpy>=1.22",
    "scipy>=1.10", 
    "numba>=0.59",
    "cupy; extra == \"gpu\"",
    "pandas",
    "tqdm",
]

[project.optional-dependencies]
gpu = ["cupy-cuda12x"]   # 例：GPU 用 extras
dev = ["pytest", "build", "twine", "ruff", "black", "mypy", "coverage"]

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]
include = ["rovibrational_excitation*", "linmol_dipole*", "rot_tdms*", "vib_tdms*"]
exclude = ["*.tests", "*.tests.*", "tests.*", "tests"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: マークされたテストは実行時間が長い (deselect with '-m \"not slow\"')",
]
addopts = "-v --tb=short --strict-markers"
filterwarnings = [
    "ignore::DeprecationWarning:rovibrational_excitation.*",
    "ignore::PendingDeprecationWarning:numpy.*matlib",
    "ignore::RuntimeWarning:numpy.*",
    "ignore::UserWarning:numba.*",
]

[tool.coverage.run]
source = ["src"]
branch = true
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/site-packages/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
ignore_errors = true
show_missing = true
skip_covered = false

[tool.ruff]
target-version = "py310"
line-length = 88
fix = true

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by formatter
    "N803",  # argument name should be lowercase (physics conventions)
    "N806",  # variable name should be lowercase (physics conventions)
    "N816",  # variable name should not be mixedCase (physics conventions)
    "UP007", # Use X | Y for type annotations (compatibility with older Python versions)
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
