name: Comprehensive Testing Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.9', '3.10', '3.11', '3.12']
        exclude:
          # Reduce matrix size for faster CI
          - os: macos-latest
            python-version: '3.9'
          - os: windows-latest
            python-version: '3.9'
          - os: windows-latest
            python-version: '3.10'

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install pytest pytest-cov pytest-xdist pytest-mock pytest-timeout
        pip install hypothesis numpy torch scikit-learn scipy
        pip install coverage[toml] codecov
        
    - name: Install system dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential
        
    - name: Lint with flake8 (optional)
      run: |
        pip install flake8
        # Stop the build if there are Python syntax errors or undefined names
        flake8 src/ --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 src/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      continue-on-error: true
      
    - name: Run unit tests with coverage
      run: |
        pytest tests/unit/ --cov=src/meta_learning --cov-report=xml --cov-report=term-missing --cov-fail-under=85 -v --tb=short
        
    - name: Run integration tests
      run: |
        pytest tests/integration/ --cov=src/meta_learning --cov-append --cov-report=xml -v --tb=short
        
    - name: Run property-based tests
      run: |
        pytest tests/property/ --cov=src/meta_learning --cov-append --cov-report=xml -v --tb=short
        
    - name: Run FIXME solution tests
      run: |
        pytest -m "fixme_solution" --cov=src/meta_learning --cov-append --cov-report=xml -v --tb=short
        
    - name: Upload coverage to Codecov
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  test-research-accuracy:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install pytest pytest-cov pytest-mock
        pip install hypothesis numpy torch scikit-learn scipy
        
    - name: Run research accuracy validation tests
      run: |
        pytest tests/integration/test_fixme_solutions.py::TestFixmeResearchAccuracyValidation -v --tb=short
        
    - name: Run research paper cross-reference tests
      run: |
        pytest -m "research_accuracy" -v --tb=short
      continue-on-error: true  # Research accuracy tests might be strict

  performance-tests:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install pytest pytest-benchmark
        pip install torch numpy scikit-learn
        
    - name: Run performance tests
      run: |
        pytest -m "slow" --tb=short
      continue-on-error: true  # Performance tests might be flaky

  gpu-tests:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install pytest torch numpy
        
    - name: Check CUDA availability
      run: |
        python -c "import torch; print(f'CUDA available: {torch.cuda.is_available()}')"
        
    - name: Run GPU tests (if available)
      run: |
        pytest -m "gpu_required" --tb=short
      continue-on-error: true  # GPU might not be available in CI

  test-summary:
    runs-on: ubuntu-latest
    needs: [test, test-research-accuracy]
    if: always()
    steps:
    - name: Test Summary
      run: |
        echo "## Test Results Summary" >> $GITHUB_STEP_SUMMARY
        echo "✅ Unit Tests: ${{ needs.test.result }}" >> $GITHUB_STEP_SUMMARY
        echo "🔬 Research Accuracy Tests: ${{ needs.test-research-accuracy.result }}" >> $GITHUB_STEP_SUMMARY
        echo "### Coverage Requirements:" >> $GITHUB_STEP_SUMMARY
        echo "- Unit test coverage: ≥85%" >> $GITHUB_STEP_SUMMARY
        echo "- Integration test coverage: Comprehensive FIXME solutions" >> $GITHUB_STEP_SUMMARY
        echo "- Property-based tests: Mathematical invariants verified" >> $GITHUB_STEP_SUMMARY
        echo "### Test Categories:" >> $GITHUB_STEP_SUMMARY
        echo "- 🧪 Unit Tests: Individual module functionality" >> $GITHUB_STEP_SUMMARY
        echo "- 🔗 Integration Tests: Cross-module FIXME solutions" >> $GITHUB_STEP_SUMMARY
        echo "- 📊 Property Tests: Mathematical properties with Hypothesis" >> $GITHUB_STEP_SUMMARY
        echo "- 📝 FIXME Tests: All 45+ implemented solutions" >> $GITHUB_STEP_SUMMARY
        echo "- 🎯 Research Accuracy: Algorithm validation against papers" >> $GITHUB_STEP_SUMMARY